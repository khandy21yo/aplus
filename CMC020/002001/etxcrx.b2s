10	!---------------------------------------------------------------&
	!	GASBOY			-GAS				&
	!	Program Description 					&
	!								&
	!	ETXCRX.B2S	V1.0	April 1985			&
	!								&
	! Author - Glenn Carl Hillam, Computer Management Center, Inc.	&
	!								&
	! Files-ETXCRX.DAT	-ISAM	File Description 		&
	!		     						&
	!---------------------------------------------------------------&
	!		      Copyright (c) 1984 by 			&
	!	  Computer Management Center, Idaho Falls, Idaho	&
	! 								&
	! This software is furnished under a license and may be used	&
	! and copied only in accordance with the terms of such license 	&
	! and with the inclusion of the above copyright notice.  This 	&
	! software or any other copies therof may not be provided or 	&
	! otherwise made available to any other person.  No title to 	&
	! and ownership of the software is hereby transferred.		&
	!      The information in this software is subject to change	&
	! without notice and should not be construed as a committment 	&
	! by Computer Management Center. 				&
	!      CMC assumes no responsibility for the use or reliability &
	! of its software on equipment which is not supported by CMC. 	&
	!---------------------------------------------------------------&

50	ON ERROR GOTO 19000 &
\	DIM DEFAULT$(6%) &

60	OPEN 'KB:' AS FILE #1%, MODE 8%+256% 	! Echo Cntl,Disbl Hibrn,Cntl-C &
\	CH%=1%				! Keyboard channel 	&
\	ESC$=CHR$(155%)			! Escape code for VT100 &
\	CLSCN$=ESC$+'[H'+ESC$+'[J'	! Clear entire screen 	&
\	CLRLIN$=ESC$+'[2K'		! Erase entire line 	&
\	G.OFF$=ESC$+'[m'		! Select graphic off 	&
\	B.ON$=ESC$+'[1m'		! Bold lettering  	&
\	BLINK.ON$=ESC$+'[5m'		! Blinking cursor 	&
\	R.ON$=ESC$+'[7m'		! Reverse video 	&
\	COLM.ON$=ESC$+'[?3h'		! 132 Column mode 	&
\	COLM.OFF$=ESC$+'[?3l'		! 80 Column mode 	&
\	CLRBOT$=ESC$+'[21;1H'+ESC$+'[J'	! Erase to end of screen&
\	LDS.ON$=ESC$+'(0'		! Line drawing set 	&
\	USASCII$=ESC$+'(B'		! United States ASCII 	&

80	!COM(THIS) DROP.DEAD.DATE$ = 8, VERSION.NO$ = 6, SERIAL.NO$ = 10 &
	DROP.DEAD.DATE$='        ' &
\	VERSION.NO$='V1.0' &
\	DATE.TIME$=SYS(CHR$(6%)+CHR$(20%)+CHR$(0%)+CHR$(0%)+CHR$(1%)+ &
			CHR$(SWAP%(1%))+STRING$(11%,0%)+CHR$(SWAP%(0%))+ &
			CHR$(1%)+CHR$(SWAP%(1%))) &
\	IF 	DROP.DEAD.DATE$<>'' &
	THEN	IF 	DROP.DEAD.DATE$<MID(DATE.TIME$,7%,8%) &
		THEN	MESG$=MID(SYS(CHR$(6%)+CHR$(9%)+CHR$(47%)),3%,30%) &
\			PRINT #CH%, MESG$; &
\			V$=SYS(CHR$(9%)) &

100	DEVICE.CH%	= 02% &
\	ETXCRX.CH%	= 02% &
\	CHART.CH%	= 04% &
\	INVDES.CH%	= 06% &
\	MENU.CH%   	= 12% &
&
\	LOOP.DATA% = 6% &
\	KEY.LEN%   = 19% &
\	DATA.LEN%  = 64% &

200	IF 	FNO%(DEVICE.CH%,'DEVICE.DAT','/R0','')=0% &
	THEN	ETXCRX.DEVICE$=CVT$$(MID(FNL$,7%,20%),-1%) &
			IF FNG%(DEVICE.CH%,'ETXCRX')=0% &
\		CHART.DEVICE$=CVT$$(MID(FNL$,7%,20%),-1%) &
			IF FNG%(DEVICE.CH%,'CHART ')=0% &
\		INVDES.DEVICE$=CVT$$(MID(FNL$,7%,20%),-1%) &
			IF FNG%(DEVICE.CH%,'INVDES')=0% &
\		V%=FNC%(DEVICE.CH%) &

300	V%=FNO%(ETXCRX.CH%,ETXCRX.DEVICE$+'ETXCRX.DAT','/RW','') &
\	V%=FNO%(ETXCRX.CH%,ETXCRX.DEVICE$+'ETXCRX.DAT','/CR:'+ &
	NUM1$(KEY.LEN%)+','+NUM1$(DATA.LEN%),'') IF FNS% = 5% &
\	IF 	FNS% &
	THEN	V$=FNMESS$(CH%,FNS%,'ETXCRX.DAT',0%,-1%) &
\		GOTO 1045 &

310	CHART.FLAG%=FNO%(CHART.CH%,CHART.DEVICE$+'CHART.DAT','/RO','') &
\	INVDES.FLAG%=FNO%(INVDES.CH%,INVDES.DEVICE$+'INVDES.DAT','/RO','') &

400	OPEN 'MENU.FIL/RO' FOR INPUT AS FILE MENU.CH% &
\	DIM #12%, A0$(1%)=64% &
\	COMPANY$=CVT$$(RIGHT(A0$(1%),2%),128%) &
\	CLOSE MENU.CH% &

450	OPEN 'NL:' AS FILE 12%, RECORDSIZE 64% &
\	FIELD #12%,		01% AS ETXCRX.TAXCAT$,	&
				01% AS ETXCRX.TAX.TYPE$,&
				15% AS ETXCRX.PRDNUM$,	&
				06% AS ETXCRX.PRDCAT$,	&
				08% AS ETXCRX.RATE$,	&
				08% AS ETXCRX.LIAACC$	&
\	FIELD #12%, 	64% AS ETXCRX.BUF$ 	&

500	FRAME$ = FRAME$ + FNP$(NUM1$(I%)+';1')+' '+FNP$(NUM1$(I%)+';80')+' ' &
							FOR I%=2% TO 19% &
\	COMMAND$=' ' &
\	COMMAND$=COMMAND$+RIGHT(NUM1$(I%+100%),2%)+' ' FOR I%=1% TO LOOP.DATA% &

1000	!--------------------------------------------PROGRAM RESTART POINT &
	IF 	FNG%(ETXCRX.CH%,'')=0% &
	THEN	KEY.POINTER%=FNR(ETXCRX.CH%) &
\		DATA.POINTER%=FNR(ETXCRX.CH%+1%) &
\		GOTO 1010 &

1002	PRINT #CH%, G.OFF$; &
\	GOSUB 1060 &
\	GOTO 1030 &

1005	IF 	FNN%(ETXCRX.CH%) &
	THEN	18910 &
	ELSE	KEY.POINTER%=FNR(ETXCRX.CH%) &
\		DATA.POINTER%=FNR(ETXCRX.CH%+1%) &
\		GOTO 1015 &

1010	PRINT #CH%, COLM.OFF$;FNSR$('1;24');G.OFF$; &
\	GOSUB 1060 &

1015	GOSUB 6000 &

1030	CHNG.FLAG%=0% &
\	PRINT #CH%, CLRBOT$;G.OFF$; &
		'COMMAND: Add Erase Change Blank Initialize Default '; &
		'Find Next Restore View';FNP$('22;10');'Quit'; &
\	OPT$=CVT$$(FNINP$(CH%,128%,' ',1%,1%),32%) &
\	OPT$='A' IF OPT$='' &
\	GOTO 1030 IF KEY.POINTER%=0% AND INSTR(1%,'AQD',OPT$)=0% &

1040	GOTO 1050 IF OPT$<>'Q' &

1045	PRINT #CH%, CLSCN$;FNSR$('1;24');FNP$('1;75');B.ON$;BLINK.ON$; &
		R.ON$;'WAIT';G.OFF$;FNP$('24;1');FNX%('',0%,''); &

1050	GOTO 1000 	IF OPT$='R' 		! Restore	&
\	GOTO 1005 	IF OPT$='N' 		! Next		&
\	GOTO 2000 	IF OPT$='A' OR OPT$='F' ! Add, Find	&
\	GOTO 2200 	IF OPT$='C' OR OPT$='B' ! Change, Blank	&
\	GOTO 2400 	IF OPT$='E' 		! Erase 	&
\	GOTO 2500 	IF OPT$='D' 		! Default	&
\	GOTO 2600 	IF OPT$='I' 		! Initialize	&
\	GOTO 17000      IF OPT$='V' 		! View		&
\	GOTO 1030 		    		&

1060	TITLE$     = 'TAX CROSS REFERENCE' &
\	PRINT #CH%, CLSCN$;R.ON$;LEFT(TITLE$,39%);SPACE$(40%-LEN(TITLE$)); &
			SPACE$(40%-LEN(COMPANY$));COMPANY$; &
			FRAME$; FNP$('20;1');SPACE$(80%);G.OFF$; &
\	PRINT #CH%, 	FNP$('06;26');'(01) Tax Cat.'; &
			FNP$('08;26');'(02) Tax Type'; &
			FNP$('10;26');'(03) Product Number'; &
			FNP$('12;26');'(04) Product Cat.'; &
			FNP$('14;26');'(05) Tax Rate'; &
			FNP$('16;26');'(06) Lia account'; &
\	RETURN &

2000	!-------------------------------------------------SEARCH FOR KEYS &
	OPTION$='ADD ' &
\	OPTION$='FIND ' IF OPT$='F' &
\	INP$='' &
\	FOR LOOP%=1% TO LOOP.DATA% &
\		INP$=DEFAULT$(LOOP%) IF OPT$='A' &
\		GOSUB 6030 &
\	NEXT LOOP% &
\	FOR LOOP%=1% TO 3%  &
\		ON LOOP% GOSUB 6210,6230,6250 &
\		SEARCH.KEY$=ETXCRX.TAXCAT$+'' IF LOOP%=1% &
\		SEARCH.KEY$=SEARCH.KEY$+ETXCRX.TAX.TYPE$+'' IF LOOP%=2% &
\		SEARCH.KEY$=SEARCH.KEY$+ETXCRX.TAXCAT$+'' IF LOOP%=3% &
\	NEXT LOOP%   &
\	IF 	OPT$='F' OR FNG%(ETXCRX.CH%,SEARCH.KEY$)=0% &
	THEN	KEY.POINTER%=FNR(ETXCRX.CH%) &
\		DATA.POINTER%=FNR(ETXCRX.CH%+1%) &
\		GOTO 1015 &

2100	!-----------------------------------------------------ADD RECORD &
  	GOSUB 6010 FOR LOOP%=4% TO LOOP.DATA% &
\	IF 	FNA%(ETXCRX.CH%,ETXCRX.BUF$) &
	THEN	V$=FNMESS$(CH%,FNS%,'ETXCRX.DAT',0%,-1%) &
\		GOTO 1000 &

2110	KEY.POINTER%=FNR(ETXCRX.CH%) &
\	DATA.POINTER%=FNR(ETXCRX.CH%+1%) &
\	GOTO 1030 &

2200	!----------------------------------------CHANGE OR BLANK RECORD	&
	IF 	OPT$='B' &
	THEN	OPTION$ = 'BLANK ' &
	ELSE	OPTION$ = 'CHANGE ' &
\		CHNG.FLAG% = -1% &

2210	PRINT #CH%, CLRBOT$; OPTION$+':'; &
\	INP$=CVT$$(FNINP$(CH%,128%,' ',2%,1%),32%) &
\	GOTO 1030 IF INP$='' &
\	LOOP%=(INSTR(1%,COMMAND$,' '+INP$+' ')+2%)/3% &
\	GOTO 2210 IF (LOOP%=0% AND OPT$='C') OR (LOOP%<3% AND OPT$='B') &
\	IF 	OPT$='C' &
	THEN	GOSUB 6010 &
	ELSE	INP$='' &
\		GOSUB 6030 &

2220	GOSUB 2900 &
\	GOTO 2210 IF FNS%=0% &
\	V$=FNMESS$(CH%,FNS%,'ETXCRX.DAT',0%,-1%) &
\	GOTO 1010 &

2400	!------------------------------------------------ ERASE RECORD	&
	PRINT #CH%, CLRBOT$;'Confirm erasure (Yes/No) '; &
\	INP$=CVT$$(FNINP$(CH%,128%,' ',1%,1%),32%) &
\	GOTO 1030 IF INP$<>'Y' &

2420	IF 	FND%(ETXCRX.CH%,'') &
	THEN	V$=FNMESS$(CH%,FNS%,'ETXCRX.DAT',0%,-1%) &
	ELSE	PRINT #CH%,FNP$('24;1');CLRLIN$;'Record has been erased.'; &
			FNP$('24;55');'Hit any key to continue '; &
\		NW$=FNINP$(CH%,128%,' ',1%,1%) &

2430	GOTO 1005 &

2500	!-----------------------------------------------SET DEFAULT VALUES &
	OPTION$='DEFAULT ' &
\	FOR LOOP%=1% TO LOOP.DATA% &
\		INP$=DEFAULT$(LOOP%) &
\		GOSUB 6030 &
\	NEXT LOOP% &

2510	PRINT #CH%, CLRBOT$;'Default:'; &
\	INP$=CVT$$(FNINP$(CH%,128%,' ',2%,1%),32%) &
\	GOTO 1010 IF INP$='' &
\	LOOP%=(INSTR(1%,COMMAND$,' '+INP$+' ')+2%)/3% &
\	GOTO 2510 IF LOOP%<3% &
\	GOSUB 6010 &
\	DEFAULT$(LOOP%)=INP$ &
\	GOTO 2510 &

2600	!-----------------------------------------------INITIALIZATION &
	INITIALIZE$=' ' &
\	INP$='' &
\	GOSUB 6030 FOR LOOP%=1% TO LOOP.DATA% &

2610	PRINT #CH%, CLRBOT$;FNP$('22;1');INITIALIZE$; &
					FNP$('21;1');'Field to initialize:'; &
\	INP$=CVT$$(FNINP$(CH%,128%,' ',2%,1%),32%) &
\	IF 	INP$<>'' &
	THEN	LOOP%=(INSTR(1%,COMMAND$,' '+INP$+' ')+2%)/3% &
\		INITIALIZE$=INITIALIZE$+INP$+' ' IF LOOP%<>0% &
			AND (INSTR(1%,INITIALIZE$,' '+INP$+' ')+2%)/3%=0% &
\		GOTO 2610 &

2620	GOTO 1010 IF INITIALIZE$='' &
\	OPT$='C' &
\	OPTION$='INITIALIZE ' &
\	CHNG.FLAG%=-1% &
\	INP$='' &
\	GOSUB 6030 FOR LOOP%=1% TO LOOP.DATA% &
\	GOTO 2660 &

2650	GOTO 18910 IF FNN%(ETXCRX.CH%) &
\	KEY.POINTER%=FNR(ETXCRX.CH%) &
\	DATA.POINTER%=FNR(ETXCRX.CH%+1%) &

2660	GOSUB 6000 &
\	FOR I%=1% TO LEN(INITIALIZE$)/3% &
\		LOOP%=(INSTR(1%,COMMAND$,MID(INITIALIZE$,I%*3%-2%,3%))+2%)/3% &
\		GOSUB 6010 &
\		IF 	INP$<>'' &
		THEN	GOSUB 2900 &
\			IF 	FNS% &
			THEN	V$=FNMESS$(CH%,FNS%,'ETXCRX.DAT',0%,-1%) &
\				GOTO 1010 &

2670	NEXT I% &
\	GOTO 2650 &

2900	!-------------------------------------------------UPDATE A RECORD &
	V%=FNG%(-ETXCRX.CH%,NUM1$(KEY.POINTER%))+ &
		FNG%(-ETXCRX.CH%-1%,NUM1$(DATA.POINTER%)) &
\	V%=FNU%(ETXCRX.CH%,ETXCRX.BUF$) &
					IF LOOP%>=3% AND FNS%=0% &
\	V%=FNU%(-ETXCRX.CH%,ETXCRX.BUF$) &
					IF LOOP%<3% AND FNS%=0% &
\	RETURN &

6000	!------------------------------------------------DATA ENTRY SECTION &
	RETURN IF DATA.POINTER%<1% OR FNG%(-ETXCRX.CH%,NUM1$(KEY.POINTER%))+&
				FNG%(-ETXCRX.CH%-1%,NUM1$(DATA.POINTER%)) &
\	LSET ETXCRX.BUF$=FNL$+'' &
\	ON LOOP% GOSUB	6220, 6240, 6260, 6280, 6300, 6320 &
		FOR LOOP%=1% TO LOOP.DATA% &
\	RETURN &

6010	ON LOOP% GOSUB	6210, 6230, 6250, 6270, 6290, 6310 &
\	RETURN &

6030	ON LOOP% GOSUB	6217, 6237, 6257, 6277, 6297, 6317 &
\	RETURN &

6200	!-----------------------------------------------DATA ENTRY SECTION &

6210	INP$=FNSIO$('','6;47',ETXCRX.TAXCAT$,DEFAULT$(LOOP%),CHR$(CH%)+ &
			STRING$(2%,LEN(ETXCRX.TAXCAT$))+CHR$(1%)+CHR$(0%)+ &
			OPTION$+'F=Federal, S=State, L=Local') &
\	GOTO 6210 IF INP$='' AND OPT$='A' &
\	GOTO 6220 IF INP$='' AND CHNG.FLAG% &
\	GOTO 6210 IF INSTR(1%,'F,S,L',INP$)=0 &
\	IF 	OPT$='C' AND INP$<>'' &
	THEN	IF	FNG%(ETXCRX.CH%,LEFT(INP$+' ',1%)+ &
				ETXCRX.TAX.TYPE$+ &
				ETXCRX.PRDNUM$)=0% &
		THEN	PRINT #CH%,CLRBOT$;FNP$('24;1');'Duplicate key ';INP$; &
				FNP$('21;1');'COMMAND: Re-enter Exit '; &
\			IF 	FNINP$(CH%,128%,' ',1%,0%)='R' &
			THEN	GOTO 6210 	ELSE	GOTO 6220 &

6217	LSET ETXCRX.TAXCAT$=INP$ IF INP$<>'' OR CHNG.FLAG%=0% &

6220	PRINT #CH%, FNP$('6;47');B.ON$;ETXCRX.TAXCAT$;G.OFF$; &
\	RETURN &

6230	INP$=FNSIO$('','8;47',ETXCRX.TAX.TYPE$,DEFAULT$(LOOP%),CHR$(CH%)+ &
			STRING$(2%,LEN(ETXCRX.TAX.TYPE$))+CHR$(1%)+CHR$(0%)+ &
			OPTION$+' ALPHA') &
\	IF 	OPT$='C' AND INP$<>'' &
	THEN	IF	FNG%(ETXCRX.CH%,ETXCRX.TAXCAT$+ &
				LEFT(INP$+' ',1%)+ &
				ETXCRX.PRDNUM$)=0% &
		THEN	PRINT #CH%,CLRBOT$;FNP$('24;1');'Duplicate key ';INP$; &
				FNP$('21;1');'COMMAND: Re-enter Exit '; &
\			IF 	FNINP$(CH%,128%,' ',1%,0%)='R' &
			THEN	GOTO 6230 	ELSE	GOTO 6240 &

6237	LSET ETXCRX.TAX.TYPE$=INP$ IF INP$<>'' OR CHNG.FLAG%=0% &

6240	PRINT #CH%, FNP$('8;47');B.ON$;ETXCRX.TAX.TYPE$;G.OFF$; &
\	RETURN &

6250	INP$=FNSIO$('','10;47',ETXCRX.PRDNUM$,DEFAULT$(LOOP%),CHR$(CH%)+ &
			STRING$(2%,LEN(ETXCRX.PRDNUM$))+CHR$(1%)+CHR$(0%)+ &
			OPTION$+' ALPHA') &
\	IF 	OPT$='C' AND INP$<>'' &
	THEN	IF	FNG%(ETXCRX.CH%,ETXCRX.TAXCAT$+ &
				ETXCRX.TAX.TYPE$+ &
				LEFT(INP$+' ',15%))=0% &
		THEN	PRINT #CH%,CLRBOT$;FNP$('24;1');'Duplicate key ';INP$; &
				FNP$('21;1');'COMMAND: Re-enter Exit '; &
\			IF 	FNINP$(CH%,128%,' ',1%,0%)='R' &
			THEN	GOTO 6250 	ELSE	GOTO 6260 &

6257	LSET ETXCRX.PRDNUM$=INP$ IF INP$<>'' OR CHNG.FLAG%=0% &

6260	PRINT #CH%, FNP$('10;47');B.ON$;ETXCRX.PRDNUM$;G.OFF$; &
\	DESC$ = '** UNDEFINED **' &
\	DESC$ = MID(FNL$,16%,30%)+'' IF FNG%(INVDES.CH%,ETXCRX.PRDNUM$)=0% &
		AND ETXCRX.PRDNUM$<>'' &
\	PRINT #CH% USING FNP$('10;62')+'\'+SPACE$(15%)+'\',DESC$; &
\	RETURN &

6270	INP$=FNSIO$('','12;47',ETXCRX.PRDCAT$,DEFAULT$(LOOP%),CHR$(CH%)+ &
			STRING$(2%,LEN(ETXCRX.PRDCAT$))+CHR$(1%)+CHR$(0%)+ &
			OPTION$+' ALPHA') &

6277	LSET ETXCRX.PRDCAT$=INP$ IF INP$<>'' OR CHNG.FLAG%=0% &

6280	PRINT #CH%, FNP$('12;47');B.ON$;ETXCRX.PRDCAT$;G.OFF$; &
\	RETURN &

6290	INP$=FNSIO$('##.###','14;47',ETXCRX.RATE$,DEFAULT$(LOOP%), &
			CHR$(CH%)+CHR$(7%)+CHR$(5%)+CHR$(5%)+CHR$(3%)+ &
			OPTION$+' VALUE') &

6297	LSET ETXCRX.RATE$=CVTF$(VAL(INP$)) IF INP$<>'' OR CHNG.FLAG%=0% &

6300	PRINT #CH% USING FNP$('14;47')+B.ON$+'##.###'+G.OFF$, &
						CVT$F(ETXCRX.RATE$); &
\	RETURN &

6310	INP$=FNSIO$('','16;47',ETXCRX.LIAACC$,DEFAULT$(LOOP%),CHR$(CH%)+ &
		STRING$(2%,LEN(ETXCRX.LIAACC$))+CHR$(1%)+CHR$(0%)+ &
		OPTION$+' ALPHA') &

6317	RSET ETXCRX.LIAACC$=INP$ IF INP$<>'' OR CHNG.FLAG%=0% &

6320	PRINT #CH%, FNP$('16;47');B.ON$;ETXCRX.LIAACC$;G.OFF$; &
\	DESC$ = '** UNDEFINED **' &
\	DESC$ = MID(FNL$,9%,30%)+'' IF FNG%(CHART.CH%,ETXCRX.LIAACC$)=0% &
		AND ETXCRX.LIAACC$<>'' &
\	PRINT #CH% USING FNP$('16;62')+'\'+SPACE$(15%)+'\',DESC$; &
\	RETURN &

17000	!-----------------------------------------------VIEW ROUTINE &
	PRINT #CH%,CLSCN$;R.ON$;FNSR$('4;19');FNP$('1;1'); &
			SPACE$(80%);FNP$('20;1');SPACE$(80%);G.OFF$;LDS.ON$; &
			FNP$('2;9');CHR$(120%); 		&
			FNP$('2;18');CHR$(120%);		&
			FNP$('2;34');CHR$(120%); 		&
			FNP$('2;46');CHR$(120%);		&
			FNP$('2;55');CHR$(120%);		&
			FNP$('3;2');STRING$(78%,113%);		&
			FNP$('3;9');CHR$(110%); 		&
			FNP$('3;18');CHR$(110%); 		&
			FNP$('3;34');CHR$(110%); 		&
			FNP$('3;46');CHR$(110%); 		&
			FNP$('3;55');CHR$(110%);USASCII$;R.ON$;	&
\	PRINT #CH%, FNP$(NUM1$(I%)+';1');' ';FNP$(NUM1$(I%)+';80');' '; &
				FOR I%=2% TO 19%		&
\	PRINT #CH%, G.OFF$;	FNP$('2;2');'TAX CAT';		&
				FNP$('2;10');'TAX TYPE'; 		&
				FNP$('2;19');'PRODUCT NUMBER'; 		&
				FNP$('2;35');'PRODUCT CAT';		&
				FNP$('2;47');'TAX RATE'; 		&
				FNP$('2;56');'LIA ACCT'; 		&
\	DISPLAY.LINE%=0% &
\	PRINT.LINE%=4% &

17010	V%=FNG%(-ETXCRX.CH%,NUM1$(KEY.POINTER%))+ &
		FNG%(-ETXCRX.CH%-1%,NUM1$(DATA.POINTER%)) &
\	GOTO 17105 &

17100	GOTO 17200 IF FNN%(ETXCRX.CH%) &

17105	LSET ETXCRX.BUF$=FNL$+'' &
\	PRINT #CH%, 	FNP$(NUM1$(PRINT.LINE%)+';5');ETXCRX.TAXCAT$;   &
			FNP$(NUM1$(PRINT.LINE%)+';13');ETXCRX.TAX.TYPE$;  &
			FNP$(NUM1$(PRINT.LINE%)+';19');ETXCRX.PRDNUM$; &
			FNP$(NUM1$(PRINT.LINE%)+';35');ETXCRX.PRDCAT$;&
			FNP$(NUM1$(PRINT.LINE%)+';56');ETXCRX.LIAACC$;&
\	PRINT #CH%, USING FNP$(NUM1$(PRINT.LINE%)+';48')+'#.###',  &
			CVT$F(ETXCRX.RATE$); &
\	PRINT #CH%, LDS.ON$;						&
			FNP$(NUM1$(PRINT.LINE%)+';9');CHR$(120%); 	&
			FNP$(NUM1$(PRINT.LINE%)+';18');CHR$(120%); 	&
			FNP$(NUM1$(PRINT.LINE%)+';34');CHR$(120%); 	&
			FNP$(NUM1$(PRINT.LINE%)+';46');CHR$(120%); 	&
			FNP$(NUM1$(PRINT.LINE%)+';55');CHR$(120%); 	&
			USASCII$;G.OFF$; 				&
\	PRINT.LINE%=PRINT.LINE%+1% IF PRINT.LINE%<19% 			&

17110	IF 	DISPLAY.LINE%>14% &
	THEN	PRINT #CH%, FNP$('24;55');'Hit any key to continue '; &
\		INP$=FNINP$(CH%,128%,' ',1%,0%) &
\		GOTO 17210 IF INP$='%^C' &
\		DISPLAY.LINE%=0% &
\		PRINT #CH%, CLRBOT$;FNP$(NUM1$(PRINT.LINE%)+';1'); &

17120	PRINT #CH% &
\	DISPLAY.LINE%=DISPLAY.LINE%+1% &
\	IF 	PRINT.LINE%=19% &
	THEN	PRINT #CH%, 	FNP$(NUM1$(PRINT.LINE%)+';1');R.ON$;' '; &
				FNP$(NUM1$(PRINT.LINE%)+';80');' ';G.OFF$; &

17190	GOTO 17100 &

17200	IF 	DISPLAY.LINE%>0% &
	THEN	PRINT #CH%, FNP$('24;1');'End of file.  '; &
			FNP$('24;55');'Hit any key to continue '; &
\		INP$=FNINP$(CH%,128%,' ',1%,0%) &

17210	V%=FNG%(-ETXCRX.CH%,NUM1$(KEY.POINTER%))+ &
		FNG%(-ETXCRX.CH%-1%,NUM1$(DATA.POINTER%)) &
\	PRINT #CH%, FNP$('1;1');FNSR$('1;24'); &
\	GOTO 1010 &

18910	!---------------------------------------------------END OF FILE &
	PRINT #CH%,CLRBOT$;FNP$('24;1');'End of file has been reached.';&
		FNP$('24;55');'Hit any key to continue '; 	 	&
\	INP$=FNINP$(CH%,128%,' ',1%,0%) 				&
\	GOTO 1000 							&

19000	!------------------------------------------------ERROR TRAPPING &
	RESUME IF ERR=52% OR ERR=51% 					&
\	RESUME 450 IF ERL=400 						&
\	RESUME 1010 IF ERR=54% 						&

19999	ON ERROR GOTO 0 						&

30000	!------------------------------------------------TERMINAL INPUT &
	DEF FNINP$(CHN%,KYP%,FILLCHAR$,INPUTLEN%,TO.ERR%)		&
\		PRINT #CHN%, STRING$(INPUTLEN%,ASCII(FILLCHAR$)); 	&
			  STRING$(INPUTLEN%,8%); 			&
\		PRINT #CHN%, RECORD 256%,CHR$(KYP%+INPUTLEN%)+FILLCHAR$;&
\		GET #CHN% 						&
\		FIELD #CHN%, RECOUNT AS BUFFER$ 			&
\		BUFFER$='%^C' IF INSTR(1%,BUFFER$,CHR$(3%)) 		&
\		FNINP$=CVT$$(BUFFER$,4%) 				&
\		V=SQR(-1) IF BUFFER$='%^C' AND TO.ERR% !^C Trappping	&
\	FNEND 								&

30200	DEF*FNP$(ROWCOL$)=ESC$+'['+ROWCOL$+'H' 	! Direct Cursor Address &

30250	!-----------------------------------------------MESSAGE HANDLER	&
	DEF*FNMESS$(CHN%,ERRNUM%,DESC$,TO.ERR%,PRINT.TEST%)		&
\		MESG$=MID(SYS(CHR$(6%)+CHR$(9%)+CHR$(ERRNUM%)),3%,30%)+	&
			DESC$						&
\		IF PRINT.TEST%						&
		THEN	PRINT #CHN%, FNP$('24;1');CLRLIN$;MESG$;	&
				FNP$('24;55');'Hit any key to continue';&
\			NW$=FNINP$(CHN%,128%,' ',1%,TO.ERR%)		&

30260		FNMESS$=MESG$						&
\	FNEND 								&

30280	DEF*FNSR$(BEGEND$)=ESC$+'['+BEGEND$+'r'	! Scroll control 	&

30300	!----------------------------------SYSTEM 24 HOUR TIME HANDLERS &
	DEF FNT24S$(TYME$)=CHR$(VAL(MID(TYME$,21%,2%))) + 		&
				CHR$(VAL(MID(TYME$,24%,2%)))		&

30310	DEF FNT24P$(TYME$)=NUM1$(ASCII(LEFT(TYME$,1%)))+':'+		&
				NUM1$(ASCII(RIGHT(TYME$,2%)))		&

30400	!-------------------------------------------------DATE HANDLERS &
	DEF FND8%(D8)=D8 						&

30410	DEF FND6%(D9$)=VAL(MID(D9$,3%,2%))+VAL(LEFT(D9$,2%))*32% 	&
		+ FND8%(VAL(RIGHT(D9$,5%)))*512% 			&

30420	DEF FND6$(D9%)=RIGHT(NUM1$((D9% AND 15%*32%)/32%+100%),2%) 	&
		+ '/'+RIGHT(NUM1$((D9% AND 31%)+100%),2%) 		&
		+ '/'+RIGHT(NUM1$(((SWAP%(D9%) AND 254%)/2%)+100%),2%) 	&

30450	DEF FNFONE$(PHN$)='('+LEFT(PHN$,3%)+')'+MID(PHN$,4%,3%)+'-' 	&
		+RIGHT(PHN$,7%) 					&

30500	DEF FNZ(Y) 							&
\		TEMP=Y 							&
\		TEMP=-Y IF Y<0. 					&
\		TEMP=INT(TEMP*100.+.51)/100. 				&
\		TEMP=-TEMP IF Y<0. 					&
\		FNZ=TEMP 						&	
\	FNEND 								&

30700	!------------------------------------------DATA INPUT FUNCTIONS	&
	DEF*FNSIO$(FRMAT$,ROWCOL$,VARABLE$,DEFAL$,ITEMS$)		&
\		CHN%=ASCII(MID(ITEMS$,1%,1%))				&
\		KIND%=ASCII(MID(ITEMS$,4%,1%))				&
\		DECI=ASCII(MID(ITEMS$,5%,1%))				&
\		OPT$=MID(ITEMS$,6%,1%)					&

30705		PRINT #CHN%, FNP$(ROWCOL$);R.ON$;B.ON$;			&
\		IF 	OPT$='C'					&
		THEN	ON KIND% GOTO 30710, 30715, 30720, 30725, 30730	&
		ELSE	PRINT #CHN%, SPACE$(ASCII(MID(ITEMS$,2%,1%)));	&
\			GOTO 30735					&

30710		PRINT #CHN%, VARABLE$;			   ! ALPHA	&
\		GOTO 30735						&

30715		PRINT #CHN% USING FRMAT$,ASCII(VARABLE$);  ! ASCII	&
\		GOTO 30735						&

30720		PRINT #CHN% USING FRMAT$, CVT$%(VARABLE$)/(10.**DECI);	&
\		GOTO 30735				   ! INTEGER	&

30725		PRINT #CHN%, FND6$(CVT$%(VARABLE$));	   ! DATE	&
\		GOTO 30735						&

30730		PRINT #CHN% USING FRMAT$,CVT$F(VARABLE$);  ! FLOAT	&

30735		PRINT #CHN%,G.OFF$;CLRBOT$;RIGHT(ITEMS$,6%)+':  ';B.ON$;&
\		FIN$ = FNINP$(CHN%,0%,'_',ASCII(MID(ITEMS$,3%,1%)),1%)	&
\		V% = VAL(FIN$) IF KIND%=3%				&
\		V  = VAL(FIN$) IF KIND%>3%				&
\		IF 	FIN$=''						&
		THEN	FIN$ = DEFAL$ IF INSTR(1%,'CF',OPT$)=0%		&
\			GOTO 30745					&

30740		IF 	KIND%=3% OR KIND%=5%				&
		THEN	TEMP = 1.					&
\			TEMP = 10.**DECI IF INSTR(1%,FIN$,'.')=0%	&
\			FIN$ = NUM1$(VAL(FIN$)/TEMP)			&
\			FIN$ = FIN$ + '.' IF INSTR(1%,FIN$,'.')=0%	&

30745		FNSIO$ = FIN$+''					&
\	FNEND								&

32767	END &

