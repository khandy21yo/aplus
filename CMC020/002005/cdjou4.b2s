10	! PRINT CHECKS &
	!-------------------------------------------------------------------- &
	! &
	! &
	!		COPYRIGHT (c) 1984 BY &
	!		COMPUTER MANAGEMENT CENTER, IDAHO FALLS, IDAHO &
	! &
	! THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND &
	! COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE AND WITH &
	! THE INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR ANY &
	! OTHER COPIES THEROF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAIL- &
	! ABLE TO ANY OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF THE SOFT- &
	! WARE IS HEREBY TRANSFERRED. &
	! &
	! THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NO- &
	! TICE AND SHOULD NOT BE CONSTRUED AS A COMMITTMENT BY COMPUTER &
	! MANAGEMENT CENTER. &
	! &
	! CMC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF &
	! ITS SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPORTED BY CMC. &
	! &
	! ++ &
	! &
	! ABSTRACT: &
	! &
	! &
	! &
	! &
	! ENVIRONMENT: &
	! &
	!	PDP-11 UNDER RSTS/E BP2 &
	! &
	! AUTHOR: &
	! &
	! MODIFIED BY: &
	! &
	!	11/03/93 - Kevin Handy &
	!		Cleaned up variables &
	! &
	!----------------------------------------------------------------- &

30	ON ERROR GOTO 19000 &
\	TEMP$=SYS(CHR$(12%)) &
\	PRJPRG$=MID(TEMP$,23%,1%) + MID(TEMP$,24%,1%) + NUM1$(ASCII(MID( &
		TEMP$,25%,1%))) + ":" + &
		"["+NUM1$(ASCII(MID(TEMP$,6%,1%))) + "," + &
		NUM1$(ASCII(MID(TEMP$,5%,1%))) + "]" + &
		RAD$(ASCII(MID(TEMP$,7%,1%))+SWAP%(ASCII(MID(TEMP$,8%,1%)))) + &
		RAD$(ASCII(MID(TEMP$,9%,1%))+SWAP%(ASCII(MID(TEMP$,10%,1%)))) &

50	JUNK$ = SYS(CHR$(6%) + CHR$(16%) + CHR$(0%) + CHR$(255%) + &
		CHR$(250%) + STRING$(5%,0%) + CHR$(255%) + &
		STRING$(14%,0%) + CHR$(255%) + CHR$(128%+26%) + STRING$(6%,0%)) &
\	JUNK$ = SYS(CHR$(6%) + CHR$(-7%)) &
\	JUNK$ = SYS( CHR$(6%) + CHR$(9%) ) &
\	KBN% = ASCII(MID(JUNK$,2%,1%))/2% &

60	OPEN "KB:" AS FILE #1%, MODE 8%+256% &
					!    8% - Echo Control &
					!   16% - Disable hibernation, Cntl-C &
\	CH%=1%				! Keyboard channel &
\	ESC$=CHR$(155%)			! Escape code for VT100 control &
\	CLSCN$=ESC$+"[H"+ESC$+"[J"	! Clear screen &
\	CLRLIN$=ESC$+"[2K"		! Erase entire line &
\	G.OFF$=ESC$+"[m"		! Select graphic off &
\	B.ON$=ESC$+"[1m"		! Bold face on &
\	BLINK.ON$=ESC$+"[5m"		! Blinking &
\	R.ON$=ESC$+"[7m"		! Reverse video &
\	ENTER.COPY$=ESC$+"[5i"		! Enter copy mode &
\	EXIT.COPY$=ESC$+"[4i"		! Exit copy mode &
\	CLRBOT$=ESC$+"[21;1H"+ESC$+"[J"	! Erace cursor to end of screen &
\	PRINT #CH%, ESC$;"<";		! Enter ANSI mode &

70	IF FLAG% &
	THEN	GOTO 100 &
		ELSE	V%=FNX%("ISM:ISMBLD",30000%,"CDJOUR.DA1/S@118-11;1-6$"+ &
				PRJPRG$+"#80*") &

80	FLAG%=-1% &
\	GOTO 10 &

100	DIM Y$(30%),FIELD.NAME$(21%),FIELD.NAME%(21%,6%), &
		ATTRIBUTE$(21%),ATTRIBUTE(21%) &
\	READ Y$(I%) FOR I%=1% TO 30% &
\	ELEMENT%=21% &
\	READ FIELD.NAME$(I%) FOR I%=1% TO ELEMENT% &
\	FILE.CH%   = 2% &
\	VENDES.CH% = 2% &
\	CDJOUR.CH% = 4% &
\	APCCTL.CH% = 6% &
\	CHECK.FRM% = 10% &
\	MENU.CH%   = 12% &
\	LOOP.DATA% = 6% &
\	OUTPUT.CH%,OUTPUT.CH.RESET%=10% &
\	FROM.KEY$ = "ALL" &
\	TO.KEY$ = "" &
\	CHECK.DATE$=RIGHT(NUM1$((INSTR(1%,"JanFebMarAprMayJunJulAugSepOct"+ &
		"NovDec",MID(DATE$(0%),4%,3%))+2%)/3%+100%),2%)+ &
		LEFT(DATE$(0%),2%)+RIGHT(DATE$(0%),8%) &
\	CHECK.DATE$=FNSDATE$(CHECK.DATE$) &
\	OUTDEV$="KB"+NUM1$(KBN%)+":" &
\	START.CHECK$="0" &
\	BREAK.CHECK$="999999" &

200	CDJOUR.DEVICE$="SY:" &
\	IF FNO%(FILE.CH%,"DEVICE.DAT","/RO","")=0% &
	THEN	CDJOUR.DEVICE$=MID(FNL$,7%,20%)+'' &
			IF FNG%(FILE.CH%,"CDJOUR")=0% &
\		VENDES.DEVICE$=MID(FNL$,7%,20%)+'' &
			IF FNG%(FILE.CH%,"VENDES")=0% &
\		V%=FNC%(FILE.CH%) &

300	V%=FNO%(CDJOUR.CH%,CDJOUR.DEVICE$+"CDJOUR.DAS","/RW","") &
\	IF FNS% &
	THEN	PRINT #CH%, FNP$(24%,1%);CLRLIN$; &
			"Error";FNS%;"While open CDJOUR.DAT";FNP$(24%,55%); &
			"Hit any key to continue"; &
\		INP$=FNINP$(CH%,128%," ",1%) &
\		PRINT #CH%, CLSCN$; &
\		V%=FNX%("",0%,"") &

320	V%=FNO%(VENDES.CH%,VENDES.DEVICE$+"VENDES.DAT","/RO","") &
\	IF FNS% &
	THEN	PRINT #CH%, FNP$(24%,1%);CLRLIN$; &
			"Error";FNS%;"While open VENDES.DAT";FNP$(24%,55%); &
			"Hit any key to continue"; &
\		INP$=FNINP$(CH%,128%," ",1%) &
\		PRINT #CH%, CLSCN$; &
\		V%=FNX%("",0%,"") &

330	V%=FNO%(APCCTL.CH%,APCCTL.DEVICE$+"APCCTL.DAS","/RW/SF/NS","") &
\	V%=FNG%(APCCTL.CH%,'APL') &
\	IF FNS% &
	THEN	PRINT #CH%, CLRBOT$; FNP$(24%,1%);"Error";FNS%; &
		"in AP Control file"; FNP$(24%,55%); "Hit any key to continue "; &
\		INP$=FNINP$(CH%,128%," ",1%) &
\		PRINT #CH%, CLSCN$;BLINK.ON$;R.ON$;B.ON$; &
			FNP$(1%,75%);'WAIT';G.OFF$;FNX%("",0%,"") &

340	FIELD #APCCTL.CH%, 	304% AS TEMP$, &
				08% AS APCCTL.APCASH$, &
				08% AS APCCTL.DISLOST$, &
				06% AS APCCTL.VOUCH$, &
				06% AS APCCTL.CHECKNUM$ &
\	START.CHECK$=XLATE(APCCTL.CHECKNUM$,STRING$(48%,0%)+"0123456789") &

370	OPEN "APCHK.FRM" FOR INPUT AS FILE CHECK.FRM% &
\	GOTO 400 &

380	OPEN "ISM:APCHK.FRM" FOR INPUT AS FILE CHECK.FRM% &

400	OPEN "MENU.FIL/RO" FOR INPUT AS FILE MENU.CH% &
\	DIM #12%, A0$(255%)=64% &
\	COMPANY$=CVT$$(RIGHT(A0$(1%),2%),128%) &
\	CLOSE MENU.CH% &

450	OPEN "NL:" AS FILE 12%, RECORDSIZE 512% &
\	FIELD #12%,	06% AS AP.VENNUM$, &
			29% AS AP.VENNAM$, &
			29% AS AP.VENADD$, &
			29% AS AP.VENCST$, &
			29% AS AP.VENZIP$, &
			05% AS AP.VENXXX$, &
			01% AS AP.VENPURGE$, &
			10% AS AP.VENPHN$, &
			13% AS AP.VENFED$, &
			01% AS AP.VEN199$, &
			02% AS AP.VENDUE$, &
			02% AS AP.VENDISDAY$, &
			02% AS AP.VENDISC$, &
			08% AS AP.VENBILMTD$, &
			02% AS AP.VENVOUMTD$, &
			08% AS AP.VENBILYTD$, &
			02% AS AP.VENVOUYTD$, &
			08% AS AP.VENPAIDMTD$, &
			08% AS AP.VENPAIDYTD$, &
			02% AS AP.VENUPDFLAG$, &
			02% AS AP.VENUPDCOUNT$, &
			02% AS AP.VENLMU$, &
			01% AS AP.VEN.OK.TO.PURGE$, &
			15% AS AP.SORTKEY$ &
\	FIELD #12%, 256% AS TEMP$, &
			06% AS CD.VENNUM$, &
			06% AS CD.VOUNUM$, &
			02% AS CD.VOUDAT$, &
			15% AS CD.INVOIC$, &
			02% AS CD.INVDAT$, &
			20% AS CD.CKDESC$, &
			08% AS CD.AMT$, &
			08% AS CD.DISC$, &
			08% AS CD.APACCT$, &
			08% AS CD.ACCT$, &
			06% AS CD.CKNUM$, &
			02% AS CD.CKDAT$, &
			08% AS CD.DISCLOST$, &
			08% AS CD.DISCACCT$, &
			06% AS CD.PONUM$, &
			02% AS CD.DISDAT$, &
			02% AS CD.DUEDAT$, &
			11% AS CD.SORTKEY$ &
\	FIELD #12%, 256% AS VEN.BUF$, 128% AS CDJOUR.BUF$ &

500	FRAME$    = FRAME$+FNP$(I%,1%)+" "+FNP$(I%,80%)+" " FOR I%=2% TO 19% &
\	COMMAND$ = " FR TO OD DA SC BC  " &

600	!-------------------------------------------------READ FORMS &
	I6%,FIELD.LOOP%=0% &

610	INPUT LINE #CHECK.FRM%, A$ &
\	GOTO 670 IF INSTR(1%,A$,'*END') &
\	GOTO 650 IF INSTR(1%,A$,'<')=0% &
\	WHILE A$<>'' &
\		A%=INSTR(1%,A$,'<') &
\		A1%=INSTR(1%,A$,'>') &
\		A1%=LEN(A$)+1% IF A1%=0% &
\		A1$=MID(A$,A%+1%,A1%-A%-1%) &
\		A$=RIGHT(A$,A1%+1%) &
\		IF LEFT(A1$,4%)="FRM-" &
		THEN	I6%=I6%+1% &
\			FRM$(I6%)=RIGHT(A1$,5%) &
\			FIELD.LOOP%=0% &
\			GOTO 630 &

620		IF CVT$$(A1$,-1%)<>'' &
		THEN	FIELD.LOOP%=FIELD.LOOP%+1% &
\			FIELD.NAME%(FIELD.LOOP%,I6%)=LOOP% &
				IF FIELD.NAME$(LOOP%)=CVT$$(A1$,-1%) &
					FOR LOOP%=1% TO ELEMENT% &

630	NEXT &
\	GOTO 610 &

650	PRINT.USING$(I6%)=PRINT.USING$(I6%)+A$ &
\	GOTO 610 &

670	FOR LOOP%=1% TO I6% &
\		IF INSTR(1%,FRM$(LOOP%),"VOUCHER") &
		THEN	REPEAT%=VAL(XLATE(FRM$(LOOP%),STRING$(48%,0%)+ &
				"0123456789")) &

680	NEXT LOOP% &

690	FOR LOOP%=1% TO I6% &
\	TEST%=1% &

692		TEMP%=INSTR(TEST%,PRINT.USING$(LOOP%),CHR$(27%)+"[") &
\		IF TEMP% &
		THEN	TEST%=TEMP%+1% &
\			PRINT.USING$(LOOP%)=LEFT(PRINT.USING$(LOOP%), &
				TEMP%-1%)+CHR$(155%)+"["+ &
				RIGHT(PRINT.USING$(LOOP%),TEMP%+2%) &
\			GOTO 692 &

695	NEXT LOOP% &
\	CLOSE CHECK.FRM% &

1000	!--------------------------------------------PROGRAM RESTART POINT &
	OUTPUT.CH%=OUTPUT.CH.RESET% &
\	IF FNG%(CDJOUR.CH%,"") &
	THEN	PRINT #CH%, FNP$(24%,1%);CLRLIN$;"The CDJOUR file is "; &
			"empty.";FNP$(24%,55%);"Hit any key to continue "; &
\		INP$=FNINP$(CH%,128%," ",1%) &
\		OPT$="Q" &
\		GOTO 1040 &

1010	GOSUB 1060 &
\	GOSUB 6000 &

1030	PRINT #CH%, CLRBOT$;G.OFF$; &
		"COMMAND: Change Alignment GO Quit"; &
\	OPT$=CVT$$(FNINP$(CH%,128%," ",1%),32%) &
\	GOTO 1010 IF OPT$="%^C" &

1040	IF OPT$="Q" &
	THEN	PRINT #CH%, CLSCN$;BLINK.ON$;B.ON$;R.ON$;FNP$(1%,75%); &
			"WAIT";G.OFF$;FNX%("",0%,""); &

1050	GOTO 2200 IF OPT$="C" &
\	GOTO 17000 IF OPT$="G" &
\	GOTO 16000 IF OPT$="A" &
\	GOTO 1030 &

1060	TEMP$     = "CHECK WRITING ROUTINE" &
\	PRINT #CH%, CLSCN$;R.ON$;LEFT(TEMP$,39%);SPACE$(40%-LEN(TEMP$)); &
		SPACE$(40%-LEN(COMPANY$));COMPANY$; &
		FRAME$;FNP$(20%,1%);SPACE$(80%);G.OFF$; &
\	PRINT #CH%,	FNP$(4%,20%); "(FR) STARTING KEY"; &
			FNP$(6%,20%); "(TO) ENDING KEY"; &
			FNP$(8%,20%); "(OD) OUTPUT TO "; &
			FNP$(10%,20%);"(DA) DATE FOR CHECK"; &
			FNP$(12%,20%);"(SC) START CHECK #"; &
			FNP$(14%,20%);"(BC) BREAK CHECK #"; &
\	RETURN &

2200	!--------------------------------------------------CHANGE RECORD &
	OPTION$ = "CHANGE " &
\	FLAG% = -1% &
\	PRINT #CH%, CLRBOT$; "Change:"; &
\	INP$=CVT$$(FNINP$(CH%,128%," ",2%),32%) &
\	GOTO 1010 IF INP$="%^C" &
\	GOTO 1030 IF INP$="" &
\	LOOP%=(INSTR(1%,COMMAND$," "+INP$+" ")+2%)/3% &
\	GOTO 2200 IF LOOP%=0% &
\	GOSUB 6010 &
\	GOTO 1010 IF INP$="%^C" &
\	GOTO 2200 &

6000	!------------------------------------------------DATA ENTRY SECTION &
	FOR LOOP%=1% TO LOOP.DATA% &
\		ON LOOP% GOSUB	6220, 6240, 6260, 6280, 6300, 6320 &
\	NEXT LOOP% &
\	RETURN &

6010	ON LOOP% GOSUB	6210, 6230, 6250, 6270, 6290, 6310 &
\	RETURN &
		! INPUT DATA &

6200	!-------------------------------------------------BEGIN DATA ENTRY &

6210	F.LEN%=14% &
\	PRINT #CH%, FNP$(4%,46%);R.ON$;B.ON$;FROM.KEY$;SPACE$(14%-LEN(FROM.KEY$)); &
		G.OFF$;CLRBOT$;OPTION$;"ALPHA: ";B.ON$; &
\	INP$=FNINP$(CH%,0%,"_",F.LEN%) &
\	GOTO 6220 IF INP$="%^C" &
\	FROM.KEY$=INP$ IF INP$<>"" &

6220	PRINT #CH%, FNP$(4%,46%);B.ON$;FROM.KEY$;SPACE$(14%-LEN(FROM.KEY$)); &
		G.OFF$; &
\	RETURN &

6230	F.LEN%=14% &
\	PRINT #CH%,FNP$(6%,46%);R.ON$;B.ON$;TO.KEY$;SPACE$(14%-LEN(TO.KEY$)); &
		G.OFF$;CLRBOT$;OPTION$;"ALPHA: ";B.ON$; &
\	INP$=FNINP$(CH%,0%,"_",F.LEN%) &
\	GOTO 6240 IF INP$="%^C" &
\	TO.KEY$=INP$ IF INP$<>"" &

6240	PRINT #CH%, FNP$(6%,46%);B.ON$;TO.KEY$;SPACE$(14%-LEN(TO.KEY$)); &
		G.OFF$; &
\	RETURN &

6250	F.LEN%=20% &
\	PRINT #CH%, FNP$(8%,46%);R.ON$;B.ON$;OUTDEV$;SPACE$(20%-LEN( &
		OUTDEV$));G.OFF$;CLRBOT$;OPTION$;"ALPHA: ";B.ON$; &
\	INP$=FNINP$(CH%,0%,"_",F.LEN%) &
\	RETURN IF INP$="%^C" &
\	IF INP$<>"" &
	THEN	CLOSE OUTPUT.CH% &
\		TEMP$=FNOUTPUT$(INP$,OUTPUT.CH%,128%) &
\		INP$='KB:' IF TEMP$="%ERROR" &
\		OUTDEV$=INP$ &

6260	PRINT #CH%, FNP$(8%,46%);B.ON$;OUTDEV$;SPACE$(20%-LEN( &
		OUTDEV$));G.OFF$; &
\	RETURN &

6270	F.LEN%=6% &
\	PRINT #CH%,FNP$(10%,46%);R.ON$;B.ON$;FNRDATE$( &
		CHECK.DATE$);G.OFF$;CLRBOT$;OPTION$;"ALPHA: ";B.ON$; &
\	INP$=FNINP$(CH%,0%,"_",F.LEN%) &
\	GOTO 6280 IF INP$="%^C" &
\	INP$=XLATE(INP$,STRING$(48%,0%)+"0123456789") &
\	CHECK.DATE$=FNSDATE$(INP$) IF INP$<>"" &

6280	PRINT #CH%, FNP$(10%,46%);B.ON$;FNRDATE$(CHECK.DATE$);G.OFF$; &
\	RETURN &

6290	F.LEN%=6% &
\	PRINT #CH%, FNP$(12%,46%);R.ON$;B.ON$;START.CHECK$; &
		SPACE$(F.LEN%-LEN(START.CHECK$)); &
		G.OFF$;CLRBOT$;OPTION$;"ALPHA: ";B.ON$; &
\	INP$=FNINP$(CH%,0%,"_",F.LEN%) &
\	GOTO 6300 IF INP$="%^C" &
\	INP$=XLATE(INP$,STRING$(48%,0%)+"0123456789") &
\	START.CHECK$=INP$ IF INP$<>"" &

6300	PRINT #CH%, FNP$(12%,46%);B.ON$;START.CHECK$; &
		SPACE$(F.LEN%-LEN(START.CHECK$));G.OFF$; &
\	RETURN &

6310	F.LEN%=6% &
\	PRINT #CH%, FNP$(14%,46%);R.ON$;B.ON$;BREAK.CHECK$; &
		SPACE$(F.LEN%-LEN(BREAK.CHECK$)); &
		G.OFF$;CLRBOT$;OPTION$;"ALPHA: ";B.ON$; &
\	INP$=FNINP$(CH%,0%,"_",F.LEN%) &
\	GOTO 6320 IF INP$="%^C" &
\	INP$=XLATE(INP$,STRING$(48%,0%)+"0123456789") &
\	BREAK.CHECK$=INP$ IF INP$<>"" &

6320	PRINT #CH%, FNP$(14%,46%);B.ON$;BREAK.CHECK$; &
		SPACE$(F.LEN%-LEN(BREAK.CHECK$));G.OFF$; &
\	RETURN &

16000	!----------------------------------------------PRINT ALIGNMENT FORM &
	OUTPUT.CH%=CH% IF OUTDEV$="KB:" OR OUTDEV$='' OR &
		OUTDEV$="KB"+NUM1$(KBN%)+":" &
\	IF OUTPUT.CH%=CH% &
	THEN	PRINT #CH%, CLRBOT$;"Turn on print and set the checks "; &
			FNP$(24%,55%);"Hit any key to continue"; &
\		INP$=FNINP$(CH%,128%," ",1%) &
\		GOTO 1000 IF INP$="%^C" &

16010	PRINT #CH%, CLRBOT$;FNP$(24%,1%);CLRLIN$;"Printing. . ."; &
\	PRINT #OUTPUT.CH%, ENTER.COPY$; IF OUTPUT.CH%=CH% &
\	ATTRIBUTE$(I%)="XXXXXXXXXXXXXXXXXXXXXXXXXXXX" FOR I%=1% TO ELEMENT% &
\	ATTRIBUTE(I%)=0. FOR I%=1% TO ELEMENT% &
\	FOR FRM%=1% TO I6% &
\		GOSUB 17800 IF FRM$(FRM%)="CHECK" &
\		GOSUB 17800 IF INSTR(1%,FRM$(FRM%),"VOUCHER") &
\		GOSUB 17800 IF INSTR(1%,FRM$(FRM%),"VOUCHER") &
\		GOSUB 17800 IF INSTR(1%,FRM$(FRM%),"VOUCHER") &
\		PRINT #OUTPUT.CH%, STRING$(REPEAT%-3%,10%);CHR$(13%) &
			IF INSTR(1%,FRM$(FRM%),"VOUCHER") &
\		GOSUB 17800 IF FRM$(FRM%)="TOTAL" &
\		GOSUB 17800 IF FRM$(FRM%)="HEAD" &
\	NEXT FRM% &
\	PRINT #OUTPUT.CH%, EXIT.COPY$; &
\	GOTO 1030 &

17000	!-------------------------------------------------OUTPUT REPORT &
	INP$=CVT$$(FNINP$(CH%,128%," ",1%),32%) &
\	GOTO 1030 IF INP$<>"O" &
\	CHECK.NUMBER=VAL(START.CHECK$) &
\	BREAK.NUMBER=VAL(BREAK.CHECK$) &
\	START.TEMP$="" &
\	START.TEMP$=FROM.KEY$ IF FROM.KEY$<>"ALL" &
\	V%=FNG%(CDJOUR.CH%,START.TEMP$) &
\	OUTPUT.CH%=CH% IF OUTDEV$="KB:" OR OUTDEV$='' OR &
		OUTDEV$="KB"+NUM1$(KBN%)+":" &
\	IF OUTPUT.CH%=CH% &
	THEN	PRINT #CH%, CLRBOT$;"Turn on print and set the checks "; &
			FNP$(24%,55%);"Hit any key to continue"; &
\		INP$=FNINP$(CH%,128%," ",1%) &
\		GOTO 1000 IF INP$="%^C" &

17010	PRINT #CH%, FNP$(24%,1%);CLRLIN$;"Printing. . ."; &
\	PRINT #OUTPUT.CH%, ENTER.COPY$; IF OUTPUT.CH%=CH% &
\	CLOSE CH% &
\	OPEN "KB:" AS FILE CH% &

17020	! &

17030	LSET CDJOUR.BUF$=FNL$+'' &
\	GOTO 17400 IF TO.KEY$<CD.SORTKEY$ AND TO.KEY$<>"" &
\	VEN.TEST$=CD.VENNUM$+"" &
\	KEY.POINTER%=FNR(CDJOUR.CH%) &
\	DATA.POINTER%=FNR(CDJOUR.CH%+1%) &
\	AMOUNT,DISCOUNT,LOST,NET=0. &
\	LINE.COUNT%=0% &

17040	LSET CDJOUR.BUF$=FNL$+"" &
\	IF CD.VENNUM$<>VEN.TEST$ &
	THEN	17100 &
		ELSE	IF CVT$$(CD.CKNUM$,-1%)="" &
			THEN	AMOUNT=AMOUNT+FNROUND(CVT$F(CD.AMT$)) &
\				DISCOUNT=DISCOUNT+FNROUND(CVT$F(CD.DISC$)) &
\				LOST=LOST+FNROUND(CVT$F(CD.DISCLOST$)) &
\				LINE.COUNT%=LINE.COUNT%+1% &

17050	IF FNN%(CDJOUR.CH%)=0% &
	THEN	17040 &

17100	NET=FNROUND(AMOUNT-DISCOUNT+LOST) &
\	GOTO 17030 IF NET<0. AND FNS%=0% &
\	GOTO 17400 IF NET<0. AND FNS% &
\	V%=FNG%(-CDJOUR.CH%,NUM1$(KEY.POINTER%)) + &
		FNG%(-CDJOUR.CH%-1%,NUM1$(DATA.POINTER%)) &
\	LSET CDJOUR.BUF$=FNL$+"" &
\	LSET VEN.BUF$="" &
\	V%=FNG%(VENDES.CH%,CD.VENNUM$) &
\	LSET VEN.BUF$=FNL$+"" IF FNS%=0% &
\	Y=NET &
\	GOSUB 18500 &

17200	ATTRIBUTE$(1%)=Y$ &
\	ATTRIBUTE$(2%)=NUM1$(CHECK.NUMBER) &
\	ATTRIBUTE$(3%)=FNRDATE$(CHECK.DATE$) &
\	ATTRIBUTE(4%)=Y &
\	ATTRIBUTE$(5%)="**" &
\	ATTRIBUTE$(21%)=AP.VENNUM$ &
\	ATTRIBUTE$(6%)=AP.VENNAM$ &
\	ATTRIBUTE$(7%)=AP.VENADD$ &
\	ATTRIBUTE$(8%)=AP.VENCST$ &
\	ATTRIBUTE$(9%)=AP.VENZIP$ &
\	ATTRIBUTE(18%)=AMOUNT &
\	ATTRIBUTE(19%)=DISCOUNT-LOST &
\	ATTRIBUTE(20%)=AMOUNT-(DISCOUNT-LOST) &
\	FOR FRM%=1% TO I6% &
\		GOSUB 17700 IF FRM$(FRM%)="CHECK" &
\		GOSUB 17600 IF INSTR(1%,FRM$(FRM%),"VOUCHER") &
\		GOSUB 17650 IF FRM$(FRM%)="TOTAL" &
\		GOSUB 17750 IF FRM$(FRM%)="HEAD" &
\	NEXT FRM% &
\	CHECK.NUMBER=CHECK.NUMBER+1. IF NET>0. &

17320	IF CHECK.NUMBER<=BREAK.NUMBER &
	THEN	IF FNS%=0% &
		THEN	17020 &

17400	! &

17500	PRINT #OUTPUT.CH%, EXIT.COPY$; &
\	CLOSE OUTPUT.CH% &
\	IF FNG%(APCCTL.CH%,"APL")=0% &
	THEN	CHECK.NUMBER$=NUM1$(CHECK.NUMBER) &
\		CHECK.NUMBER$=LEFT(SPACE$(6%-LEN(CHECK.NUMBER$))+CHECK.NUMBER$,6%) &
\		V%=FNU%(-APCCTL.CH%,LEFT(FNL$,326%)+ &
			CHECK.NUMBER$+RIGHT(FNL$,333%)) &

17520	PRINT CLSCN$;BLINK.ON$;B.ON$;R.ON$;FNP$(1%,75%);"WAIT"; &
		G.OFF$;FNX%("",0%,"") &

17600	!----------------------------------------------PRINT VOUCHER &
	IF NET<>0. &
	THEN	IF LINE.COUNT%>REPEAT% &
		THEN	PRINT #OUTPUT.CH%, STRING$(REPEAT%/2%,10%); &
\			PRINT #OUTPUT.CH%, TAB(20%);"SEE ATTACHMENT FOR A COMPLETE"; &
				" LIST OF INVOICES PAID"; &
			STRING$(REPEAT%-(REPEAT%/2%),10%);CHR$(13%) &

17605	V%=FNG%(-CDJOUR.CH%,NUM1$(KEY.POINTER%)) + &
		FNG%(-CDJOUR.CH%-1%,NUM1$(DATA.POINTER%)) &

17610	LSET CDJOUR.BUF$=FNL$+"" &
\	GOTO 17635 IF VEN.TEST$<>CD.VENNUM$ &
\	GOTO 17630 IF CVT$$(CD.CKNUM$,-1%)<>"" &
\	RSET CD.CKNUM$=NUM1$(CHECK.NUMBER) &
\	RSET CD.CKNUM$="000000" IF NET=0. &
\	LSET CD.CKDAT$=CHECK.DATE$ &
\	V%=FNU%(-CDJOUR.CH%,CDJOUR.BUF$) &

17620	IF LINE.COUNT%<=REPEAT% AND NET<>0. &
	THEN	ATTRIBUTE$(10%)=CD.VOUNUM$+'' &
\		ATTRIBUTE$(11%)=CD.INVOIC$+'' &
\		ATTRIBUTE$(12%)=FNRDATE$(CD.INVDAT$) &
\		ATTRIBUTE$(13%)=CD.CKDESC$+'' &
\		ATTRIBUTE(14%)=CVT$F(CD.AMT$) &
\		ATTRIBUTE(15%)=CVT$F(CD.DISC$)-CVT$F(CD.DISCLOST$) &
\		ATTRIBUTE(16%)=ATTRIBUTE(14%)-ATTRIBUTE(15%) &
\		ATTRIBUTE$(17%)=CD.PONUM$+'' &
\		GOSUB 17800 &

17630	IF FNN%(CDJOUR.CH%)=0% &
	THEN	GOTO 17610 &

17635	IF LINE.COUNT%<=REPEAT% AND NET<>0. &
	THEN	PRINT #OUTPUT.CH%, STRING$(REPEAT%-LINE.COUNT%,10%);CHR$(13%) &

17640	RETURN &

17650	!----------------------------PRINT FOOT ON VOUCHER &
	GOSUB 17800 IF NET>0. &
\	RETURN &

17700	!-------------------------------------------------PRINT CHECK &
	GOSUB 17800 IF NET>0. &
\	RETURN &

17750	GOSUB 17800 IF NET>0. &
\	RETURN &

17800	!------------------------------------PRINT OUTPUT &
	I5%,I1%=1% &
\	I3%=0% &
\	PU$=PRINT.USING$(FRM%) &

17810	I%=INSTR(I1%,PU$,"\") &
\	TEST%=INSTR(I1%,PU$,"#") &
\	TEST1%=INSTR(I1%,PU$,"$") &
\	TEST%=TEST1% IF TEST1%<TEST% AND TEST1%<>0% &
\	I%=TEST% IF TEST% AND TEST%<I% OR TEST% AND I%=0% &
\	TEST%=0% IF TEST%<>I% &
\	I3%,I%=LEN(PU$)+2% IF I%=0% &
\	PRINT #OUTPUT.CH%, MID(PU$,I1%,I%-I1%); &
\	IF I%=I3% &
	THEN	GOTO 17830 &
	ELSE	I2%=INSTR(I%+1%,PU$,"\") &
\		TEST1%=INSTR(I%+1%,PU$," ") &
\		I2%=TEST1% IF TEST% AND TEST1%<I2% OR I2%=0% AND TEST% &
\		IF TEST% &
		THEN	LOOP%=LEN(PU$) &
\			LOOP%=I2% IF I2%<>0% &
\			GOTO 17820 IF MID(PU$,I2%,1%) = "#" &
				FOR I2%=LOOP% TO 1% STEP -1% &

17820	P$=MID(PU$,I%,I2%+1%-I%) &
\	IF INSTR(1%,P$,"\") &
	THEN	PRINT #OUTPUT.CH% USING P$,ATTRIBUTE$(FIELD.NAME%(I5%,FRM%)); &
	ELSE	PRINT #OUTPUT.CH% USING P$,ATTRIBUTE(FIELD.NAME%(I5%,FRM%)); &

17825	I5%=I5%+1% &
\	I1%=I2%+1% &
\	GOTO 17810 &

17830	RETURN &

18500	!-------------------------------------------CALCULATE STRING VALUE &
	Y$="" &
\	Y1=INT((Y-INT(Y))*100.0+0.5) &
\	IF Y1=0. &
	THEN	Y$="NO/100 DOL." &
\		GOTO 18530 &

18520	Y$=NUM1$(Y1)+"/100 DOL." &

18530	Y1=INT(Y) &
\	RETURN IF Y1=0. &
\	Y1$=NUM1$(Y1) &
\	GOSUB 18600 &
\	Y$=Y3$+" AND "+Y$ &
\	RETURN IF Y1$="" &
\	GOSUB 18600 &
\	IF Y3$<>"" &
	THEN	Y$=Y3$+Y$(29%)+Y$ &

18570	RETURN IF Y1$="" &
\	GOSUB 18600 &
\	Y$=Y3$+Y$(30%)+Y$ &
\	RETURN &

18600	Y2$=RIGHT(Y1$,LEN(Y1$)-2%) &
\	Y1$=LEFT(Y1$,LEN(Y1$)-3%) &
\	GOSUB 18700 &
\	RETURN &

18700	Y3$="" &
\	Y2$=NUM1$(VAL(Y2$)) &
\	IF LEN(Y2$)=3% &
	THEN	Y2=VAL(LEFT(Y2$,1%)) &
\		Y3$=Y$(Y2)+Y$(28%) &
\		Y2$=RIGHT(Y2$,2%) &

18710	Y2=VAL(Y2$) &
\	GOTO 18750 IF LEN(Y2$)<2% &
\	IF Y2<20. &
	THEN	Y3$=Y3$+Y$(Y2) &
\		RETURN &

18730	Y2=INT(Y2/10.)+18. &
\	Y3$=Y3$+Y$(Y2) &
\	Y2=VAL(RIGHT(Y2$,2%)) &

18750	Y3$=Y3$+Y$(Y2) &
\	RETURN &

19000	!-------------------------------------------------ERROR TRAPPING &
	IF ERR=28% &
	THEN	JUNK$ = SYS(CHR$(6%) + CHR$(-7%)) &
\		RESUME 17500 &

19025	IF ERL=400% &
	THEN	RESUME 450 &

19030	IF ERL=370% &
	THEN	RESUME 380 &

19040	IF ERL>=30800% AND ERL<=30830% &
	THEN	IF INSTR(1%,Y$,".")<>0% &
		THEN	PRINT #CH%, FNP$(24%,1%);CLRLIN$; &
				"That file presently exists.  Enter a"; &
				" '0' to supersede or a '2' to add to file "; &
\			Y1$=FNINP$(CH%,128%,"_",1%) &
\			PRINT #CH%, FNP$(24%,1%);CLRLIN$; &
\			Y1$=CVT$$(LEFT(Y1$,1%),-1%) &
\			Y1%=VAL(Y1$) IF Y1$="0" OR Y1$="2" &
\			RESUME 30820 IF Y1$="2" &
\			RESUME 30825 IF Y1$="1" &
\			Y$="%ERROR" IF Y$<>"%^C" &
\			RESUME 30840 &

19050	IF ERL>=30800% AND ERL<=30830% &
	THEN	PRINT #CH%, FNP$(24%,1%);CLRLIN$;"Error";ERR; &
		"while opening ";Y$;".  Please try again."; &
		FNP$(24%,55%); "Hit any key to continue"; &
\		Y$=FNINP$(CH%,128%," ",1%) &
\		PRINT #CH%, FNP$(24%,1%);CLRLIN$; &
\		Y$="%ERROR" IF Y$="" &
\		RESUME 30840 &

19900	ON ERROR GOTO 0 &

20000	DATA	" ONE"," TWO"," THREE"," FOUR"," FIVE"," SIX"," SEVEN", &
		" EIGHT"," NINE"," TEN"," ELEVEN"," TWELVE"," THIRTEEN", &
		" FOURTEEN"," FIFTEEN"," SIXTEEN"," SEVENTEEN"," EIGHTEEN", &
		" NINETEEN"," TWENTY"," THIRTY"," FORTY"," FIFTY"," SIXTY", &
		" SEVENTY"," EIGHTY"," NINETY"," HUNDRED"," THOUSAND"," MILLION" &

20100	DATA	"PAY", &
		"CHECK", &
		"DATE", &
		"AMOUNT", &
		"PROTECT", &
		"NAME", &
		"ADD", &
		"CITY", &
		"ZIP", &
		"VOUCHER", &
		"INVOICE", &
		"INVDAT", &
		"DESC", &
		"INVAMT", &
		"DISC", &
		"INVNET", &
		"PONUM", &
		"TOTAMT", &
		"TOTDISC", &
		"TOTNET", &
		"VENNUM" &

30000	DEF FNINP$(CHN%,KYP%,FILLCHAR$,INPUTLEN%) &
\		PRINT #CHN%, STRING$(INPUTLEN%,ASCII(FILLCHAR$)); &
			  STRING$(INPUTLEN%,8%); &
\		PRINT #CHN%, RECORD 256%, CHR$(KYP%+INPUTLEN%)+FILLCHAR$; &
\		GET #CHN% &
\		FIELD #CHN%, RECOUNT AS BUFFER$ &
\		IF ASCII(BUFFER$)=128% OR ASCII(BUFFER$)=8% &
			OR ASCII(BUFFER$)=23% &
		THEN	BUFFER$="%END" IF MID(BUFFER$,2%,4%)="[21~" &
				OR ASCII(BUFFER$)=8% &
\			BUFFER$="%ABORT" IF MID(BUFFER$,2%,4%)="[19~" &
				OR ASCII(BUFFER$)=23% &

30010		BUFFER$="%^C" IF INSTR(1%,BUFFER$,CHR$(3%)) &
\		FNINP$=CVT$$(BUFFER$,4%) &
\	FNEND &

30050	!------------------------------------------------------------ &
	! A N S I   D I R E C T   C U R S O R   A D D R E S S I N G &
	!------------------------------------------------------------ &
	DEF*FNP$(ROW%,COL%)=ESC$+"["+NUM1$(ROW%)+";"+NUM1$(COL%)+"H" &
	&

30060	DEF FNROUND(A.VALUE)=INT(A.VALUE*100.0+0.5)/100.0 &

30120	DEF FNSDATE$(Y$)=CVT%$(VAL(MID(Y$,3%,2%))+VAL(LEFT(Y$,2%))*32%+ &
		FNI%(VAL(RIGHT(Y$,5%)))*512%) &

30130	DEF FNI%(Y)=Y &

30140	DEF FNRDATE$(Y$) &
\		Y%=CVT$%(Y$) &
\		FNRDATE$=RIGHT(NUM1$((Y% AND 480%)/32%+100%),2%)+'/'+ &
			RIGHT(NUM1$((Y% AND 31%)+100%),2%)+'/'+ &
			RIGHT(NUM1$((SWAP%(Y%) AND 254%)/2%+100%),2%) &
\	FNEND &

30800	!	************************************************************* &
	!		 FNOUTPUT$(OUTPUT.CH%, KEYBRD$) &
	!		Y%  = Channel # to print on &
	!		Y1% = Mode to open channel on &
	!		Y$  = Name of file or device &
	!		Y1$ = Error condition input &
	! &
	!		Written by Robert Peterson - June 1981 &
	!		Version 1 Edition 1 &
	!	************************************************************ &

30810	DEF FNOUTPUT$(Y$,Y%,Y1%) &

30820		IF Y1%=128% &
		THEN	OPEN Y$ FOR OUTPUT AS FILE Y% &

30825		KILL Y$ IF Y1%=0% &
\		OPEN Y$ AS FILE Y%, MODE Y1% IF Y1%=0% &

30840		FNOUTPUT$=Y$ &
\	FNEND &

32767	END
