1	%TITLE "Sales Journal Line Item Maintenance"
	%SBTTL "AR_MAIN_LBSJ_LINE"
	%IDENT "V3.3"

	FUNCTION LONG AR_MAIN_LBSJ_LINE(CDD_WINDOW_CDD SMG_WINDOW, &
		LONG MOPTION, LONG MLOOP, LONG MFLAG, STRING MVALUE)

	!
	! COPYRIGHT (C) 1987, 1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! Abstract:HELP
	!	.p
	!	This program maintains the Marketing SJH file.
	!
	! Index:
	! Option:
	!
	!
	! Compile:
	!
	!	$ BAS AR_SOURCE:AR_MAIN_LBSJ_LINE/LINE
	!	$ LIB FUNC_LIB:CMCFUN/REP AR_MAIN_LBSJ_LINE
	!	$ DELETE AR_MAIN_LBSJ_LINE.OBJ;*
	!
	! Environment:
	!
	!	VAX/VMS BASIC+2 V4.4
	!
	! Author:
	!
	!	07/22/87 - Kevin Handy
	!
	! Modification history:
	!
	!	02/23/88 - Aaron Redd
	!		Added hard tables
	!
	!	05/16/88 - Aaron Redd
	!		Modified to allow R/O open of file if R/W open fails.
	!
	!	07/27/88 - Kevin Handy
	!		Add thw two code "F" (for freight) and "T" (for
	!		sales tax).
	!
	!	04/15/92 - Dan Perkins
	!		Use FUNC_TESTENTRY to test input.
	!
	!	04/22/92 - Kevin Handy
	!		Clean up (Check)
	!
	!	02/22/93 - Dan Perkins
	!		Changed "V0" to "VX" on chart of accounts to be
	!		able to list accounts starting at a particular
	!		account.
	!--
	%PAGE

	!
	! Set up compiling options
	!
	OPTION SIZE	= (REAL GFLOAT, INTEGER LONG)

	%INCLUDE "FUNC_INCLUDE:SCOPE.COM"

	%INCLUDE "FUNC_INCLUDE:MAIN_WINDOW.COM"
	%INCLUDE "FUNC_INCLUDE:AR_WINDOW.INC"
	%INCLUDE "FUNC_INCLUDE:GL_WINDOW.INC"

	%INCLUDE %FROM %CDD "CDD$TOP.CDD.CDD_WINDOW"

	%INCLUDE %FROM %CDD "CDD$TOP.AR.AR_SJL"
	MAP (AR_SJL)		AR_SJL_CDD		AR_SJL
	MAP (AR_SJL_OLD)	AR_SJL_CDD		AR_SJL_OLD, AR_SJL2

	%INCLUDE %FROM %CDD "CDD$TOP.AR.AR_SJH"
	MAP (AR_SJH)		AR_SJH_CDD		AR_SJH

	%INCLUDE %FROM %CDD "CDD$TOP.GL.GL_CHART"
	MAP (GL_CHART)		GL_CHART_CDD		GL_CHART

	!
	! Create array to contain pointers and totals
	!
	RECORD RARRAY_RECORD
		RFA	LINRFA		! Rfa pointer for record
		STRING	SLINE	= 3	! Line number
		REAL	AMOUNT		! Amount for record
		REAL	QTY		! Quanity for record
	END RECORD

	!
	! Common Areas
	!
	! These areas store information that is re-used between
	! calls to these functions.
	!
	COM (TT_AR_SJL_1) &
		CATTITLE$ = 20%, &
		CATTYPE$(8%) = 20%, &
		TAXTITLE$ = 20%, &
		TAXTYPE$(8%) = 40%

	COM (TT_AR_SJL) RARRAY_RECORD RARRAY(300%)	! Allocate for 300

	COM (CH_AR_SJH) &
		AR_SJH.CH%

	COM (CH_AR_SJL) &
		AR_SJL.CH%,		&
		AR_SJL.READONLY%

	COM (TT_AR_SJ) &
		BATCH_NO$ = 2%

	!
	! External functions
	!
	EXTERNAL STRING  FUNCTION ENTR_3STRINGLIST
	EXTERNAL STRING  FUNCTION ENTR_3STRING
	EXTERNAL REAL    FUNCTION ENTR_3NUMBER
	EXTERNAL LONG    FUNCTION MAIN_WINDOW
	EXTERNAL LONG    FUNCTION FUNC_TESTENTRY


	%PAGE

	ON ERROR GOTO 29000

	SELECT MOPTION

	!
	! Initialization
	!
	! This option is used to initialize the window structure,
	! set up the default values for add, and open all files
	! necessary that have not already been opened.
	!
	CASE OPT_INIT

		!
		! Define window
		!
		SMG_WINDOW::DESCR = "Line items"
		SMG_WINDOW::NHELP = "AR_MAIN_LBSJ_LINE"
		SMG_WINDOW::HSIZE = 78%
		SMG_WINDOW::VSIZE = 8%
		SMG_WINDOW::HVIEW = 78%
		SMG_WINDOW::VVIEW = 18%
		SMG_WINDOW::HPOS  = 2%
		SMG_WINDOW::VPOS  = 12%
		SMG_WINDOW::NITEMS= 7%
		SMG_WINDOW::FLAGS = 0%

		SMG_WINDOW::TOPLIN = 3%
		SMG_WINDOW::BOTLIN = 7%

		!
		! Load in defaults
		!
		CALL READ_DEFAULTS(SMG_WINDOW) &
			IF INSTR(1%, " QV", MVALUE) <= 1%

		!
		! Category
		!
		CATTITLE$	= "Type   Description"
		CATTYPE$(0%)	= "5"
		CATTYPE$(1%)	= "N    Not Recorded"
		CATTYPE$(2%)	= "S    Sales"
		CATTYPE$(3%)	= "D    Discount"
		CATTYPE$(4%)	= "T    Sales Tax"
		CATTYPE$(5%)	= "O    Other"

		!
		! Tax type
		!
		TAXTITLE$	= "Type   Description"
		TAXTYPE$(0%)	= "7"
		TAXTYPE$(1%)	= "0    Not recorded"
		TAXTYPE$(2%)	= "1    Taxable"
		TAXTYPE$(3%)	= "2    Service"
		TAXTYPE$(4%)	= "3    Freight"
		TAXTYPE$(5%)	= "4    Resale"
		TAXTYPE$(6%)	= "5    Out of state"
		TAXTYPE$(7%)	= "6    Church, School, and Government"

700		!
		! Declare channels
		!
		IF AR_SJL.CH% > 0%
		THEN
			!
			! Already open, set flag to read-only if was
			! that way from last time.
			!
			SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%) &
				IF AR_SJL.READONLY%
			GOTO 790
		END IF

		!
		! Open main file (existing) for modification
		!
750		%INCLUDE "SOURCE:[AR.OPEN]AR_SJL.CRE"
		AR_SJL.READONLY% = 0%
		GOTO 790

760		!
		! If unable to open for modify, try to open with read
		! access only.
		!
		%INCLUDE "SOURCE:[AR.OPEN]AR_SJL.OPN"
		SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%)
		AR_SJL.READONLY% = -1%

		GOTO 790

770		!
		! File not open, so reset channel
		!
		CALL ASSG_FREECHANNEL(AR_SJL.CH%)

		EXIT FUNCTION

790		SMG_WINDOW::CHAN  = AR_SJL.CH%
		RESET #AR_SJL.CH%
		GET #AR_SJL.CH%, REGARDLESS

	!
	! Display the background
	!
	! This option is used to display the background information on the
	! screen.  It must first clear any junk on the screen, and then
	! write the background onto it.
	!
20100	CASE OPT_BACKGROUND

		SMG_STATUS% = SMG$BEGIN_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

		SMG_STATUS% = SMG$ERASE_DISPLAY(SMG_WINDOW::WNUMBER)

		SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
			"        (01)     (02)    (03) (04)      (05)  " + &
			"             (06)          (07) ", &
			1%, 1%, , SMG$M_REVERSE)
		SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
			"  Acct #      Matter #   Cat  Tax  Description" + &
			"               Qty        Amount", &
			2%, 1%, , SMG$M_REVERSE)

		SMG_STATUS% = SMG$END_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

	!
	! Extra display stuff
	!
	CASE OPT_DISPLAY

		SMG_STATUS% = SMG$BEGIN_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

		!
		! Generate totals
		!
		AMOUNT = AR_SJH::AMOUNT
		QTY = 0.0

		FOR I% = 1% TO SMG_WINDOW::TOTREC

			AMOUNT = AMOUNT + RARRAY(I%)::AMOUNT
			QTY    = QTY    + RARRAY(I%)::QTY

		NEXT I%

		!
		! Display totals
		!
		SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
			"Number of lines" + &
			FORMAT$(SMG_WINDOW::TOTREC, "###") + &
			"                                   " + &
			FORMAT$(QTY, "###,###.###") + &
			FORMAT$(AMOUNT, " ##,###,###.##"), &
			SMG_WINDOW::VSIZE, 1%, , SMG$M_REVERSE)

		!
		! Paint lines on screen
		!
		FOR I% = 1% TO 6%

			A% = VAL%(MID("014,025,030,035,055,065", I%*4%-3%, 3%))

			SMG_STATUS% = SMG$DRAW_LINE(SMG_WINDOW::WNUMBER, &
				1%, A%, SMG_WINDOW::BOTLIN, A%)

		NEXT I%

		SMG_STATUS% = SMG$END_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

	!
	! Enter/Display/Default
	!
	! This option is used to enter the data from the user, display data,
	! set defaults, and return the data back according to MFLAG.
	!
20200	CASE OPT_ENTRY

		TEMP$, TEMP1$ = TRM$(PRG_ITEM)
		TEMP$ = "View starting at" IF TEMP$ = "View"

		PRG_ITEM = "FLD" + FORMAT$(MLOOP, "<0>##")

		XLINE$ = NUM1$(SMG_WINDOW::CURLIN)

		TEMP1% = SCOPE.EXIT%

 E0Loop:	SCOPE.EXIT% = 0%

		SELECT MLOOP

		CASE 1%
	!++
	! Abstract:FLD001
	!	^*(01) Account Number\*
	!	.p
	!	The ^*Account Number\* field provides the means for the entry of the General
	!	Ledger account number corresponding to a particular line item.  The account
	!	number entered should have been established in the General Ledger Chart of
	!	Accounts.  If the number has not been entered in the Chart of Accounts,
	!	entry must be accomplished before the appropriate distribution can be made.
	!	(The journal will not post if there is an unidentified account number.)
	!	.p
	!	Pressing ^*<List Choices>\* while the cursor is located at this field causes
	!	a list of the General Ledger Account numbers to be displayed.
	!
	! Index:
	!	.x Account Number
	!
	!--
			AR_SJL::ACCT = ENTR_3STRING(SCOPE, SMG_WINDOW::WNUMBER, &
				XLINE$ + ";3", TEMP$, &
				AR_SJL::ACCT, MFLAG, "'LLLLLLLLLL", MVALUE)

				IF (SCOPE.EXIT% = SMG$K_TRM_F14)
				THEN
					IF (MAIN_WINDOW(GL_MAIN_CHART.ID, "VX  ") = 1%)
					THEN
						AR_SJL::ACCT = GL_CHART::ACCT
					END IF
					GOTO E0Loop
				END IF

		CASE 2%
	!++
	! Abstract:FLD002
	!	^*(02) Matter Number\*
	!	.p
	!	The ^*Matter Number\* field contains the identification number of different
	!	cases for each customer.  They are used especially for billing when the
	!	customer has more than one case with the organization.
	!
	! Index:
	!	.x Matter Number
	!	.x Number>Matter
	!
	!--
			AR_SJL::SUBACCT = ENTR_3STRING(SCOPE, SMG_WINDOW::WNUMBER, &
				XLINE$ + ";15", TEMP$, &
				AR_SJL::SUBACCT, MFLAG, &
				"~L0'E", MVALUE)

		CASE 3%
	!++
	! Abstract:FLD003
	!	^*(03) Category\*
	!	.p
	!	The ^*Category\* field provides the means to enter a code which identifies
	!	the category of a particular line item.  Utilization of this field is at the
	!	user's option, depending upon the results desired.
	!	.p
	!	If this field is utilized, valid values are:
	!	.b
	!	.lm 15
	!	.list 0,"*"
	!	.le
	!	S - Sales
	!	.le
	!	D - Discount
	!	.le
	!	F - Freight
	!	.le
	!	T - Sales Tax
	!	.le
	!	C - Cost of Sales
	!	.le
	!	I - Inventory
	!	.le
	!	0 - Other
	!	.els
	!	.lm -10
	!	.p
	!	Pressing ^*<List Choices>\* while the cursor is located at this field causes
	!	a list of valid codes to be displayed.
	!
	!
	! Index:
	!	.x Category
	!
	!--
			AR_SJL::LTYPE = ENTR_3STRINGLIST(SCOPE, SMG_WINDOW::WNUMBER, &
				XLINE$ + ";27", TEMP$, &
				AR_SJL::LTYPE, MFLAG, "'", MVALUE, &
				CATTYPE$(), CATTITLE$, "005")

		CASE 4%
	!++
	! Abstract:FLD004
	!	^*(04) Tax Type\*
	!	.p
	!	The ^*Tax Type\* field refers to the taxability of a sale with regard to
	!	sales tax.
	!	.p
	!	This field is bypassed unless the category (field 03) contains a^*S\* (Sales).
	!	.p
	!	Valid values are:
	!	.b
	!	.list 0,"*"
	!	.lm 15
	!	.le
	!	1 - Taxable
	!	.le
	!	2 - Service
	!	.le
	!	3 - Freight
	!	.le
	!	4 - Resale
	!	.le
	!	5 - Out of state
	!	.le
	!	6 - Churches, Schools, and Government
	!	.els
	!	.lm -10
	!	Pressing ^*<List Choices>\* while the cursor is located at this field causes
	!	a list of valid codes to be displayed.
	!
	!
	! Index:
	!	.x Tax Type
	!
	!--
			IF (TEMP$ = "Add") AND (AR_SJL::LTYPE <> "S")
			THEN
				TEMP% = MFLAG OR 1%
			ELSE
				TEMP% = MFLAG
			END IF

			AR_SJL::TAXTYP = ENTR_3STRINGLIST(SCOPE, SMG_WINDOW::WNUMBER, &
				XLINE$ + ";32", TEMP$, &
				AR_SJL::TAXTYP, TEMP%, "'", MVALUE, &
				TAXTYPE$(), TAXTITLE$, "005")

			SCOPE.EXIT% = TEMP1% IF TEMP% AND 1%

		CASE 5%
	!++
	! Abstract:FLD005
	!	^*(05) Description\*
	!	.p
	!	The ^*Description\* field provides the means to enter a brief description
	!	of the line item.  Depending upon user requirements, this field may be left
	!	blank.
	!	.p
	!	The field accommodates an entry of twenty-one (21) alphanumeric characters.
	!
	! Index:
	!	.x Description
	!
	!--
			AR_SJL::DESCR = ENTR_3STRING(SCOPE, SMG_WINDOW::WNUMBER, &
				XLINE$ + ";36", TEMP$, &
				AR_SJL::DESCR, MFLAG, "'LLLLLLLLLLLLLLLLLL", MVALUE)

		CASE 6%
	!++
	! Abstract:FLD006
	!	^*(06) Quantity\*
	!	.p
	!	The ^*Quantity\* field refers to the number of units sold for this particular
	!	line item.
	!	.p
	!	The format for entry is XXXX.XX.
	!
	! Index:
	!	.x Quantity
	!
	!--
			AR_SJL::QTY = ENTR_3NUMBER(SCOPE, SMG_WINDOW::WNUMBER, &
				XLINE$ + ";56", TEMP$, &
				AR_SJL::QTY, MFLAG, "#,###.###", MVALUE)

		CASE 7%
	!++
	! Abstract:FLD007
	!	^*(07) Amount\*
	!	.p
	!	The ^*Amount\* field provides the means to enter the dollar amount of the line
	!	item.  A credit must be entered with a dash (-) preceding it.  If the amount
	!	is a debit, no sign need be entered.
	!	.note
	!	Sales tax will be a separate line item in the distribution.
	!	.end note
	!	.p
	!	The field accommodates an entry as large as a plus (+) or Minus (-) 999999.99.
	!
	! Index:
	!	.x Amount
	!
	!--
			AR_SJL::AMOUNT = ENTR_3NUMBER(SCOPE, SMG_WINDOW::WNUMBER, &
				XLINE$ + ";66", TEMP$, &
				AR_SJL::AMOUNT, MFLAG, "##,###,###.##", MVALUE)

		END SELECT

		PRG_ITEM = TEMP1$

	!
	! Test values
	!
20300	CASE OPT_TESTENTRY
		AR_MAIN_LBSJ_LINE = 0%

		SELECT MLOOP

		CASE 1%
			!
			! Is the input defined?
			!
			AR_MAIN_LBSJ_LINE = FUNC_TESTENTRY( SMG_WINDOW, &
				AR_SJL::ACCT, GL_CHART::DESCR, &
				"AR", MLOOP, "ACCT", &
				"Account number", GL_MAIN_CHART.ID)

		END SELECT

	!
	! Set AR_SJL_OLD value
	!
20500	CASE OPT_SETOLD
		AR_SJL_OLD = AR_SJL

	!
	! Restore AR_SJL_OLD value
	!
	CASE OPT_RESETOLD
		AR_SJL = AR_SJL_OLD

	!
	! Set default value
	!
	CASE OPT_SETDEFAULT
		AR_SJL2 = AR_SJL

	!
	! Restore default value
	!
	CASE OPT_RESETDEFAULT
		AR_SJL = AR_SJL2

		!
		! Set special default values for the key of a new record
		! which is the most likely case when this function is to
		! be called.
		!
		AR_SJL::INVNUM = AR_SJH::INVNUM

		IF SMG_WINDOW::TOTREC = 0%
		THEN
			AR_SJL::SLINE = "001"
		ELSE
			AR_SJL::SLINE = &
				FORMAT$(VAL%(RARRAY(SMG_WINDOW::TOTREC)::SLINE) + 1%, &
				"<0>##")
		END IF

	!
	! Find
	!
	CASE OPT_FIND
		SELECT MLOOP

		CASE 0%
			FIND #AR_SJL.CH%, &
				KEY#0 GE AR_SJL::INVNUM, &
				REGARDLESS
		END SELECT

	!
	! Handle array of records
	!
27000	CASE OPT_ARRAY

		!
		! Select sub-option of array
		!
		SELECT MLOOP

		!
		! Load array with line items
		!
		CASE 1%

			!
			! Empty array
			!
			SMG_WINDOW::TOTREC = 0%

27110			!
			! Search for first record
			!
			FIND #SMG_WINDOW::CHAN, KEY #0 GE AR_SJH::INVNUM, &
				REGARDLESS

27120			!
			! Get a record
			!
			GET #SMG_WINDOW::CHAN

			IF AR_SJL::INVNUM = AR_SJH::INVNUM
			THEN
				!
				! Add information to array
				!
				SMG_WINDOW::TOTREC = SMG_WINDOW::TOTREC + 1%
				RARRAY(SMG_WINDOW::TOTREC)::LINRFA = &
					GETRFA(SMG_WINDOW::CHAN)
				RARRAY(SMG_WINDOW::TOTREC)::SLINE = &
					AR_SJL::SLINE
				RARRAY(SMG_WINDOW::TOTREC)::AMOUNT = &
					AR_SJL::AMOUNT
				RARRAY(SMG_WINDOW::TOTREC)::QTY = &
					AR_SJL::QTY
				GOTO 27120
			END IF

		!
		! Remove one element of the array
		!
		CASE 2%
			!
			! Remove item pointed to by Mflag
			!
			FOR I% = MFLAG TO SMG_WINDOW::TOTREC - 1%
				RARRAY(I%) = RARRAY(I% + 1%)
			NEXT I%

		!
		! Set array item to current record
		!
		CASE 3%
			RARRAY(MFLAG)::LINRFA = GETRFA(SMG_WINDOW::CHAN)
			RARRAY(MFLAG)::SLINE = AR_SJL::SLINE
			RARRAY(MFLAG)::AMOUNT = AR_SJL::AMOUNT
			RARRAY(MFLAG)::QTY = AR_SJL::QTY

		!
		! Load in current record, locked
		!
		CASE 4%
27200			GET #SMG_WINDOW::CHAN, RFA RARRAY(MFLAG)::LINRFA

		!
		! Load in current record, unlocked
		!
		CASE 5%
			GET #SMG_WINDOW::CHAN, RFA RARRAY(MFLAG)::LINRFA, &
				REGARDLESS

		!
		! Change the current record's key to match header.  The
		! new key is probibly passes through MVALUE, unless some
		! other means is devised.
		!
		CASE 6%
			AR_SJL::INVNUM = RIGHT(MVALUE, 2%)

		END SELECT
	END SELECT

28000	EXIT FUNCTION

	%PAGE

29000	!*******************************************************************
	! Trap errors
	!*******************************************************************
	SELECT ERL
		!
		! Unable to open Read/Write
		!
		CASE 750%
			RESUME 760 IF ERR = 10%
			AR_MAIN_LBSJ_LINE = ERR
			RESUME 770

		!
		! Unable to open Read/Only
		!
		CASE 760%
			AR_MAIN_LBSJ_LINE = ERR
			RESUME 770

		!
		! Unable to reset
		!
		CASE 790%
			RESUME 32767

		!
		! Record does not already exist
		!
		CASE 20300%
			RESUME 32767 IF ERR = 155%

		!
		! Error while loading array
		!
		CASE 27110%
			!
			! Nothing to load
			!
			RESUME 28000

		CASE 27120%
			!
			! Read all records
			!
			RESUME 28000 IF ERR = 11%

	END SELECT

	ON ERROR GO BACK

32767	END FUNCTION
