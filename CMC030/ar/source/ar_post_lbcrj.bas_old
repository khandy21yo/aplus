1	%TITLE "AR CR Journal Posting for Legal Billing"
	%SBTTL "AR_POST_LBCRJ"
	%IDENT "V3.3"

	!
	! COPYRIGHT (C) 1989 BY
	! Computer Management Center
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! ID:ARLCPS
	!
	! Abstract:HELP
	!	.b
	!	.lm +5
	!	The ^*Post Cash Receipts Journal\* is provided to post entries
	!	which have been made in the Cash Receipts Journal to the General
	!	Ledger and the Accounts Receivable Ledger.
	!	.b
	!	If the entries being posted are out of balance, the message, ^*"Batch
	!	is OUT OF BALANCE - POSTING IS ABORTED. Hit any key to continue"\*
	!	will appear on the screen. Any imbalance must be corrected before
	!	the posting can be continued. The corrections will be made in the
	!	CRJ Maintenance routine.
	!	.lm -5
	!
	! Index:
	!	.x Post>Cash Receipts Journal
	!	.x Cash Receipts Journal>Post
	!
	! Option:
	!
	!
	! Environment:
	!
	!	VAX/VMS BASIC+2
	!
	! Compile:
	!
	!	$ BAS AR_SOURCE:AR_POST_LBCRJ/LINE
	!	$ LINK/EXE=AR_EXE: AR_POST_LBCRJ, FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE AR_POST_LBCRJ.OBJ;*
	!
	! Author:
	!
	!	06/29/89 - Aaron Redd
	!
	! Modification history:
	!
	!	08/07/89 - Aaron Redd
	!		Modified to post to the SA Balances file.
	!
	!	05/03/91 - J. Shad Rydalch
	!		Removed all calls to SB_TRAN_POST since those were
	!		moved into GL_TRAN_POSTGL.
	!
	!	05/09/91 - Val James Allen
	!		Modified to use AR_OPEN_DIST file for fee allocations
	!
	!	08/06/91 - Craig Tanner
	!		Declare CHECK_PERIOD so that post will check dates.
	!
	!	09/27/91 - Kevin Handy
	!		Fixed bug in handling of type '10'.
	!
	!	09/30/91 - Kevin Handy
	!		Modified to reduce possibility of null descriptions
	!		in General Ledger.
	!
	!	06/08/92 - Dan Perkins
	!		Kill Journal files before completing posting, if
	!		posting gets that far.
	!
	!	02/05/93 - Kevin Handy
	!		Added AR_OPEN::DUEDATE and AR_OPEN::DISCOUNTDATE.
	!--
	%PAGE

	!
	! Set up compiling options
	!
	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include constants and and some functions
	!
	%INCLUDE "FUNC_INCLUDE:CODES.INC"

	!
	! Map statements
	!
	%INCLUDE %FROM %CDD "CDD$TOP.AR.AR_LBCRJH"
	MAP (AR_LBCRJH)		AR_LBCRJH_CDD	AR_LBCRJH

	%INCLUDE %FROM %CDD "CDD$TOP.AR.AR_LBCRJL"
	MAP (AR_LBCRJL)		AR_LBCRJL_CDD	AR_LBCRJL

	%INCLUDE %FROM %CDD "CDD$TOP.LB.LB_CONTROL"
	MAP	(LB_CONTROL)	LB_CONTROL_CDD	LB_CONTROL

	%INCLUDE %FROM %CDD "CDD$TOP.AR.AR_OPEN_DIST"
	MAP	(AR_OPEN_DIST)	AR_OPEN_DIST_CDD	AR_OPEN_DIST


	!
	! CDD inclusions
	!
	%INCLUDE %FROM %CDD "CDD$TOP.AR.AR_35CUSTOM"
	%INCLUDE %FROM %CDD "CDD$TOP.AR.AR_OPEN"
	%INCLUDE %FROM %CDD "CDD$TOP.GL.GL_CHART"
	%INCLUDE %FROM %CDD "CDD$TOP.GL.GL_YYYY_PP"
	%INCLUDE %FROM %CDD "CDD$TOP.UTL.UTL_REPORTX"

	!
	! External functions
	!
	EXTERNAL LONG	FUNCTION	AR_EXAM_CUSTOM
	EXTERNAL LONG	FUNCTION	AR_TRAN_POSTAR
	EXTERNAL LONG	FUNCTION	ASSG_POSTBATCH
	EXTERNAL LONG	FUNCTION	GL_EXAM_CHART
	EXTERNAL LONG	FUNCTION	GL_TRAN_POSTGL
	EXTERNAL LONG	FUNCTION	OUTP_UNDEFCODES
	EXTERNAL STRING	FUNCTION	DATE_TODAY
	EXTERNAL STRING	FUNCTION	PRNT_DATE
	EXTERNAL STRING	FUNCTION	TIME_NOW

	!
	! Declare internal variables
	!
	DECLARE AR_35CUSTOM_CDD		AR_35CUSTOM_EXAM
	DECLARE AR_OPEN_CDD		AR_OPEN
	DECLARE	GL_CHART_CDD		GL_CHART_EXAM
	DECLARE	GL_YYYY_PP_CDD		GL_YYYY_PP
	DECLARE	UTL_REPORTX_CDD		UTL_REPORTX

	DECLARE	LONG			EXIT_STATUS
	DECLARE	LONG			INTR_STATUS
	DECLARE	LONG			PRNT_SUMMARY
	DECLARE LONG			CHECK_PERIOD

	DECLARE	STRING			BATCH_NUMBER
	DECLARE	STRING			GLPERIOD
	DECLARE	STRING			AR.INTER.PERIOD
	DECLARE	STRING			GL.INTER.PERIOD
	DECLARE	STRING			POSTDATE
	DECLARE	STRING			POSTTIME
	DECLARE	STRING			TEXT
	DECLARE	STRING			TITLE(10%)

	%PAGE

	!**************************************************************
	! Get some stuff done before we start
	!**************************************************************

	!
	! Set up error trapping
	!
	ON ERROR GOTO 19000

	!
	! Title
	!
	TITLE(1%) =	"LEGAL  BILLING  CASH  RECEIPTS  JOURNAL  POSTING  PROTOCOL"
	TITLE(2%) =	"Accounts Receivable System"
	TITLE(3%) =	""

	!
	! Heading
	!
	TITLE(4%) =	"."

	%PAGE

	!**************************************************************
	! Process `from user' input
	!**************************************************************

	!
	! Set user defined fields
	!
	CALL OUTP_INITFROMFILE(UTL_REPORTX, 132%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	GLPERIOD	= TRM$(UTL_REPORTX::OPTDEF(0%))
	!++
	! Abstract:FLD01
	!	.x Post Period
	!	^*(01) Post Period\*
	!	.b
	!	.lm +5
	!	The ^*Post Period\* field provides the means to enter the accounting period
	!	to which the Cash Receipts records are to be posted.
	!	.b
	!	The format for entry is YYYYPP.
	!	.lm -5
	!
	! Index:
	!
	!--

	BATCH_NO$	= TRM$(UTL_REPORTX::OPTDEF(1%))
	!++
	! Abstract:FLD02
	!	^*(02) Batch to Post\*
	!	.b
	!	.lm +5
	!	The ^*Batch to Post\* field is to be entered with the batch number corresponding
	!	to the Cash Receipts Journal to be posted.
	!	.b
	!	Only one batch at a time may be posted.
	!	.b
	!	An entry is required in this field.
	!	.lm -5
	!
	! Index:
	!	.x Batch to Post
	!
	!--

	CHECK_DATE$	= TRM$(UTL_REPORTX::OPTDEF(2%))
	!++
	! Abstract:FLD03
	!	.x Check Dates
	!	^*(03) Check Dates\*
	!	.b
	!	.lm +5
	!	The ^*Check Dates\* field provides the means to check all dates
	!	of the entries in the journal to insure they are within a particular date
	!	range (accounting period) for posting.
	!	.b
	!	By entering "^*N\*" for No the dates will not be checked and all
	!	entries will be posted.  A "^*Y\*" for Yes entry causes all dates to
	!	be checked.  If "Y" is entered and dates are found that are not within
	!	the date range for posting, the posting will be aborted.
	!	.lm -5
	!
	! Index:
	!
	!--

	CHECK_PERIOD = SUBOPT_NOOPT
	CHECK_PERIOD = SUBOPT_CHECK IF (CHECK_DATE$ = "Y")

310	!
	! Open journal header file
	!
	%INCLUDE "SOURCE:[AR.OPEN]AR_LBCRJH.UPD"

320	!
	! Open journal line file
	!
	%INCLUDE "SOURCE:[AR.OPEN]AR_LBCRJL.UPD"

330	!
	! Open LB_CONTROL file
	!
	%INCLUDE "SOURCE:[LB.OPEN]LB_CONTROL.OPN"

340	!
	! Open AR_OPEN_DIST file
	!
	%INCLUDE "SOURCE:[AR.OPEN]AR_OPEN_DIST.OPN"


350	!
	! Read control file for flags
	!
	GET #LB_CONTROL.CH%, REGARDLESS

	%PAGE

	!******************************************************************
	!	1) See if the posting process has been interrupted
	!	2) If not interrupted, go on
	!	3) If interrupted, delete the superceded ledger records
	!		and then continue
	!******************************************************************

	!******************************************************************
	! Check if posting process has been interrupted
	!******************************************************************

	!
	! Open up batch control file and check if interrupted
	!
	INTR_STATUS = ASSG_POSTBATCH(OPT_RESTART, BATCH_NUMBER, TITLE(), &
					UTL_REPORTX, "AR_LBCRJH", BATCH_NO$, &
					GL.INTER.PERIOD, AR.INTER.PERIOD)

	SELECT INTR_STATUS
		!
		! Success; keep going
		!
		CASE CMC$_NORMAL

		!
		! Process was interrupted
		!
		CASE CMC$_WARNING

			IF TRM$(GL.INTER.PERIOD) <> ""
			THEN
				GOTO Aborted IF &
					GL_TRAN_POSTGL(OPT_RESTART, SUBOPT_NOOPT, &
						BATCH_NUMBER, TITLE(), UTL_REPORTX, &
						"", "", GL.INTER.PERIOD) <> CMC$_NORMAL
			END IF

			IF TRM$(AR.INTER.PERIOD) <> ""
			THEN
				GOTO Aborted IF &
					AR_TRAN_POSTAR(OPT_RESTART, SUBOPT_NOOPT, &
						BATCH_NUMBER, TITLE(), UTL_REPORTX, &
						"", "", "", AR.INTER.PERIOD) <> CMC$_NORMAL
			END IF

		!
		! Abort post process
		!
		CASE ELSE
			GOTO Aborted

	END SELECT

	%PAGE

 AssignBatch:
	!******************************************************************
	!	1) Assign a batch number
	!	2) Make sure no legitimate records in the ledger already
	!		have this batch number; if any records do have
	!		this newly assigned number, go back to (1) and
	!		get a new one.
	!******************************************************************
	!
	! Open up batch control file and get a batch number
	!
	GOTO Aborted IF ASSG_POSTBATCH(OPT_ASSIGN, BATCH_NUMBER, TITLE(), &
					UTL_REPORTX, "AR_LBCRJH", BATCH_NO$, &
					GLPERIOD, "") <> CMC$_NORMAL

	EXIT_STATUS = GL_TRAN_POSTGL(OPT_CHECK, SUBOPT_NOOPT, &
					BATCH_NUMBER, TITLE(), UTL_REPORTX, &
					"", "", GLPERIOD)

	SELECT EXIT_STATUS
		!
		! Success; keep going
		!
		CASE CMC$_NORMAL

		!
		! Found batch number, go for new one
		!
		CASE CMC$_WARNING
			GOTO AssignBatch

		!
		! Something's definitely wrong here
		!
		CASE ELSE
			GOTO Aborted

	END SELECT

	EXIT_STATUS = AR_TRAN_POSTAR(OPT_CHECK, SUBOPT_NOOPT, BATCH_NUMBER, &
					TITLE(), UTL_REPORTX, "", "", "", GLPERIOD)

	SELECT EXIT_STATUS
		!
		! Success; keep going
		!
		CASE CMC$_NORMAL

		!
		! Found batch number, go for new one
		!
		CASE CMC$_WARNING
			GOTO AssignBatch

		!
		! Something's definitely wrong here
		!
		CASE ELSE
			GOTO Aborted

	END SELECT

	%PAGE

	!******************************************************************
	!	1) List the debits/credits transmittal for the user while
	!		also putting the journal data in temporary files
	!	2) If confirmation, then go on
	!******************************************************************

	!******************************************************************
	! Create transmittal
	!******************************************************************
	GOTO Aborted IF ASSG_POSTBATCH(OPT_ADDREC, BATCH_NUMBER, TITLE(), &
			UTL_REPORTX, "AR_LBCRJH", BATCH_NO$, "", "") <> CMC$_NORMAL

	POSTDATE = DATE_TODAY
	POSTTIME = TIME_NOW

	!
	! Blank flags
	!
	CUSTNUM$, HDRACCT$, TRANDAT$ = " "

 ReadHeader:
	!
	! Read in one record from the header file
	!
3000	GET #AR_LBCRJH.CH%

	!
	! Set some initial variable values
	!
	PRINTHEAD% = 0%

	!
	! Get the customer description
	!
	EXIT_STATUS = AR_EXAM_CUSTOM(AR_LBCRJH::CUSNUM, AR_35CUSTOM_EXAM)

	SELECT EXIT_STATUS
		!
		! Success; go on
		!
		CASE CMC$_NORMAL

		!
		! Undefined; set flag and go on
		!
		CASE CMC$_UNDEFINED
			CUSTNUM$ = "*" IF (AR_LBCRJH::TRATYP <> "10")

		!
		! SNAFU:  Situation Normal - All Fouled Up
		!
		CASE ELSE
			GOTO Aborted

	END SELECT

	!
	! See if CRJ Header Account number is defined
	!
	EXIT_STATUS = GL_EXAM_CHART(AR_LBCRJH::ACCT, GL_CHART_EXAM)

	SELECT EXIT_STATUS
		!
		! Success; go on
		!
		CASE CMC$_NORMAL

		!
		! Undefined; set a flag and go on
		!
		CASE CMC$_UNDEFINED
			HDRACCT$ = "*"

		!
		! SNAFU:  (Situation Normal - it's All Fouled Up)
		!
		CASE ELSE
			GOTO Aborted

	END SELECT

 ProcessLines:
	!
	! Find the first line item for the header
	!
3100	FIND #AR_LBCRJL.CH%, KEY #0% EQ AR_LBCRJH::RECNUM
	LINACCT$, SUBACCT$ = " "

 LineItem:
	!
	! Get the (next) line item
	!
3200	GET #AR_LBCRJL.CH%

	!
	! Finish up the header if we're done with the line items
	!
	GOTO ProcessHeader IF (AR_LBCRJL::RECNUM <> AR_LBCRJH::RECNUM)

	!
	! Generate a GL record to pass through to the post function
	!
	IF EDIT$(AR_LBCRJH::DESCR, -1%) = "" AND AR_LBCRJH::TRATYP = "09"
	THEN
		GL_YYYY_PP::DESCR	= AR_35CUSTOM_EXAM::CUSNAM
	ELSE
		GL_YYYY_PP::DESCR	= AR_LBCRJH::DESCR
	END IF
	GL_YYYY_PP::ACCT	= AR_LBCRJL::ACCT
	GL_YYYY_PP::SOURCE	= "CRJ"
	GL_YYYY_PP::REFNO	= AR_LBCRJL::INVNUM
	GL_YYYY_PP::TRANDAT	= AR_LBCRJH::TRADAT
	GL_YYYY_PP::AMOUNT	= AR_LBCRJL::AMOUNT
	GL_YYYY_PP::XREFNO	= AR_LBCRJH::CUSNUM
	GL_YYYY_PP::POSTIM	= POSTTIME
	GL_YYYY_PP::POSDAT	= POSTDATE
	GL_YYYY_PP::CKNO	= AR_LBCRJH::DEPOSIT
	GL_YYYY_PP::TRANKEY	= ""
	GL_YYYY_PP::SUBACC	= AR_LBCRJL::MATTER_NUM
	GL_YYYY_PP::OPERATION	= ""
	GL_YYYY_PP::UNITS	= 0.0
	GL_YYYY_PP::HOURS	= 0.0
	GL_YYYY_PP::UPDSTA	= ""
	GL_YYYY_PP::BTHNUM	= BATCH_NUMBER

	!
	! See if GL Chart number is defined
	!
	EXIT_STATUS = GL_EXAM_CHART(AR_LBCRJL::ACCT, GL_CHART_EXAM)

	SELECT EXIT_STATUS
		!
		! Success; go on
		!
		CASE CMC$_NORMAL

		!
		! Undefined; set a flag and go on
		!
		CASE CMC$_UNDEFINED
			LINACCT$ = "*"

		!
		! SNAFU:  (Situation Normal - it's All Fouled Up)
		!
		CASE ELSE
			GOTO Aborted

	END SELECT

	!
	! Put the record into the temporary file
	!
	EXIT_STATUS = GL_TRAN_POSTGL(OPT_ADDREC, CHECK_PERIOD, "", TITLE(), &
			UTL_REPORTX, GL_YYYY_PP, GL_CHART_EXAM, GLPERIOD)

	!
	! Check the date; is it in the correct period?
	!
	SELECT EXIT_STATUS
		!
		! Date good; continue
		!
		CASE CMC$_NORMAL, CMC$_WARNING

		!
		! Date not in period; set flag and continue
		!
		CASE CMC$_DATEOUT
			TRANDAT$ = "*"

		!
		! Strange days
		!
		CASE ELSE
			GOTO Aborted

	END SELECT

	!
	! Type "10" records are posted to GL, but not to AR.
	!
	GOTO ChkUndef IF (AR_LBCRJH::TRATYP = "10")
	GOTO ChkUndef IF (AR_LBCRJL::TRATYP = "2")

	!
	! Generate an AR_OPEN record to pass through to the post function
	!
	AR_OPEN::CUSNUM		= AR_LBCRJH::CUSNUM
	AR_OPEN::INVNUM		= AR_LBCRJL::INVNUM
	AR_OPEN::TRATYP		= AR_LBCRJH::TRATYP
	AR_OPEN::TRADAT		= AR_LBCRJH::TRADAT
	AR_OPEN::SALAMT		= AR_LBCRJL::AMOUNT
	AR_OPEN::DISAMT		= 0.0
	AR_OPEN::OTHCHG		= 0.0
	AR_OPEN::RECNUM		= AR_LBCRJH::RECNUM
	AR_OPEN::CHKNUM		= AR_LBCRJH::CHECK
	AR_OPEN::ARACCT		= AR_LBCRJL::ACCT
	AR_OPEN::SUBACC		= AR_LBCRJL::MATTER_NUM
	AR_OPEN::SALNUM		= ""
	AR_OPEN::DESCR		= AR_LBCRJH::DESCR
	AR_OPEN::BATCH		= BATCH_NUMBER
	AR_OPEN::UPDATED	= GLPERIOD + "00"
	AR_OPEN::CLOSEDATE	= ""
	AR_OPEN::DUEDATE	= ""
	AR_OPEN::DISCOUNTDATE	= ""

	!
	! Call the post function
	!
	GOTO Aborted IF AR_TRAN_POSTAR(OPT_ADDREC, SUBOPT_REGISTER, &
					BATCH_NUMBER, TITLE(), UTL_REPORTX, &
					AR_OPEN, "", "", GLPERIOD) <> CMC$_NORMAL

	!	GOTO Dodistyouself IF LB_CONTROL::GL_INTERFACE = "Y"

		!
		! Generate a AR_OPEN_DIST record to pass through to the
		! post function
		!
		AR_OPEN_DIST::INVNUM	= AR_LBCRJL::INVNUM
		AR_OPEN_DIST::CUSNUM	= AR_LBCRJH::CUSNUM
		AR_OPEN_DIST::SLINE	= ""
		AR_OPEN_DIST::ACCT	= AR_LBCRJL::ACCT
		AR_OPEN_DIST::SUBACCT	= AR_LBCRJL::MATTER_NUM
		AR_OPEN_DIST::AMOUNT	= -AR_LBCRJL::AMOUNT
		AR_OPEN_DIST::QTY	= 0.0
		AR_OPEN_DIST::LTYPE	= "2"
		AR_OPEN_DIST::TAXTYP	= AR_LBCRJL::ALLOCATE
		AR_OPEN_DIST::DESCR	= "PAYMENT"
		AR_OPEN_DIST::BATCH	= BATCH_NUMBER
		AR_OPEN_DIST::STAFF_NUM = AR_LBCRJL::STAFF
		AR_OPEN_DIST::POST_DATE = POSTDATE
		AR_OPEN_DIST::POST_TIME = POSTTIME
		AR_OPEN_DIST::UPDATED	= GLPERIOD

		!
		! Call the post function
		!
	GOTO Aborted IF AR_TRAN_POSTAR(OPT_ADDREC, SUBOPT_LINEITEM, &
					BATCH_NUMBER, TITLE(), UTL_REPORTX, &
					"", AR_OPEN_DIST, "", GLPERIOD) <> CMC$_NORMAL
	!	GOTO ChkUndef


	! DoDistyouself:
	!
	! This is where we will do the auto distribution for the customer
	! who uses this system with AR on.  It's going to be a bitch to
	! program and cause I ain't got the time right now - fuck it!


 ChkUndef:
	!
	! Was the account number undefined?
	!
	IF (LINACCT$ = "*") OR (SUBACCT$ = "*")
	THEN
		!
		! Print out the header if it hasn't already been
		!
		IF PRINTHEAD% = 0%
		THEN
			!
			! Put the header line in TEXT
			!
			TEXT =	"HEADER " + AR_LBCRJH::RECNUM + " " + &
				CUSTNUM$ + AR_LBCRJH::CUSNUM + " " + &
				HDRACCT$ + AR_LBCRJH::ACCT + " " + &
				TRANDAT$ + PRNT_DATE(AR_LBCRJH::TRADAT, 0%)

			!
			! Keep undefined codes
			!
			GOTO Aborted &
				IF OUTP_UNDEFCODES(OPT_ADDREC, TITLE(), UTL_REPORTX, TEXT) <> CMC$_NORMAL
			PRINTHEAD% = -1%

		END IF

		!
		! Put the invalid stuff in TEXT to send to OUTP_UNDEFCODES
		!
		TEXT =	"  LINE                      " + &
			LINACCT$ + AR_LBCRJL::ACCT + "            " + &
			SUBACCT$ + AR_LBCRJL::MATTER_NUM

		!
		! Keep undefined codes
		!
		GOTO Aborted &
			IF OUTP_UNDEFCODES(OPT_ADDREC, TITLE(), UTL_REPORTX, TEXT) <> CMC$_NORMAL

		!
		! Blank the flags
		!
		LINACCT$, SUBACCT$ = " "

	END IF

	GOTO LineItem

 ProcessHeader:
	!
	! Process the header
	!

3300	!
	! Generate a GL record to pass through to the post function
	!
	GL_YYYY_PP::REFNO	= AR_LBCRJH::RECNUM
	GL_YYYY_PP::DESCR	= EDIT$(AR_LBCRJH::DESCR, 128%) + " " &
		IF (AR_LBCRJH::DESCR <> "")
	GL_YYYY_PP::DESCR	= GL_YYYY_PP::DESCR + AR_35CUSTOM_EXAM::CUSNAM
	GL_YYYY_PP::XREFNO	= AR_LBCRJH::CUSNUM
	GL_YYYY_PP::POSTIM	= POSTTIME
	GL_YYYY_PP::POSDAT	= POSTDATE
	GL_YYYY_PP::TRANKEY	= ""
	GL_YYYY_PP::SUBACC	= ""
	GL_YYYY_PP::OPERATION	= ""
	GL_YYYY_PP::UNITS	= 0.0
	GL_YYYY_PP::HOURS	= 0.0
	GL_YYYY_PP::UPDSTA	= ""
	GL_YYYY_PP::BTHNUM	= BATCH_NUMBER
	GL_YYYY_PP::ACCT	= AR_LBCRJH::ACCT
	GL_YYYY_PP::SOURCE	= "CRJ"
	GL_YYYY_PP::TRANDAT	= AR_LBCRJH::TRADAT
	GL_YYYY_PP::AMOUNT	= AR_LBCRJH::AMNT
	GL_YYYY_PP::CKNO	= AR_LBCRJH::DEPOSIT

	!
	! Define AR Account number
	!
	GOTO Aborted IF &
		GL_EXAM_CHART(AR_LBCRJH::ACCT, GL_CHART_EXAM) <> CMC$_NORMAL

	!
	! Put the record into the temporary file
	!
	EXIT_STATUS = GL_TRAN_POSTGL(OPT_ADDREC, SUBOPT_NOOPT, "", &
					TITLE(), UTL_REPORTX, GL_YYYY_PP, &
					GL_CHART_EXAM, GLPERIOD)

		SELECT EXIT_STATUS

		!
		! Success; go on
		!
		CASE CMC$_NORMAL,CMC$_WARNING

		!
		! Something has gone wrong.
		!
		CASE ELSE
			GOTO Aborted

		END SELECT
	!
	! Was anything undefined?
	!
	IF INSTR(1%, CUSTNUM$+HDRACCT$, "*") AND (PRINTHEAD% = 0%)
	THEN
		!
		! Put the invalid stuff in TEXT to send to OUTP_UNDEFCODES
		!
		TEXT =	"HEADER " + AR_LBCRJH::RECNUM + " " + &
			CUSTNUM$ + AR_LBCRJH::CUSNUM + " " + &
			HDRACCT$ + AR_LBCRJH::ACCT + " " + &
			TRANDAT$ + PRNT_DATE(AR_LBCRJH::TRADAT, 0%)

		!
		! Keep undefined codes
		!
		GOTO Aborted &
			IF OUTP_UNDEFCODES(OPT_ADDREC, TITLE(), UTL_REPORTX, TEXT) <> CMC$_NORMAL

		!
		! Blank flags
		!
		CUSTNUM$, HDRACCT$, TRANDAT$ = " "

	END IF

	GOTO ReadHeader

 Confirm:
	!******************************************************************
	! Confirm posting
	!******************************************************************
	EXIT_STATUS = GL_TRAN_POSTGL(OPT_CONFIRM, SUBOPT_NOOPT, BATCH_NUMBER, &
					TITLE(), UTL_REPORTX, "", "", GLPERIOD)

	EXIT_STATUS = EXIT_STATUS AND OUTP_UNDEFCODES(OPT_CONFIRM, TITLE(), &
							UTL_REPORTX, "")

	GOTO Aborted IF EXIT_STATUS <> CMC$_NORMAL

	%PAGE

	!******************************************************************
	!	1) Since everything's correct and we have the user's
	!		permission, transfer all data from the temporary
	!		files into the ledger
	!******************************************************************
	!
	! Begin posting
	!
	GOTO Interrupt IF &
		GL_TRAN_POSTGL(OPT_POSTFILE, SUBOPT_DETAIL, BATCH_NUMBER, &
				TITLE(), UTL_REPORTX, "", "", GLPERIOD) <> CMC$_NORMAL

	!
	! Post the AR Cash Receipts Journal
	!
	GOTO Interrupt IF &
		AR_TRAN_POSTAR(OPT_POSTFILE, SUBOPT_REGISTER, BATCH_NUMBER, &
				TITLE(), UTL_REPORTX, "", "", "", GLPERIOD) <> CMC$_NORMAL

	GOTO Interrupt IF &
		AR_TRAN_POSTAR(OPT_POSTFILE, SUBOPT_LINEITEM, BATCH_NUMBER, &
				TITLE(), UTL_REPORTX, "", "", "", GLPERIOD) <> CMC$_NORMAL

	%PAGE

	!
	! Remove files
	!
5000	CLOSE AR_LBCRJH.CH%
	CLOSE AR_LBCRJL.CH%

5010	KILL AR_LBCRJH.DEV$ + "AR_LBCRJH_" + BATCH_NO$ + ".JRL" &
			FOR I% = 1% TO 10%

5020	KILL AR_LBCRJL.DEV$ + "AR_LBCRJL_" + BATCH_NO$ + ".JRL" &
			FOR I% = 1% TO 10%

 Complete:
	EXIT_STATUS = ASSG_POSTBATCH(OPT_COMPLETE, BATCH_NUMBER, TITLE(), &
					UTL_REPORTX, "AR_LBCRJH", BATCH_NO$,"","")

	PRNT_SUMMARY = SUBOPT_FINAL

 ExitProgram:
	!******************************************************************
	! Exit normally
	!******************************************************************
	!
	! Print credit and debit transmittals
	!
	EXIT_STATUS = GL_TRAN_POSTGL(OPT_SUMMARY, PRNT_SUMMARY, BATCH_NUMBER, &
				TITLE(), UTL_REPORTX, "", "", GLPERIOD)

	!
	! Print undefined codes (if any)
	!
	TEXT =	"Item   Receipt   Customer    AR AccountNumber    " + &
		"TransDate  SubAccount"

	EXIT_STATUS = OUTP_UNDEFCODES(OPT_SUMMARY, TITLE(), UTL_REPORTX, TEXT)

	!
	! Finish up the transmittal
	!
	CALL OUTP_FINISH(UTL_REPORTX)

	!
	! Exit to next program or menu
	!
	IF TRM$(UTL_REPORTX::NEXTRUN) = ""
	THEN
		CALL SUBR_3EXITPROGRAM(SCOPE, "", "")
	ELSE
		CALL SUBR_3EXITPROGRAM(SCOPE, "RUN " + UTL_REPORTX::NEXTRUN, "")
	END IF

	%PAGE

 Aborted:
	!******************************************************************
	! Abort process
	!******************************************************************
	IF INTR_STATUS <> CMC$_WARNING
	THEN
		EXIT_STATUS = ASSG_POSTBATCH(OPT_ABORT,	BATCH_NUMBER, &
						TITLE(), UTL_REPORTX, &
						"AR_LBCRJH", BATCH_NO$, "", "")
		GOTO ExitProgram
	END IF

	%PAGE

 Interrupt:
	!******************************************************************
	! Interrupt process
	!******************************************************************
	EXIT_STATUS = ASSG_POSTBATCH(OPT_INTERRUPT, BATCH_NUMBER, &
			TITLE(), UTL_REPORTX, "AR_LBCRJH", BATCH_NO$, "", "")

	GOTO ExitProgram

	%PAGE

 HelpError:
	!******************************************************************
	! Help Message for an error
	!******************************************************************
	CALL HELP_34MESSAGE(SCOPE, NUM1$(ERL) + " " + ERT$(ERR), &
			"E", ERN$, FILENAME$, NUM1$(ERR))

	UTL_REPORTX::STAT = -1%
	GOTO ExitProgram

	%PAGE

19000	!******************************************************************
	! Error trapping
	!******************************************************************
	!
	! Errors by Error number
	!
	SELECT ERR
		!
		!
		!
		CASE 138%
			SLEEP 5%
			RESUME

		!
		! Locked block
		!
		CASE 154%
			SLEEP 1%
			RESUME
	END SELECT

	!
	! Errors by line number
	!
	FILENAME$ = ""
	SELECT ERL
		!
		! Unable to open journal header file
		!
		CASE 310%
			FILENAME$ = "AR_LBCRJH"

		!
		! Unable to open journal line file
		!
		CASE 320%
			FILENAME$ = "AR_LBCRJL"

		CASE 330%
			FILENAME$ = "LB_CONTROL"

		CASE 340%
			FILENAME$ = "AR_OPEN_DIST"

		CASE 350%
			FILENAME$ = "LB_CONTROL"

		!
		! End of journal header file
		!
		CASE 3000%
			RESUME Confirm IF ERR = 11%
			FILENAME$ = "AR_LBCRJH"

		!
		! Unable to find line items
		!
		CASE 3100%
			RESUME ProcessHeader

		!
		! End of file on line items AR_LBCRJL
		!
		CASE 3200%
			RESUME ProcessHeader IF ERR = 11%
			FILENAME$ = "AR_LBCRJL"

		!
		! Cannot kill the header file; try to kill the lines
		!
		CASE 5010%
			RESUME 5020

		!
		! Cannot kill the line file
		!
		CASE 5020%
			RESUME Complete

	END SELECT

	!
	! Trap untrapped errors
	!
	RESUME HelpError

	%PAGE

32000	!******************************************************************
	! End of posting program AR_POST_LBCRJ
	!******************************************************************
	END
