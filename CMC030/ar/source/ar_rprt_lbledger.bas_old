1	%TITLE "Legal Accounts Receivable Register"
	%SBTTL "AR_RPRT_LBLEDGER"
	%IDENT "V3.3"

	!
	! COPYRIGHT (C) 1987, 1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! ID:AR041
	!
	! Abstract:HELP
	!	.b
	!	.lm +5
	!	The ^*Print Receivable Ledger\* option provides a report which
	!	details all open transactions which have occurred relative to each
	!	customer.  The report allows printing the entire file or selected
	!	ranges of the accounts receivable open file.
	!	.b
	!	The report contains the following information:
	!	.table 3,25
	!	.te
	!	Number	Name
	!	.te
	!	Invoice _#	Description
	!	.te
	!	Account	Date
	!	.te
	!	Sale Amount	Discount Amount
	!	.te
	!	Other	Gross Amount
	!	.te
	!	Receipt _#	Check _#
	!	.te
	!	Date	Amount
	!	.te
	!	Balance
	!	.end table
	!	.lm -5
	!
	! Index:
	!	.x Print>Receivable Ledger
	!	.x Receivable Ledger>Print
	!	.x Report>Receivable Ledger
	!	.x Receivable Ledger>Report
	!
	! Option:
	!
	!
	! Environment:
	!
	!	VAX/VMS BASIC+2 V4.4
	!
	! Author:
	!
	!	03/16/88 - Kevin Handy
	!
	! Compile:
	!
	!	$ BAS AR_SOURCE:AR_RPRT_LBLEDGER/LINE
	!	$ LINK/EXECUTABLE=AR_EXE:*.EXE AR_RPRT_LBLEDGER, -
	!		FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE AR_RPRT_LBLEDGER.OBJ;*
	!
	! Modification history:
	!
	!	11/15/87 - Robert Peterson
	!		Changed process to automatically calculate
	!		ledger date.
	!
	!	11/30/88 - Kevin Handy
	!		Modified calculation of cutoff month to consider
	!		those who do not use january as the first month.
	!
	!	08/10/90 - Kevin Handy
	!		Modified to move credit memo's (08) from the right
	!		hand side to the left hand side.
	!
	!	06/06/91 - Kevin Handy
	!		Unwound error trapping.
	!
	!	06/14/93 - Kevin Handy
	!		Added REGARDLESS to LB_35WIP.
	!--
	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:SCOPE.COM"

	%INCLUDE %FROM %CDD "CDD$TOP.UTL.UTL_REPORTX"
	DECLARE UTL_REPORTX_CDD UTL_REPORTX

	%INCLUDE %FROM %CDD "CDD$TOP.AR.AR_OPEN"
	MAP	(AR_OPEN)	AR_OPEN_CDD	AR_OPEN
	DIM			AR_OPEN_CDD	LEFT_OPEN(200%), RIGHT_OPEN(200%)

	%INCLUDE %FROM %CDD "CDD$TOP.AR.AR_35CUSTOM"
	MAP	(AR_35CUSTOM)	AR_35CUSTOM_CDD	AR_35CUSTOM

	%INCLUDE %FROM %CDD "CDD$TOP.AR.AR_CONTROL"
	MAP	(AR_CONTROL)	AR_CONTROL_CDD	AR_CONTROL

	%INCLUDE %FROM %CDD "CDD$TOP.GL.GL_PERIOD"
	MAP	(GL_PERIOD)	GL_PERIOD_CDD	GL_PERIOD

	%INCLUDE %FROM %CDD "CDD$TOP.LB.LB_MATTER"
	MAP	(LB_MATTER)	LB_MATTER_CDD	LB_MATTER

	%INCLUDE %FROM %CDD "CDD$TOP.LB.LB_35WIP"
	MAP	(LB_35WIP)	LB_35WIP_CDD	LB_35WIP

	!
	! External functions
	!
	EXTERNAL REAL    FUNCTION FUNC_ROUND
	EXTERNAL STRING  FUNCTION PRNT_DATE
	EXTERNAL REAL    FUNCTION FUNC_ROUND

	!
	! Dim
	!
	DIM MATTER_NUM$(100%), &
		MATTER_B_METHOD$(100%), &
		INVNUM$(1000%), &
		INVDAT$(1000%), &
		AMT(1000%)

	%PAGE

	ON ERROR GOTO 19000

 Init:	!
	! Initilize report
	!
	CALL OUTP_INITFROMFILE(UTL_REPORTX, 132%)

	GOTO ExitProgram IF UTL_REPORTX::STAT

	FROM.ITEM$	= EDIT$(UTL_REPORTX::OPTDEF(0%), 132%)

	!++
	! Abstract:FLD01
	!	^*(01) From Item\*
	!	.b
	!	.lm +5
	!	The ^*From Item\* value entered in this field causes the
	!	report to begin printing or displaying with a selected item
	!	number.
	!	.b
	!	A blank field causes the report to begin with the first
	!	item number in the file.
	!	.lm -5
	!
	! Index:
	!
	!--

	TO.ITEM$	= EDIT$(UTL_REPORTX::OPTDEF(1%), 132%)

	!++
	! Abstract:FLD02
	!	^*(02) To Item\*
	!	.b
	!	.lm +5
	!	The ^*To Item\* value entered in this field causes the report
	!	to end with a selected item number.
	!	.b
	!	A blank field causes the report to end with the last item
	!	number in the file.
	!	.lm -5
	!
	! Index:
	!
	!--

	SORTBY$		= EDIT$(UTL_REPORTX::OPTDEF(2%), -1%)

	!++
	! Abstract:FLD03
	!	^*(03) Sort by\*
	!	.b
	!	.lm +5
	!	The setting in the ^*Sort by\* field determines the order
	!	in which the report will print or be displayed.
	!	.b
	!	Valid settings are:
	!	.table 3,25
	!	.te
	!	^*N\* - Number
	!	.te
	!	^*T\* - Type
	!	.te
	!	^*C\* - Category
	!	.te
	!	^*A\* - Alphabetical
	!	.end table
	!	An entry is required in this field.
	!	.lm -5
	!
	! Index:
	!
	!--


	SELECT SORTBY$
		CASE	'N'
			K_NUM%	= 0%
			FROM.ITEM$ = LEFT(FROM.ITEM$, LEN(AR_35CUSTOM::CUSNUM))
			TO.ITEM$ = LEFT(TO.ITEM$, LEN(AR_35CUSTOM::CUSNUM))

		CASE	'T'
			K_NUM%	= 1%
			FROM.ITEM$ = LEFT(FROM.ITEM$, LEN(AR_35CUSTOM::TTYPE))
			TO.ITEM$ = LEFT(TO.ITEM$, LEN(AR_35CUSTOM::TTYPE))

		CASE	'C'
			K_NUM%	= 2%
			FROM.ITEM$ = LEFT(FROM.ITEM$, LEN(AR_35CUSTOM::CATEGORY))
			TO.ITEM$ = LEFT(TO.ITEM$, LEN(AR_35CUSTOM::CATEGORY))

		CASE	'A'
			K_NUM%	= 3%
			FROM.ITEM$ = LEFT(FROM.ITEM$, LEN(AR_35CUSTOM::ALPSRT))
			TO.ITEM$ = LEFT(TO.ITEM$, LEN(AR_35CUSTOM::ALPSRT))

	END SELECT

	PRINT_ZERO_INVOICE$	= EDIT$(UTL_REPORTX::OPTDEF(3%), -1%)

	!++
	! Abstract:FLD04
	!	^*(04) Print zero balances\*
	!	.b
	!	.lm +5
	!	The ^*Print zero balances\* field provides a means to suppress the
	!	printing of accounts with a zero balance.
	!	.b
	!	Valid codes are:
	!	.table 3,25
	!	.te
	!	^*Y\* - Yes
	!	.te
	!	^*N\* - No
	!	.end table
	!	An entry is required in this field.
	!	.lm -5
	!
	! Index:
	!
	!--

	CUT.OFF.REG$	= EDIT$(UTL_REPORTX::OPTDEF(4%), -1%)

300	!
	! Open AR_OPEN
	!
	%INCLUDE "SOURCE:[AR.OPEN]AR_OPEN.OPN"

310	!
	! Open Customer file
	!
	%INCLUDE "SOURCE:[AR.OPEN]AR_35CUSTOM.OPN"

330	!
	! Open AR Control file
	!
	%INCLUDE "SOURCE:[AR.OPEN]AR_CONTROL.MOD"

	GET #AR_CONTROL.CH%, RECORD 1%, REGARDLESS

	GOTO 350 IF CUT.OFF.REG$ <> 'Y'

340	!
	! Figure out what in the world needs done (a whole lot)
	!
	%INCLUDE "SOURCE:[GL.OPEN]GL_PERIOD.OPN"
	GET #GL_PERIOD.CH%, RECORD 1%, REGARDLESS
	CLOSE GL_PERIOD.CH%

	!
	! What state is the ar ledger in?
	!
	IF AR_CONTROL::CLOSEFLAG = '1'
	THEN
		CALL HELP_3MESSAGE(SCOPE, "AR Close in process", "ERR", "AR_CLOSE", &
			"ERROR_CLOSE")
		GOTO ExitProgram
	END IF

	IF AR_CONTROL::CLOSEFLAG = '2'
	THEN
		CALL HELP_3MESSAGE(SCOPE, "AR Reset in process", "ERR", "AR_RESET", &
			"ERROR_RESET")
		GOTO ExitProgram
	END IF

	IF AR_CONTROL::CLOSEFLAG = '3'
	THEN
		CALL HELP_3MESSAGE(SCOPE, "AR Purge in process", "ERR", "AR_PURGE", &
			"ERROR_PURGE")
		GOTO ExitProgram
	END IF

	CUR_PERIOD%	= AR_CONTROL::LASTPERCLOSE + 1%
	YEAR$		= AR_CONTROL::YEAR

	IF CUR_PERIOD% > GL_PERIOD::FPFY
	THEN
		CUR_PERIOD% = 1%
		YEAR$ = RIGHT(NUM1$(VAL(YEAR$)+10001%),2%)
	END IF

	CUT.OFF.DATE$	= YEAR$ + RIGHT(NUM1$(CUR_PERIOD%+100%),2%)
	UPDATE_GL$ = LEFT(CUT.OFF.DATE$, 6%)

350	!
	! Open files
	!
	%INCLUDE "SOURCE:[LB.OPEN]LB_MATTER.OPN"

360	!
	! Open the WIP file
	!
	%INCLUDE "SOURCE:[LB.OPEN]LB_35WIP.OPN"

 ReportTitle:
	!
	! Title
	!
	TITLE$(1%) =	"Legal Accounts Receivable Register"
	TITLE$(2%) =	""
	TITLE% = 3%

	IF CUT.OFF.REG$ = 'Y'
	THEN
		TITLE$(1%) =	"Legal Accounts Receivable Ledger"
		TITLE$(2%) =	"As of " + MID(CUT.OFF.DATE$,5%,2%) + " " + &
					LEFT(CUT.OFF.DATE$, 4%)
		TITLE$(3%) =	""
		TITLE% = 4%
	END IF

	!
	! Display Heading
	!
	TITLE$(TITLE%) = LEFT(AR_CONTROL::CTITLE, 10%) + "  Name"
	TITLE$(TITLE% + 1%) = "         Invoice   Matter #    Resp Staff  " + &
		"Date            Bill Amount  Receipt Chck #    " + &
		"Date        Receipt Amount         Balance"

	TITLE$(TITLE% + 2%) = ""

	%PAGE

17000	!******************************************************************
	! OUTPUT REPORT
	!******************************************************************

	IF FROM.ITEM$ = ""
	THEN
		RESET #AR_35CUSTOM.CH%, KEY#K_NUM%
	ELSE
		FIND #AR_35CUSTOM.CH%, KEY#K_NUM% GE FROM.ITEM$, REGARDLESS
	END IF

 GetNextRec:
17020	!
	! Main loop starts here
	!
	GOTO ExitProgram IF UTL_REPORTX::STAT

	!
	! Get next record
	!
	GET #AR_35CUSTOM.CH%, REGARDLESS

	!
	! Check current record
	!
	SELECT SORTBY$
		CASE 'N'
			GOTO ExitTotal IF (AR_35CUSTOM::CUSNUM > TO.ITEM$) AND &
				TO.ITEM$ <> ""
		CASE 'T'
			GOTO ExitTotal IF (AR_35CUSTOM::TTYPE > TO.ITEM$) AND &
				TO.ITEM$ <> ""
		CASE 'C'
			GOTO ExitTotal IF (AR_35CUSTOM::CATEGORY > TO.ITEM$) AND &
				TO.ITEM$ <> ""
		CASE 'A'
			GOTO ExitTotal IF (AR_35CUSTOM::ALPSRT > TO.ITEM$) AND &
				TO.ITEM$ <> ""
	END SELECT

17030	!
	! Search for first invoice record for this customer
	!
	LEFT_OPEN% = 0%			! Total # items in left column
	RIGHT_OPEN% = 0%		! Total # items in right column
	THIS_INVOICE$ = "1234567890123"	! Impossible invoice number.
	CUSTOMER_PRINTED% = 0%		! Has customer name been printed?

	CUS.SALAMT = 0.0		! Zero customer totals
	!Cus.DISAMAT = 0.0
	!CUS.OTHCHG = 0.0
	CUS.CREDIT = 0.0

	FIND #AR_OPEN.CH%, KEY #0 EQ AR_35CUSTOM::CUSNUM, REGARDLESS

17040	!
	! Pull in next record
	!
	GET #AR_OPEN.CH%, REGARDLESS

	GOTO 17090 IF AR_35CUSTOM::CUSNUM <> AR_OPEN::CUSNUM

	GOTO 17040 IF UPDATE_GL$ < LEFT(AR_OPEN::UPDATED,6%) AND &
		CUT.OFF.REG$ = 'Y'

	IF (AR_OPEN::INVNUM <> THIS_INVOICE$)
	THEN
		GOSUB DumpInvoice
	END IF

	SELECT AR_OPEN::TRATYP

		CASE "02"
			!
			! Cash sale.  Goes in both columns.  Balances to zero.
			!
			LEFT_OPEN% = LEFT_OPEN% + 1%
			LEFT_OPEN(LEFT_OPEN%) = AR_OPEN
			RIGHT_OPEN% = RIGHT_OPEN% + 1%
			RIGHT_OPEN(RIGHT_OPEN%) = AR_OPEN
			RIGHT_OPEN(RIGHT_OPEN%)::SALAMT = -RIGHT_OPEN(RIGHT_OPEN%)::SALAMT

		CASE "09", "10"
			!
			! Payments.  Goes in right column.
			!
			RIGHT_OPEN% = RIGHT_OPEN% + 1%
			RIGHT_OPEN(RIGHT_OPEN%) = AR_OPEN

		CASE ELSE
			!
			! All else goes in left column
			!
			LEFT_OPEN% = LEFT_OPEN% + 1%
			LEFT_OPEN(LEFT_OPEN%) = AR_OPEN
	END SELECT

	GOTO 17040

17090	!
	! Finish up this customer
	!
	GOSUB DumpInvoice	! Dump any undumped info

17100	!
	! Look up unposted matters
	!
	GOSUB LookUpMatter

17160	!
	! Print all unposted bills in the wip file
	!
	FOR WORK_LOOP% = 1% TO MATTER_LOOP%

		INVOICE_LOOP% = 0%

		FIND #LB_35WIP.CH%, &
			KEY#1% GE MATTER_NUM$(WORK_LOOP%) + AR_35CUSTOM::CUSNUM, &
			REGARDLESS

17170		!
		! Get LB_35WIP record
		!
		GET #LB_35WIP.CH%, REGARDLESS

		!
		! Skip out if done with this matter number
		!
		GOTO 17190 IF LB_35WIP::MATTER_NUM <> MATTER_NUM$(WORK_LOOP%)

		GOTO 17190 IF LB_35WIP::CLINUM <> AR_35CUSTOM::CUSNUM

		GOTO 17170 IF LB_35WIP::BILL_FLAG <> "B"

		SELECT LB_35WIP::WIP_FLAG
			CASE	"2","4","5"
				LB_35WIP::WIP_AMT = 0.0
				LB_35WIP::ADJUST = 0.0
		END SELECT

		!
		! Skip the wip file if the billing method is a contigency
		!
		IF (MATTER_B_METHOD$(WORK_LOOP%) = "4") AND &
			(INSTR(1%, "67", LB_35WIP::WIP_FLAG) = 0%)
		THEN
			GOTO 17170
		END IF

		GOTO InvoiceTotal IF INVNUM$(I%) = LB_35WIP::INVOICE_NUM &
			FOR I% = 1% TO INVOICE_LOOP%

		INVOICE_LOOP%, I% = INVOICE_LOOP% + 1%
		INVNUM$(I%) = LB_35WIP::INVOICE_NUM
		INVDAT$(I%) = LB_35WIP::INVOICE_DATE
		AMT(I%) = 0.0

 InvoiceTotal:
		AMT(I%) = AMT(I%) + LB_35WIP::WIP_AMT + LB_35WIP::ADJUST

17180		!
		! Try for next record of LB_35WIP
		!
		GOTO 17170

17190		FOR I% = 1% TO INVOICE_LOOP%
			LEFT_OPEN(1%)::CUSNUM	= AR_35CUSTOM::CUSNUM
			LEFT_OPEN(1%)::INVNUM	= INVNUM$(I%)
			LEFT_OPEN(1%)::TRATYP	= "01"
			LEFT_OPEN(1%)::TRADAT	= INVDAT$(I%)
			LEFT_OPEN(1%)::SALAMT	= AMT(I%)
			LEFT_OPEN(1%)::DISAMT	= 0.0
			LEFT_OPEN(1%)::OTHCHG	= 0.0
			LEFT_OPEN(1%)::RECNUM	= ""
			LEFT_OPEN(1%)::CHKNUM	= ""
			LEFT_OPEN(1%)::ARACCT	= ""
			LEFT_OPEN(1%)::SUBACC	= MATTER_NUM$(WORK_LOOP%)
			LEFT_OPEN(1%)::DESCR	= "Unposted Billings"

			LEFT_OPEN% = 1%		! Total # items in left column
			RIGHT_OPEN% = 0%	! Total # items in right column

			!
			! Print unposted billings
			!
			GOSUB DumpInvoice
			GOTO ExitProgram IF UTL_REPORTX::STAT
		NEXT I%
	NEXT WORK_LOOP%

	IF CUSTOMER_PRINTED%
	THEN
		TEXT$ = SPACE$(26%) + &
			FORMAT$(TRM$(AR_CONTROL::CTITLE) + " Total", &
				"'LLLLLLLLLLLLLLLLLLLLLLLLLLLLL") + &
			FORMAT$(CUS.SALAMT, "###,###,###.##") + &
			SPACE$(32%) + &
			FORMAT$(-CUS.CREDIT, "###,###,###.##  ") + &
			FORMAT$(CUS.SALAMT + &
				CUS.CREDIT, "###,###,###.##")

		CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 6%)
		CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 6%)
		CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 6%)
		GOTO ExitProgram IF UTL_REPORTX::STAT

		TOT.SALAMT = TOT.SALAMT + CUS.SALAMT
		TOT.CREDIT = TOT.CREDIT + CUS.CREDIT
	END IF

	GOTO 17020

	%PAGE

 ExitTotal:
	!*******************************************************************
	! Handle end of report
	!*******************************************************************
	TEXT$ = SPACE$(26%) + &
		FORMAT$("Grand Total", &
			"'LLLLLLLLLLLLLLLLLLLLLLLLLLLLL") + &
		FORMAT$(TOT.SALAMT, "###,###,###.##") + &
		SPACE$(32%) + &
		FORMAT$(-TOT.CREDIT, "###,###,###.##  ") + &
		FORMAT$(TOT.SALAMT + &
			TOT.CREDIT, "###,###,###.##")

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 6%)
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 6%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

 ExitProgram:
	CALL OUTP_FINISH(UTL_REPORTX)

	!
	! Exit to next program or menu
	!
	IF TRM$(UTL_REPORTX::NEXTRUN) = ""
	THEN
		CALL SUBR_3EXITPROGRAM(SCOPE, "", "")
	ELSE
		CALL SUBR_3EXITPROGRAM(SCOPE, "RUN " + UTL_REPORTX::NEXTRUN, "")
	END IF

	%PAGE

 LookUpMatter:
	!
	! Now look up all of the Matters for this client
	!
18000	MATTER_LOOP% = 0%

	FIND #LB_MATTER.CH%, KEY#0% EQ AR_35CUSTOM::CUSNUM, REGARDLESS

18020	GET #LB_MATTER.CH%, REGARDLESS

	GOTO 18090 IF LB_MATTER::CLINUM <> AR_35CUSTOM::CUSNUM

	MATTER_LOOP% = MATTER_LOOP% + 1%
	MATTER_NUM$(MATTER_LOOP%)  = LB_MATTER::MATTER_NUM
	MATTER_B_METHOD$(MATTER_LOOP%) = LB_MATTER::B_METHOD

	GOTO 18020

18090	RETURN

	%Page

 DumpInvoice:
18100	!*******************************************************************
	! Dump out all information collected for this one invoice.
	!*******************************************************************

	!
	! Skip if there is nothing here
	!
	GOTO 18190 IF (LEFT_OPEN% = 0%) AND (RIGHT_OPEN% = 0%)

	!
	! Force item into left size for titles if none there
	!
	LEFT_OPEN(1%) = RIGHT_OPEN(1%) IF LEFT_OPEN% = 0%

	!
	! Calculate total for this invoice
	!
	INVTOTAL = 0.0
	INVTOTAL = INVTOTAL + LEFT_OPEN(LOOP%)::SALAMT &
		FOR LOOP% = 1% TO LEFT_OPEN%
	INVTOTAL = INVTOTAL + RIGHT_OPEN(LOOP%)::SALAMT &
		FOR LOOP% = 1% TO RIGHT_OPEN%
	INVTOTAL = FUNC_ROUND(INVTOTAL, 2%)

	!
	! Skip invoice if not printing zero balance invoices
	!
	IF (PRINT_ZERO_INVOICE$ = "N") AND (INVTOTAL = 0.0)
	THEN
		GOTO 18190
	END IF

	!
	! If we haven't printed the customer name yet, then do so.
	!
	IF CUSTOMER_PRINTED% = 0%
	THEN
		TEXT$ = AR_35CUSTOM::CUSNUM + "  " + AR_35CUSTOM::CUSNAM

		CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 6%)
		GOTO ExitProgram IF UTL_REPORTX::STAT

		CUSTOMER_PRINTED% = -1%
	END IF

	!
	! Loop through all of the collected records
	!
	IF LEFT_OPEN% > RIGHT_OPEN%
	THEN
		ENDLOOP% = LEFT_OPEN%
	ELSE
		ENDLOOP% = RIGHT_OPEN%
	END IF

	FOR LOOP% = 1% TO ENDLOOP%
		!
		! Show invoice number only on first line of type
		!
		IF LOOP% = 1%
		THEN
			SUBACC$ = LEFT_OPEN(LOOP%)::SUBACC

			GOSUB LookUpStaff

			TEXT$ = "         " + &
				LEFT_OPEN(LOOP%)::INVNUM + "  " + &
				LEFT_OPEN(LOOP%)::SUBACC + "  " + &
				LB_MATTER::RESP_STAFF + "  "
		ELSE
			TEXT$ = "         " + &
				"        " + "  " + &
				"          " + "  " + &
				"          " + "  "
		END IF

		!
		! Handle left column
		!
		IF LOOP% <= LEFT_OPEN%
		THEN
			TEXT$ = TEXT$ + &
				PRNT_DATE(LEFT_OPEN(LOOP%)::TRADAT, 8%) + "   " + &
				FORMAT$(LEFT_OPEN(LOOP%)::SALAMT, "###,###,###.##  ")

			CUS.SALAMT = CUS.SALAMT + LEFT_OPEN(LOOP%)::SALAMT
			!CUS.DISAMT = CUS.DISAMT + LEFT_OPEN(LOOP%)::DISAMT
			!CUS.OTHCHG = CUS.OTHCHG + LEFT_OPEN(LOOP%)::OTHCHG
		ELSE
			TEXT$ = TEXT$ + SPACE$(29%)
		END IF

		!
		! Handle right column
		!
		IF LOOP% <= RIGHT_OPEN%
		THEN
			TEXT$ = TEXT$ + &
				RIGHT_OPEN(LOOP%)::RECNUM + "  " + &
				RIGHT_OPEN(LOOP%)::CHKNUM + "  " + &
				PRNT_DATE(RIGHT_OPEN(LOOP%)::TRADAT, 8%) + "  " + &
				FORMAT$(-RIGHT_OPEN(LOOP%)::SALAMT, "###,###,###.##  ")

			CUS.CREDIT = CUS.CREDIT + RIGHT_OPEN(LOOP%)::SALAMT
		ELSE
			TEXT$ = TEXT$ + SPACE$(46%)
		END IF

		!
		! Handle final total
		!
		IF LOOP% = ENDLOOP%
		THEN
			TEXT$ = TEXT$ + FORMAT$(INVTOTAL, "###,###,###.##")
		END IF

		CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 6%)
		GOTO ExitProgram IF UTL_REPORTX::STAT

	NEXT LOOP%

18190	!
	! Prepare for next invoice number
	!
	LEFT_OPEN% = 0%
	RIGHT_OPEN% = 0%
	THIS_INVOICE$ = AR_OPEN::INVNUM + ""

	RETURN

	%PAGE

 LookUpStaff:
18200	!******************************************************************
	! Look up matter number for resp staff
	!******************************************************************
	LB_MATTER::RESP_STAFF = STRING$(10%, 63%)

	GET #LB_MATTER.CH%, KEY#1% EQ LEFT(SUBACC$ + SPACE$(10%), 10%) + AR_35CUSTOM::CUSNUM, REGARDLESS

18290	RETURN

	%Page

 HelpError:
	!******************************************************************
	! Help Message for an error
	!******************************************************************
	CALL HELP_34MESSAGE(SCOPE, NUM1$(ERL) + " " + ERT$(ERR), &
			"E", ERN$, FILENAME$, NUM1$(ERR))
	UTL_REPORTX::STAT = -1%
	GOTO ExitProgram

	%Page

19000	!******************************************************************
	! ERROR TRAPPING
	!******************************************************************

	IF ERR=154%
	THEN
		SLEEP 1%
		RESUME
	END IF

	FILENAME$ = ""
	SELECT ERL

		CASE 300%
			FILENAME$ = "AR_OPEN"

		CASE 17040
			RESUME 17090 IF ERR = 11%
			FILENAME$ = "AR_OPEN"

		CASE 310%, 17000%
			FILENAME$ = "AR_35CUSTOM"

		CASE 17020%
			RESUME ExitTotal IF ERR = 11%
			FILENAME$ = "AR_35CUSTOM"

		CASE 17030%
			RESUME 17090

		CASE 330%
			FILENAME$ = "AR_CONTROL"

		CASE 340%
			FILENAME$ = "GL_PERIOD"

		!
		! LB Matter file
		!
		CASE 350%
			RESUME 360 IF ERR = 5%
			FILENAME$ = "LB_MATTER"

		!
		! LB Matter file
		!
		CASE 18020%
			RESUME 18090 IF ERR = 11%
			FILENAME$ = "LB_MATTER"

		!
		! LB Matter file
		!
		CASE 18200%
			RESUME 18290 IF ERR = 155% OR ERR = 9%
			FILENAME$ = "LB_MATTER"

		CASE 18000%
			RESUME 18090 IF ERR = 155%
			FILENAME$ = "LB_MATTER"

		!
		! LB Wip file
		!
		CASE 360%
			RESUME ReportTitle IF ERR = 5%
			FILENAME$ = "LB_35WIP"

		!
		! LB Wip file
		!
		CASE 17160%
			RESUME 17190 IF ERR = 155% OR ERR = 9%
			FILENAME$ = "LB_35WIP"

		!
		! LB Wip file
		!
		CASE 17170%
			RESUME 17190 IF ERR = 11%
			FILENAME$ = "LB_35WIP"

	END SELECT

	!
	! Untrapped error
	!
	RESUME HelpError

32767	END
