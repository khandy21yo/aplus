1	%TITLE "Legal Accounts Receivable Payment Report"
	%SBTTL "AR_RPRT_LBPAYMENT"
	%IDENT "V3.3"

	!
	! COPYRIGHT (C) 1991 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! ID:AR042
	!
	! Abstract:HELP
	!	.b
	!	.lm +5
	!	The ^*Accounts Receivable Payment Report\* provides the means
	!	to print a report of all payments received for a given period.
	!	The report will be printed in date sequence with sub-totals for
	!	each payment date.
	!	.b
	!	The report contains the following information:
	!	.table 3,25
	!	.te
	!	Client Number
	!	.te
	!	Client Name
	!	.te
	!	Matter Number
	!	.te
	!	Responsible Staff Number
	!	.te
	!	Date of Payment
	!	.te
	!	Amount of Payment
	!	.end table
	!	.lm -5
	!
	! Index:
	!	.x Print>Payment Report
	!	.x Payment Report>Print
	!	.x Report>Payment Report
	!	.x Payment Report>Report
	!
	! Option:
	!
	!
	! Environment:
	!
	!	VAX/VMS BASIC+2 V4.4
	!
	! Author:
	!
	!	02/15/91 - Val James Allen
	!
	! Compile:
	!
	!	$ BAS AR_SOURCE:AR_RPRT_LBPAYMENT/LINE
	!	$ LINK/EXECUTABLE=AR_EXE:*.EXE AR_RPRT_LBPAYMENT, -
	!		FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE AR_RPRT_LBPAYMENT.OBJ;*
	!
	! Modification history:
	!
	!--
	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:SCOPE.COM"

	%INCLUDE %FROM %CDD "CDD$TOP.UTL.UTL_REPORTX"
	DECLARE UTL_REPORTX_CDD UTL_REPORTX

	%INCLUDE %FROM %CDD "CDD$TOP.AR.AR_OPEN"
	MAP	(AR_OPEN)	AR_OPEN_CDD	AR_OPEN

	%INCLUDE %FROM %CDD "CDD$TOP.AR.AR_CLOSED"
	MAP	(AR_CLOSED)	AR_CLOSED_CDD	AR_CLOSED

	%INCLUDE %FROM %CDD "CDD$TOP.AR.AR_35CUSTOM"
	MAP	(AR_35CUSTOM)	AR_35CUSTOM_CDD	AR_35CUSTOM

	%INCLUDE %FROM %CDD "CDD$TOP.AR.AR_CONTROL"
	MAP	(AR_CONTROL)	AR_CONTROL_CDD	AR_CONTROL

	%INCLUDE %FROM %CDD "CDD$TOP.LB.LB_MATTER"
	MAP	(LB_MATTER)	LB_MATTER_CDD	LB_MATTER

	MAP	(AR_TEMP)	AR_TEMP.DATE$	= 8%, &
				AR_TEMP.CLINUM$	= 10%, &
				AR_TEMP.MATTER$	= 10%, &
				AR_TEMP.CLINAM$	= 40%, &
				AR_TEMP.STAFF$	= 10%, &
				AR_TEMP.AMOUNT

	!
	! External functions
	!
	EXTERNAL STRING  FUNCTION PRNT_DATE

	%PAGE

	ON ERROR GOTO 19000



 Init:	!
	! Initilize report
	!
	CALL OUTP_INITFROMFILE(UTL_REPORTX, 132%)

	GOTO ExitProgram IF UTL_REPORTX::STAT

	PERIOD$		= EDIT$(UTL_REPORTX::OPTDEF(0%), 132%)

	!++
	! Abstract:FLD01
	!	^*(01) Period\*
	!	.b
	!	.lm +5
	!	The ^*Period\* field in the Payment Received Analysis Report Setting
	!	Screen provides the means to enter an accounting period which
	!	designates the accounting period for
	!	which the report is to be printed or displayed.
	!	.b
	!	The format for entry is YYYYPP.
	!	.lm -5
	!
	! Index:
	!
	!--

	CALL READ_DEVICE('UTL_WORK',UTL_WORK.DEV$,STAT%)

300	!
	%INCLUDE "SOURCE:[AR.OPEN]AR_OPEN.OPN"

310	!
	! Open Customer file
	!
	%INCLUDE "SOURCE:[AR.OPEN]AR_35CUSTOM.OPN"

330	!
	! Open AR Control file
	!
	%INCLUDE "SOURCE:[AR.OPEN]AR_CONTROL.MOD"

	GET #AR_CONTROL.CH%, RECORD 1%, REGARDLESS


	IF AR_CONTROL::CLOSEFLAG = '1'
	THEN
		CALL HELP_3MESSAGE(SCOPE, "AR Close in process", "ERR", "AR_CLOSE", &
			"ERROR_CLOSE")
		GOTO ExitProgram
	END IF

	IF AR_CONTROL::CLOSEFLAG = '2'
	THEN
		CALL HELP_3MESSAGE(SCOPE, "AR Reset in process", "ERR", "AR_RESET", &
			"ERROR_RESET")
		GOTO ExitProgram
	END IF

	IF AR_CONTROL::CLOSEFLAG = '3'
	THEN
		CALL HELP_3MESSAGE(SCOPE, "AR Purge in process", "ERR", "AR_PURGE", &
			"ERROR_PURGE")
		GOTO ExitProgram
	END IF

350	!
	! Open files
	!
	%INCLUDE "SOURCE:[LB.OPEN]LB_MATTER.OPN"

360	%INCLUDE "SOURCE:[AR.OPEN]AR_CLOSED.OPN"

400	!
	! Create work file type staff number
	CALL ENTR_3MESSAGE(SCOPE, "Creating temporary file.  Reading work files.", 1%)

	CALL ASSG_CHANNEL(AR_TEMP.CH%,STAT%)

	OPEN   "AR_TEMP.TMP" FOR OUTPUT AS FILE #AR_TEMP.CH%, &
		ORGANIZATION INDEXED FIXED, &
		MAP AR_TEMP, &
		PRIMARY KEY ( &
				AR_TEMP.DATE$, &
				AR_TEMP.CLINUM$, &
				AR_TEMP.MATTER$) &
		DUPLICATES, &
		TEMPORARY, &
		BUFFER 32%, &
		ACCESS MODIFY, ALLOW NONE

500	!
	! Start putting stuff into AR_TEMP file
	!
	RESET #AR_OPEN.CH%

600	GET #AR_OPEN.CH%, REGARDLESS

	GOTO 600 IF AR_OPEN::UPDATED <> PERIOD$

	GOTO 600 IF AR_OPEN::TRATYP <> "09"

	AR_TEMP.DATE$ = AR_OPEN::TRADAT

	AR_TEMP.CLINUM$ = AR_OPEN::CUSNUM

	AR_TEMP.MATTER$ = AR_OPEN::SUBACC

	AR_TEMP.CLINAM$ = "???????????????????????????"

	AR_TEMP.STAFF$ = "???"

	AR_TEMP.AMOUNT = AR_OPEN::SALAMT

	GOSUB BuildTempFile

	GOTO 600


700	!
	! Process the closed file
	!

	RESET #AR_CLOSED.CH%

710	GET #AR_CLOSED.CH%, REGARDLESS

	GOTO 700 IF AR_CLOSED::UPDATED <> PERIOD$

	GOTO 700 IF AR_CLOSED::TRATYP <> "09"

	AR_TEMP.DATE$ = AR_CLOSED::TRADAT

	AR_TEMP.CLINUM$ = AR_CLOSED::CUSNUM

	AR_TEMP.MATTER$ = AR_CLOSED::SUBACC

	AR_TEMP.CLINAM$ = "???????????????????????????"

	AR_TEMP.STAFF$ = "???"

	AR_TEMP.AMOUNT = AR_CLOSED::SALAMT

	GOSUB BuildTempFile

	GOTO 710

 BuildTempFile:

	!
	! Build temporary report file
	!
800
	!
	! Get the customer name from AR_35CUSTOM
	GET #AR_35CUSTOM.CH%, KEY#0% EQ AR_TEMP.CLINUM$, REGARDLESS

	AR_TEMP.CLINAM$ = AR_35CUSTOM::CUSNAM

810	!
	! Get the staff from the Matter Master file
	!
	GET #LB_MATTER.CH%, KEY#1% EQ AR_TEMP.MATTER$ + AR_TEMP.CLINUM$, REGARDLESS

	AR_TEMP.STAFF$ = LB_MATTER::RESP_STAFF

820	PUT #AR_TEMP.CH%

	RETURN


 ReportTitle:
	!
	! Title
	!
	TITLE$(1%)	= "ACCOUNTS RECEIVABLE PAYMENTS REPORT"
	TITLE$(2%)	= "For Period: "+PERIOD$
	TITLE$(3%)	= ""

	TITLE$(4%)	= "Client #    ClientName                      " + &
				"Matter #    TransDate   Stf          PayAmount"
	TITLE$(5%)	= ""

	%PAGE

17000	!*******************************************************************
	! OUTPUT REPORT HERE
	!*******************************************************************

	RESET #AR_TEMP.CH%

	DATECHECK$ = ""

 GetNextRec:
17010
	!
	! Main Report printing takes place here
	!
	GOTO ExitProgram IF UTL_REPORTX::STAT

	!
	! Get Next Record
	!
	GET #AR_TEMP.CH%, REGARDLESS

	GOSUB DayTotal IF AR_TEMP.DATE$ <> DATECHECK$ AND DATECHECK$ <> ""

	DATECHECK$ = AR_TEMP.DATE$

	DATEDOLLAR = DATEDOLLAR + AR_TEMP.AMOUNT

	TOTALDOLLAR = TOTALDOLLAR + AR_TEMP.AMOUNT

	TEXT$ = AR_TEMP.CLINUM$ + "  " + &
		LEFT(AR_TEMP.CLINAM$, 30%) + "  " + &
		AR_TEMP.MATTER$ + "  " + &
		PRNT_DATE(AR_TEMP.DATE$, 8%) + "  " + &
		AR_TEMP.STAFF$ + "  " + &
		FORMAT$(AR_TEMP.AMOUNT, "###,###.##")

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	GOTO GetNextRec

 DayTotal:

	!
	! Print the total for the day
	!
	RETURN IF DATECHECK$ = ""

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT


	TEXT$ = "DATE: "+PRNT_DATE(DATECHECK$, 8%)+" TOTAL:" + SPACE$(57%) + &
		FORMAT$(DATEDOLLAR, "###,###.##")

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	DATEDOLLAR = 0.0

	RETURN


 ExitTotal:
	!*******************************************************************
	! Handle end of report
	!*******************************************************************

	GOSUB DayTotal

	!
	! Print the total for the Report
	!

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT


	TEXT$ = "GRAND TOTAL:" + SPACE$(68%) + &
		FORMAT$(TOTALDOLLAR, "###,###.##")

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

 ExitProgram:
	CALL OUTP_FINISH(UTL_REPORTX)

	!
	! Exit to next program or menu
	!
	IF TRM$(UTL_REPORTX::NEXTRUN) = ""
	THEN
		CALL SUBR_3EXITPROGRAM(SCOPE, "", "")
	ELSE
		CALL SUBR_3EXITPROGRAM(SCOPE, "RUN " + UTL_REPORTX::NEXTRUN, "")
	END IF

	%PAGE

 HelpError:
	!******************************************************************
	! Help Message for an error
	!******************************************************************
	CALL HELP_34MESSAGE(SCOPE, NUM1$(ERL) + " " + ERT$(ERR), &
			"E", ERN$, FILENAME$, NUM1$(ERR))
	UTL_REPORTX::STAT = -1%
	GOTO ExitProgram

	%Page

19000	!******************************************************************
	! ERROR TRAPPING
	!******************************************************************

	IF ERR=154%
	THEN
		SLEEP 1%
		RESUME
	END IF

	FILENAME$ = ""
	SELECT ERL

		CASE 300%
			FILENAME$ = "AR_OPEN"

		CASE 310%
			FILENAME$ = "AR_35CUSTOM"

		CASE 330%
			FILENAME$ = "AR_CONTROL"

		!
		! LB Matter file
		!
		CASE 350%
			FILENAME$ = "LB_MATTER"

		CASE 360%
			FILENAME$ = "AR_CLOSED"

		CASE 600%
			RESUME 700 IF ERR = 11%
			FILENAME$ = "AR_OPEN"

		CASE 710%
			RESUME ReportTitle IF ERR = 11%
			FILENAME$ = "AR_CLOSED"

		CASE 800%
			RESUME 810

		CASE 810%
			RESUME 820

		CASE 17010%
			RESUME ExitTotal IF ERR = 11%
			FILENAME$ = "AR_TEMP"


	END SELECT

	!
	! Untrapped error
	!
	RESUME HelpError

32767	END
