1	%TITLE "Print Billing Agency Bills Using a Form"
	%SBTTL "BA_FORM_JOURNAL"
	%IDENT "V3.6a Calico"

	!
	! COPYRIGHT (C) 1987, 1988 BY
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho  83402.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! ID:BAFORM
	!
	! Abstract:HELP
	!	.p
	!	The ^*Print Form\* program provide the means to print the Billing Agency
	!	Bills in the specified form. The option to print the bills in an alignment
	!	form is also available.
	!
	! Index:
	!	.x Print Forms
	!	.x Forms>Print
	!
	! Option:
	!
	! Compile:
	!
	!	$ BAS BA_SOURCE:BA_FORM_JOURNAL/LINE
	!	$ LINK/EXECUTABLE=BA_EXE:*.EXE BA_FORM_JOURNAL, -
	!		FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE BA_FORM_JOURNAL.OBJ;*
	!
	! Author:
	!
	!	05/16/88 - Kevin Handy
	!
	! Modification history:
	!
	!	08/30/88 - Kevin Handy
	!		Fixed so journal header open modify so that update
	!		will not cause it to crash.
	!
	!	09/15/88 - Kevin Handy
	!		Modified to page properly in line part.
	!
	!	11/29/90 - Frank F. Starman
	!		Update to the BA controlling file after each invoice.
	!		Don't wait to the last one.
	!
	!	12/13/90 - Val James Allen
	!		Modified for continous pre-assigned invoice forms
	!		using forms modifier FRM-ASSIGN and XOUT_ASSIGN.
	!
	!	06/04/91 - J. Shad Rydalch
	!		Added form fields for address that will keep
	!		post office happy.
	!
	!	03/16/92 - Dan Perkins
	!		Allow processing different batches.
	!
	!	06/08/92 - Kevin Handy
	!		Modified to use OUTP_INITFORM function.
	!
	!	06/16/92 - Kevin Handy
	!		Clean up (check)
	!
	!	09/23/93 - Kevin Handy
	!		Removed JJ$ and READ_SYSJOB.
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	10/15/96 - Kevin Handy
	!		Reformat source code
	!
	!	05/09/97 - Kevin Handy
	!		Lose PRNT.CH% variable
	!
	!	05/13/97 - Kevin Handy
	!		Reformat source code
	!
	!	09/09/97 - Kevin Handy
	!		Lose unecessary external definitions
	!
	!	08/17/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!
	!	10/25/98 - Kevin Handy
	!		Don't bother eraseing SMG_SCREEN_DATA, which is
	!		never created.
	!--
	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	!
	! Define maps
	!
	%INCLUDE "SOURCE:[AR.OPEN]AR_35CUSTOM.HB"
	MAP (AR_35CUSTOM)	AR_35CUSTOM_CDD		AR_35CUSTOM

	%INCLUDE "SOURCE:[BA.OPEN]BA_JOURNALH.HB"
	MAP (BA_JOURNALH)	BA_JOURNALH_CDD		BA_JOURNALH

	%INCLUDE "SOURCE:[BA.OPEN]BA_JOURNALL.HB"
	MAP (BA_JOURNALL)	BA_JOURNALL_CDD		BA_JOURNALL

	%INCLUDE "SOURCE:[BA.OPEN]BA_CUSTYP.HB"
	MAP (BA_RESP_STAFF)	BA_CUSTYP_CDD		BA_RESP_STAFF
	MAP (BA_CUSTYP)		BA_CUSTYP_CDD		BA_CUSTYP

	%INCLUDE "SOURCE:[BA.OPEN]BA_CONTROL.HB"
	MAP (BA_CONTROL)	BA_CONTROL_CDD		BA_CONTROL

	%INCLUDE "SOURCE:[PR.OPEN]PR_EMP_MASTER.HB"
	MAP (PR_EMP_MASTER)	PR_EMP_MASTER_CDD	PR_EMP_MASTER

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_REPORT.HB"
	MAP (UTL_REPORT)	UTL_REPORT_CDD		UTL_REPORT
	DECLARE			UTL_REPORT_CDD		UTL_REPORT_SYS

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_REPORTX.HB"
	DECLARE			UTL_REPORTX_CDD		UTL_REPORTX

	%INCLUDE "SOURCE:[UTL.OPEN]FORM_GROUP.HB"
	DIM FORM_GROUP_CDD FORM_GROUP(20%)	! Max of 20 groups

	COM (BA_FORM) &
		TOTAL_DAYS, &
		TOTAL_HOURS, &
		TOTAL_UNITS, &
		TOTAL_WAGES, &
		TOTAL_FEE, &
		INVOICE_DATE$ = 8%, &
		PAGE_NUMBER%, &
		XOUTASSIGN$ = 30%, &
		AR_CUSTOM.ADDLINE$(4%) = 50%, &
		PR_EMP_MASTER.ADDLINE$(3%) = 50%

	!
	! External functions
	!
	EXTERNAL LONG		FUNCTION OUTP_FORMINIT
	EXTERNAL LONG		FUNCTION OUTP_FORMPRINT
	EXTERNAL LONG   FUNCTION OUTP_INITFORM

	%PAGE

	ON ERROR GOTO 19000

	!*******************************************************************
	! Initilize maintainence
	!*******************************************************************

	CALL READ_INITIALIZE

	REPORT$ = "BAJOUR"

	!
	! Look up device
	!
	CALL  READ_DEVICE("BA_FORM", BA_FORM.DEV$, STAT%)

	!***************************************************************
	! Open all of the files
	!***************************************************************

320	!
	! TM Control file
	!
	%INCLUDE "SOURCE:[BA.OPEN]BA_CONTROL.MOD"

	GET #BA_CONTROL.CH%, REGARDLESS
	UNLOCK #BA_CONTROL.CH%

330	!
	! Open REPORT file
	!
	OPTN$ = "01" + BA_CONTROL::INV_NUM
	STAT% = FUNC_INCREMENT(OPTN$)

	GOTO ExitProgram &
		IF OUTP_INITFORM(UTL_REPORTX, REPORT$, OPTN$) <> CMC$_NORMAL

	INVOICE_DATE$ = DATE_STOREDATE(UTL_REPORTX::OPTDEF(0%))

	!++
	! Abstract:FLD01
	!	^*(01) Invoice Date\*
	!	.p
	!	The ^*Invoice Date\* field provides the means to enter the date of the
	!	invoice which will be used when printing the bills. Format for entry in this
	!	field consists of either MMDDYYYY or MMDDYY.
	!
	! Index:
	!	.x Invoice Date
	!	.x Date>Invoice
	!
	!--

	REF_NO$ = UTL_REPORTX::OPTDEF(1%)

	!++
	! Abstract:FLD02
	!	^*(02) Invoice Number\*
	!	.p
	!	The ^*Invoice Number\* field provides the means to enter the number of the
	!	invoice which will be printed. Entry is required in this field.
	!
	! Index:
	!	.x Invoice Number
	!	.x Number>Invoice
	!
	!--

	REPORT$ = REPORT$ + "$" + TRM$(UTL_REPORTX::OPTDEF(2%))

	!++
	! Abstract:FLD03
	!	^*(03) Billing Form\*
	!	.p
	!	The ^*Billing Form\* field provides for entry of the form which will be
	!	used in the printing of the bills.
	!
	! Index:
	!	.x Billing Form
	!	.x Form>Billing
	!
	!--

	BATCH_NO$ = EDIT$(UTL_REPORTX::OPTDEF(3%), -1%)

	!++
	! Abstract:FLD04
	!	^*(04) Batch Number\*
	!	.p
	!	The ^*Batch Number\* field allows for entry of a selected
	!	batch number. Each Journal File is assigned
	!	a user batch number consisting of two (2) alphanumeric
	!	characters.
	!
	! Index:
	!	.x Batch Number>Purchase Order Form
	!	.x Purchase Order Form>Batch Number
	!
	!--

600	!
	! Open vendor master file
	!
	%INCLUDE "SOURCE:[AR.OPEN]AR_35CUSTOM.OPN"

610	!
	! Open payroll master file
	!
	%INCLUDE "SOURCE:[PR.OPEN]PR_EMP_MASTER.OPN"

630	!
	! Open the matter file
	!
	%INCLUDE "SOURCE:[BA.OPEN]BA_JOURNALH.MOD"

640	!
	! Open the matter file
	!
	%INCLUDE "SOURCE:[BA.OPEN]BA_JOURNALL.OPN"

650	!
	! Open the staff file
	!
	%INCLUDE "SOURCE:[BA.OPEN]BA_CUSTYP.OPN"

 EndOpen:
	!
	! Load in the form
	!
	GOSUB LoadForm

	!
	! GOTO aligment routine
	!
	GOSUB Alignment

	%PAGE

2000	!*******************************************************************
	! Read through CDJ file
	!*******************************************************************

	RESET #BA_JOURNALH.CH%

2005	GET #BA_JOURNALH.CH%

2006	!
	! Skip unless invoice number field is blank
	!
	GOTO 2005 IF BA_JOURNALH::INVNUM <> ""
	!
	! Set up for Xing out pre-printed invoice numbers on form
	!
	XOUTASSIGN$ = ""

	!
	! Assign invoice number to item
	!
	BA_JOURNALH::INVNUM = REF_NO$
	GOSUB PrintBill

	UPDATE #BA_JOURNALH.CH%

2007	!
	! Update immediately to the controlling file
	!
	GET #BA_CONTROL.CH%, RECORD 1%
	BA_CONTROL::INV_NUM = REF_NO$
	UPDATE #BA_CONTROL.CH%
 !	UNLOCK #BA_CONTROL.CH%

	STAT% = FUNC_INCREMENT(REF_NO$)		! Increment invoice number

	GOTO 2005

 PrintBill:
2010	!*******************************************************************
	! Get next record
	!*******************************************************************

	GET #AR_35CUSTOM.CH%, KEY#0% EQ BA_JOURNALH::CUSNUM, REGARDLESS

	!
	! Create an address line format that reduces white space
	!
	I% = 0%

	IF EDIT$(AR_35CUSTOM::ADD1, -1%) <> ""
	THEN
		I% = I% + 1%
		AR_CUSTOM.ADDLINE$(I%) = &
			EDIT$(AR_35CUSTOM::ADD1, 8% + 16% + 32% + 128%)
	END IF

	IF EDIT$(AR_35CUSTOM::ADD2, -1%) <> ""
	THEN
		I% = I% + 1%
		AR_CUSTOM.ADDLINE$(I%) = &
			EDIT$(AR_35CUSTOM::ADD2, 8% + 16% + 32% + 128%)
	END IF

	IF EDIT$(AR_35CUSTOM::ADD3, -1%) <> ""
	THEN
		I% = I% + 1%
		AR_CUSTOM.ADDLINE$(I%) = &
			EDIT$(AR_35CUSTOM::ADD3, 8% + 16% + 32% + 128%)
	END IF

	I% = I% + 1%
	AR_CUSTOM.ADDLINE$(I%) = EDIT$(EDIT$(AR_35CUSTOM::CITY, 128%) + ", " + &
		AR_35CUSTOM::STATE + " " + AR_35CUSTOM::ZIP + " " + &
		AR_35CUSTOM::COUNTRY, 8% + 16% + 32% + 128%)

	AR_CUSTOM.ADDLINE$(LOOP%) = "" FOR LOOP% = I% + 1% TO 3%

2020	!
	! Go through the WIP file, and see what groups have been
	! allocated, and generate totals for each group.
	!
	TOTAL_DAYS = 0.0
	TOTAL_HOURS = 0.0
	TOTAL_UNITS = 0.0
	TOTAL_WAGES = 0.0
	TOTAL_FEE = 0.0

	FIND #BA_JOURNALL.CH%, KEY#0% GE BA_JOURNALH::BILLNUM, REGARDLESS

2050	GET #BA_JOURNALL.CH%, REGARDLESS

	!
	! Give up when the matter number changes
	!
	IF BA_JOURNALL::BILLNUM = BA_JOURNALH::BILLNUM
	THEN
		!
		! Summarize.
		!
		TOTAL_DAYS = TOTAL_DAYS + BA_JOURNALL::DAYS
		TOTAL_HOURS = TOTAL_HOURS + BA_JOURNALL::HOURS
		TOTAL_UNITS = TOTAL_UNITS + BA_JOURNALL::UNITS
		TOTAL_WAGES = TOTAL_WAGES + BA_JOURNALL::WAGES
		TOTAL_FEE = TOTAL_FEE + BA_JOURNALL::FEE

		GOTO 2050

	END IF

2100	!
	! Is there anything to print
	!
	GOSUB PrintForm

2180	GOTO ExitProgram IF UTL_REPORTX::STAT

2190	!
	! Go get the next vendor record
	!
	RETURN

	%PAGE

 ExitProgram:
4000	!******************************************************************
	! Exit the program
	!******************************************************************

	CALL OUTP_FINISHNOTITLE(UTL_REPORTX)

	CLOSE BA_CONTROL.CH%

	!
	! Erase Display
	!
	SMG_STATUS% = SMG$ERASE_DISPLAY(SCOPE::SMG_OPTION)
	SMG_STATUS% = SMG$ERASE_DISPLAY(SCOPE::SMG_MESSAGE)

	!
	! Change the width
	!
	SMG_STATUS% = SMG$CHANGE_PBD_CHARACTERISTICS(SCOPE::SMG_PBID, 80%)

 ExitProgram1:
	CALL SUBR_3EXITPROGRAM(SCOPE, "", "")

	%PAGE

 PrintForm:
18000	!***************************************************************
	! Print the bill now
	!***************************************************************

	FOR FORM_LOOP% = 1% TO FORM_GROUP%

		!
		! Page if necessary
		!
		IF LINE_COUNT% > FORM_GROUP(FRM_TOP%)::NUMBER - 4%
		THEN
			GOSUB NewPage
		END IF

		!
		! Top of the form
		!
		IF (FORM_GROUP(FORM_LOOP%)::FGROUP = "FRM-TOP")
		THEN
			LINE_COUNT% = LINE_COUNT% + &
				OUTP_FORMPRINT(UTL_REPORTX, &
				FORM_LOOP%, &
				FORM_TEXT$, &
				FORM_GROUPS%, &
				FORM_GROUP(), &
				0%)
			GOTO 18080
		END IF

		!
		! Body of a group
		!
		IF (FORM_GROUP(FORM_LOOP%)::FGROUP = "FRM-BODY")
		THEN
			GOSUB MatterGroups

			GOTO 18080
		END IF

		!
		! Bottom of the form
		!
		IF (FORM_GROUP(FORM_LOOP%)::FGROUP = "FRM-BOTTOM")
		THEN
			LINE_COUNT% = LINE_COUNT% + &
				OUTP_FORMPRINT(UTL_REPORTX, &
				FORM_LOOP%, &
				FORM_TEXT$, &
				FORM_GROUPS%, &
				FORM_GROUP(), &
				0%)
			GOTO 18080
		END IF

		!
		! Don't know what it is.  Fake it.
		!
		LINE_COUNT% = LINE_COUNT% + OUTP_FORMPRINT(UTL_REPORTX, &
			FORM_LOOP%, &
			FORM_TEXT$, &
			FORM_GROUPS%, &
			FORM_GROUP(), &
			0%)

18080	NEXT FORM_LOOP%

	!
	! Print lines to botton of the form
	!
	CALL OUTP_LINENOTITLE(LYT_LINE$, UTL_REPORTX, "", 0%) &
		FOR LOOP% = LINE_COUNT% + 1% TO FORM_GROUP(FRM_TOP%)::NUMBER

	LINE_COUNT% = 0%

18190	!
	! Done with this form
	!
	RETURN

 NewPage:
	!*******************************************************************
	! Skip to next page
	!*******************************************************************

	CALL OUTP_LINENOTITLE(LYT_LINE$, UTL_REPORTX, "", 0%) &
		FOR LOOP% = LINE_COUNT% + 1% TO FORM_GROUP(FRM_TOP%)::NUMBER

	!
	! Set up for new page
	!
	LINE_COUNT% = 0%
	PAGE_NUMBER% = PAGE_NUMBER% + 1%
	!
	! Check if pre-assigned form numbers used
	! and increase it
	!
	IF FRM_ASSIGN% = 1%
	THEN
		STAT% = FUNC_INCREMENT(REF_NO$)
		XOUTASSIGN$ = STRING$(30%, ASCII("X"))
	END IF

	!
	! Print top of page, if we have one.
	!
	LINE_COUNT% = LINE_COUNT% + OUTP_FORMPRINT(UTL_REPORTX, &
		FRM_TOP%, &
		FORM_TEXT$, &
		FORM_GROUPS%, &
		FORM_GROUP(), &
		0%) &
		IF FRM_TOP%

	RETURN

	%PAGE

 MatterGroups:
18200	!*******************************************************************
	! Print out all info that exists for a specific grouping of
	! matter types
	!*******************************************************************

	THIS_COUNT% = 0%

	!
	! Get first item
	!
	FIND #BA_JOURNALL.CH%, KEY #0% GE BA_JOURNALH::BILLNUM, REGARDLESS

18210	!
	! Pull up next
	!
	GET #BA_JOURNALL.CH%, REGARDLESS

	!
	! Exit when done
	!
	GOTO 18290 IF BA_JOURNALL::BILLNUM <> BA_JOURNALH::BILLNUM

18220	!
	! Get employee record for this line
	!
	GET #PR_EMP_MASTER.CH%, KEY#0% EQ BA_JOURNALL::EMPNUM, REGARDLESS

	!
	! Create an address line format that reduces white space
	!
	I% = 0%

	IF EDIT$(PR_EMP_MASTER::ADD1, -1%) <> ""
	THEN
		I% = I% + 1%
		PR_EMP_MASTER.ADDLINE$(I%) = &
			EDIT$(PR_EMP_MASTER::ADD1, 8% + 16% + 32% + 128%)
	END IF

	IF EDIT$(PR_EMP_MASTER::ADD2, -1%) <> ""
	THEN
		I% = I% + 1%
		PR_EMP_MASTER.ADDLINE$(I%) = &
			EDIT$(PR_EMP_MASTER::ADD2, 8% + 16% + 32% + 128%)
	END IF

	I% = I% + 1%
	PR_EMP_MASTER.ADDLINE$(I%) = &
		EDIT$(EDIT$(PR_EMP_MASTER::CITY, 128%) + ", " + &
		PR_EMP_MASTER::STATE + " " + PR_EMP_MASTER::ZIP + " " + &
		PR_EMP_MASTER::COUNTRY, 8% + 16% + 32% + 128%)

	PR_EMP_MASTER.ADDLINE$(LOOP%) = "" FOR LOOP% = I% + 1% TO 3%


18230	!
	! Print out line
	!
	!
	! Page if necessary
	!
	IF (LINE_COUNT% > FORM_GROUP(FRM_TOP%)::NUMBER - 8%) OR &
		((THIS_COUNT% >= FORM_GROUP(FORM_LOOP%)::NUMBER - 1%) AND &
		(FORM_GROUP(FORM_LOOP%)::NUMBER <> 0%))
	THEN
		GOSUB NewPage
		THIS_COUNT% = 0%
	END IF

	TEMP_COUNT% = OUTP_FORMPRINT(UTL_REPORTX, &
		FORM_LOOP%, &
		FORM_TEXT$, &
		FORM_GROUPS%, &
		FORM_GROUP(), &
		0%)

	LINE_COUNT% = LINE_COUNT% + TEMP_COUNT%
	THIS_COUNT% = THIS_COUNT% + TEMP_COUNT%

	!
	! Get next record
	!
	GOTO 18210

18290	!
	! Exit from section
	!
	IF (FORM_GROUP(FORM_LOOP%)::NUMBER <> 0%)
	THEN
		FOR LOOP% = THIS_COUNT% + 1% TO FORM_GROUP(FORM_LOOP%)::NUMBER
			CALL OUTP_LINENOTITLE(LYT_LINE$, UTL_REPORTX, "", 0%)
			LINE_COUNT% = LINE_COUNT% + 1%
		NEXT LOOP%
	END IF

	RETURN

	%PAGE

 Alignment:
	!*******************************************************************
	! Print alignment form, if desireable
	!*******************************************************************

	SMG_STATUS% = SMG$ERASE_DISPLAY(SCOPE::SMG_OPTION)
	SMG_STATUS% = SMG$ERASE_DISPLAY(SCOPE::SMG_MESSAGE)

	PAGE_NUMBER% = 1%
	LINE_COUNT% = 0%

	UTL_REPORTX::LINENO = 0%
	UTL_REPORTX::PAGENO = 0%

	SCOPE::PRG_ITEM = "ALIGNMENT"
	JUNK$ = ENTR_3YESNO(SCOPE, SCOPE::SMG_OPTION, "", &
		"Do you want an alignment form?  Confirm then press <Do> ", &
		"N", 0%, "'E", "")

	SMG_STATUS% = SMG$ERASE_DISPLAY(SCOPE::SMG_OPTION)

	SELECT SCOPE::SCOPE_EXIT

	!
	! An exit key was typed
	!
	CASE 3%, SMG$K_TRM_CTRLZ, SMG$K_TRM_F10
		GOTO ExitProgram

	!
	! Return, etc. act as next screen
	!
	CASE 10%, 12%, 13%, SMG$K_TRM_F7, SMG$K_TRM_DO

	!
	! Case else
	!
	CASE ELSE
		CALL ENTR_3BADKEY(SCOPE,SCOPE::SCOPE_EXIT)
		GOTO Alignment

	END SELECT

	GOTO AlignmentReturn IF JUNK$ <> "Y"

	!
	! Load in the current form for the alignment
	!
	FOR FORM_LOOP% = 1% TO FORM_GROUP%

		IF (LEFT(FORM_GROUP(FORM_LOOP%)::FGROUP, 8%) = "FRM-BODY")
		THEN
			LINE_COUNT% = LINE_COUNT% + OUTP_FORMPRINT(UTL_REPORTX, &
				FORM_LOOP%, &
				FORM_TEXT$, &
				FORM_GROUPS%, &
				FORM_GROUP(), &
				1%) &
				FOR I% = 1% TO 3%

			IF (FORM_GROUP(FORM_LOOP%)::NUMBER <> 0%)
			THEN
				FOR LOOP% = THIS_COUNT% + 1% TO FORM_GROUP(FORM_LOOP%)::NUMBER
					CALL OUTP_LINENOTITLE(LYT_LINE$, UTL_REPORTX, "", 0%)
					LINE_COUNT% = LINE_COUNT% + 1%
				NEXT LOOP%
			END IF
		ELSE
			LINE_COUNT% = LINE_COUNT% + &
				OUTP_FORMPRINT(UTL_REPORTX, &
				FORM_LOOP%, &
				FORM_TEXT$, &
				FORM_GROUPS%, &
				FORM_GROUP(), &
				1%)
		END IF

	NEXT FORM_LOOP%

	!
	! Print lines to botton of the form
	!
	CALL OUTP_LINENOTITLE(LYT_LINE$, UTL_REPORTX, "", 0%) &
		FOR LOOP% = LINE_COUNT% + 1% TO FORM_GROUP(FRM_TOP%)::NUMBER

	!
	! Do they need another?
	!
	GOTO Alignment

 AlignmentReturn:
	RETURN

	%PAGE

 LoadForm:
	!*******************************************************************
	! Initilize bill form
	!*******************************************************************

	!
	! Get form from the AR form library
	!
	SMG_STATUS% = OUTP_FORMINIT( &
		BA_FORM.DEV$ + "BA_FORM", REPORT$, &
		FORM_TEXT$, FORM_GROUP%, FORM_GROUP())

	!
	! Was there an error?
	!
	IF SMG_STATUS% <> 0%
	THEN
		CALL HELP_34MESSAGE(SCOPE, "Statement form is missing", &
			"ERR", SCOPE::PRG_PROGRAM, REPORT$, NUM1$(SMG_STATUS%))
		GOTO ExitProgram
	END IF

	!
	! Search for the desired parts of the form
	!
	FRM_TOP% = 0%
	FRM_ASSIGN% = 0%

	FOR I% = 1% TO FORM_GROUP%

		SELECT FORM_GROUP(I%)::FGROUP

		CASE "FRM-TOP"
			FRM_TOP% = I%

		CASE "FRM-ASSIGN"
			FRM_ASSIGN% = 1%

		END SELECT

	NEXT I%

	RETURN

	%PAGE

19000	!*******************************************************************
	! Trap errors
	!*******************************************************************

	!
	! Handle record locked errors
	!
	IF ERR = 154%
	THEN
		SLEEP 5%
		RESUME
	END IF

	FILENAME$ = ""
	SELECT ERL

	!
	! Unable to open vendor master file
	!
	CASE 600%
		FILENAME$ = "AR_35CUSTOM"

	!
	! Unable to open vendor master file
	!
	CASE 610%
		FILENAME$ = "PR_EMP_MASTER"

	!
	! Unable to open the control file
	!
	CASE 320%
		FILENAME$ = "BA_CONTROL"

	!
	! Unable to open matter file
	!
	CASE 630%
		FILENAME$ = "BA_JOURNALH"

	CASE 640%
		FILENAME$ = "BA_JOURNALL"

	!
	! Unable to open staff file
	!
	CASE 650%
		FILENAME$ = "BA_CUSTYP"

	!
	! Vendor file is empty
	!
	CASE 2000%, 2005%
		RESUME ExitProgram

	CASE 2006%
		FILENAME$="BA_JOURNALH"

	CASE 2007%
		FILENAME$="BA_CONTROL"

	!
	! End of vendor file
	!
	CASE 2010%
		AR_35CUSTOM::CUSNUM = BA_JOURNALH::CUSNUM
		AR_35CUSTOM::CUSNAM = ""
		AR_35CUSTOM::ADD1 = ""
		AR_35CUSTOM::ADD2 = ""
		AR_35CUSTOM::CITY = ""
		AR_35CUSTOM::STATE = ""
		AR_35CUSTOM::ZIP = ""
		RESUME 2020

	!
	! Error looking through WIP file
	!
	CASE 2020%, 2050%
		RESUME 2100

	!
	! End of WIP file
	!
	CASE 18200%, 18210%
		RESUME 18290

	!
	! Unable to read employee master file
	!
	CASE 18220%
		PR_EMP_MASTER::EMPNUM = BA_JOURNALL::EMPNUM
		PR_EMP_MASTER::EMPNAME = ""
		PR_EMP_MASTER::ADD1 = ""
		PR_EMP_MASTER::ADD2 = ""
		PR_EMP_MASTER::CITY = ""
		PR_EMP_MASTER::STATE = ""
		PR_EMP_MASTER::ZIP = ""
		PR_EMP_MASTER::COUNTRY = ""
		PR_EMP_MASTER::PHONE = ""

		RESUME 18230

	END SELECT

	!
	! Untrapped error
	!
	RESUME 19990

19990	!
	! This moved from inside error to outside so that errors occuring
	! at lower levels could be trapped.  Basic will not allow any
	! error to occur inside of an error no matter if it is in a
	! different module.
	!
	CALL HELP_34MESSAGE(SCOPE, NUM1$(ERL) + " " + ERT$(ERR), &
		"E", ERN$, FILENAME$, NUM1$(ERR))

	GOTO ExitProgram

	!
	! Handle the cases where a file couldn't be opened
	!
	END

20000	SUB FORM_LOADVAR(VARNAME$, REALVALUE, TEXTVALUE$)

	!*******************************************************************
	! This function is used to return the value of a field back to the
	! form printer.
	!*******************************************************************

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	!
	! Define maps
	!
	%INCLUDE "SOURCE:[AR.OPEN]AR_35CUSTOM.HB"
	MAP (AR_35CUSTOM)	AR_35CUSTOM_CDD		AR_35CUSTOM

	%INCLUDE "SOURCE:[BA.OPEN]BA_JOURNALH.HB"
	MAP (BA_JOURNALH)	BA_JOURNALH_CDD		BA_JOURNALH

	%INCLUDE "SOURCE:[BA.OPEN]BA_JOURNALL.HB"
	MAP (BA_JOURNALL)	BA_JOURNALL_CDD		BA_JOURNALL

	%INCLUDE "SOURCE:[BA.OPEN]BA_CUSTYP.HB"
	MAP (BA_RESP_STAFF)	BA_CUSTYP_CDD		BA_RESP_STAFF
	MAP (BA_CUSTYP)		BA_CUSTYP_CDD		BA_CUSTYP

	%INCLUDE "SOURCE:[PR.OPEN]PR_EMP_MASTER.HB"
	MAP (PR_EMP_MASTER)	PR_EMP_MASTER_CDD	PR_EMP_MASTER

	COM (BA_FORM) &
		TOTAL_DAYS, &
		TOTAL_HOURS, &
		TOTAL_UNITS, &
		TOTAL_WAGES, &
		TOTAL_FEE, &
		INVOICE_DATE$ = 8%, &
		PAGE_NUMBER%, &
		XOUTASSIGN$ = 30%, &
		AR_CUSTOM.ADDLINE$(4%) = 50%, &
		PR_EMP_MASTER.ADDLINE$(3%) = 50%

	!
	! External functions
	!
	EXTERNAL LONG   FUNCTION LIBR_EXTRACTVAR

	%PAGE

	!
	! Set up default values
	!
	REALVALUE = 0.0
	TEXTVALUE$ = "????????"

	!
	! Pick by variable
	!
	SELECT VARNAME$

	!************************************************************
	! Fields for the AR_35CUSTOM file
	!************************************************************

	CASE "AR_35CUSTOM::CUSNUM", "AR_CUSTOM::CUSNUM"
		TEXTVALUE$ = AR_35CUSTOM::CUSNUM

	CASE "AR_35CUSTOM::CUSNAM", "AR_CUSTOM::CUSNAM"
		TEXTVALUE$ = AR_35CUSTOM::CUSNAM

	CASE "AR_35CUSTOM::TTYPE", "AR_CUSTOM::TTYPE"
		TEXTVALUE$ = AR_35CUSTOM::TTYPE

	CASE "AR_35CUSTOM::CATEGORY", "AR_CUSTOM::CATEGORY"
		TEXTVALUE$ = AR_35CUSTOM::CATEGORY

	CASE "AR_35CUSTOM::BDATE", "AR_CUSTOM::BDATE"
		TEXTVALUE$ = PRNT_DATE(AR_35CUSTOM::BDATE, 8%)

	CASE "AR_35CUSTOM::SSTATUS", "AR_CUSTOM::SSTATUS"
		TEXTVALUE$ = AR_35CUSTOM::SSTATUS

	CASE "AR_35CUSTOM::EDATE", "AR_CUSTOM::EDATE"
		TEXTVALUE$ = PRNT_DATE(AR_35CUSTOM::EDATE, 8%)

	CASE "AR_35CUSTOM::ADD1", "AR_CUSTOM::ADD1"
		TEXTVALUE$ = AR_35CUSTOM::ADD1

	CASE "AR_35CUSTOM::ADD2", "AR_CUSTOM::ADD2"
		TEXTVALUE$ = AR_35CUSTOM::ADD2

	CASE "AR_35CUSTOM::ADD3", "AR_CUSTOM::ADD3"
		TEXTVALUE$ = AR_35CUSTOM::ADD3

	CASE "AR_35CUSTOM::CITY", "AR_CUSTOM::CITY"
		TEXTVALUE$ = AR_35CUSTOM::CITY

	CASE "AR_35CUSTOM::STATE", "AR_CUSTOM::STATE"
		TEXTVALUE$ = AR_35CUSTOM::STATE

	CASE "AR_35CUSTOM::ZIP", "AR_CUSTOM::ZIP"
		TEXTVALUE$ = AR_35CUSTOM::ZIP

	CASE "AR_35CUSTOM::COUNTRY", "AR_CUSTOM::COUNTRY"
		TEXTVALUE$ = AR_35CUSTOM::COUNTRY

	CASE "AR_35CUSTOM::COUNTY", "AR_CUSTOM::COUNTY"
		TEXTVALUE$ = AR_35CUSTOM::COUNTY

	CASE "AR_CUSTOM.ADDLINE1"	! Substitute Customer Address
		TEXTVALUE$ = AR_CUSTOM.ADDLINE$(1%)

	CASE "AR_CUSTOM.ADDLINE2"	! Substitute Customer Address
		TEXTVALUE$ = AR_CUSTOM.ADDLINE$(2%)

	CASE "AR_CUSTOM.ADDLINE3"	! Substitute Customer Address
		TEXTVALUE$ = AR_CUSTOM.ADDLINE$(3%)

	CASE "AR_CUSTOM.ADDLINE4"	! Substitute Customer Address
		TEXTVALUE$ = AR_CUSTOM.ADDLINE$(4%)

	CASE "AR_35CUSTOM::PHONE", "AR_CUSTOM::PHONE"
		TEXTVALUE$ = AR_35CUSTOM::PHONE

	CASE "AR_35CUSTOM::METHOD", "AR_CUSTOM::METHOD"
		TEXTVALUE$ = AR_35CUSTOM::METHOD

	CASE "AR_35CUSTOM::STMTFLG", "AR_CUSTOM::STMTFLG"
		TEXTVALUE$ = AR_35CUSTOM::STMTFLG

	CASE "AR_35CUSTOM::ALPSRT", "AR_CUSTOM::ALPSRT"
		TEXTVALUE$ = AR_35CUSTOM::ALPSRT

	CASE "AR_35CUSTOM::SERCHRG", "AR_CUSTOM::SERCHRG"
		TEXTVALUE$ = AR_35CUSTOM::SERCHRG

	CASE "AR_35CUSTOM::TAXCODE", "AR_CUSTOM::TAXCODE"
		TEXTVALUE$ = AR_35CUSTOM::TAXCODE

	CASE "AR_35CUSTOM::TAXEXEMP", "AR_CUSTOM::TAXEXEMP"
		TEXTVALUE$ = AR_35CUSTOM::TAXEXEMP

	CASE "AR_35CUSTOM::LOCATION", "AR_CUSTOM::LOCATION"
		TEXTVALUE$ = AR_35CUSTOM::LOCATION

	CASE "AR_35CUSTOM::TERMS", "AR_CUSTOM::TERMS"
		TEXTVALUE$ = AR_35CUSTOM::TERMS

	CASE "AR_35CUSTOM::CARRIER", "AR_CUSTOM::CARRIER"
		TEXTVALUE$ = AR_35CUSTOM::CARRIER

	CASE "AR_35CUSTOM::SALESMAN", "AR_CUSTOM::SALESMAN"
		TEXTVALUE$ = AR_35CUSTOM::SALESMAN

	CASE "AR_35CUSTOM::CREDITLIM", "AR_CUSTOM::CREDITLIM"
		REALVALUE  = AR_35CUSTOM::CREDITLIM

	CASE "AR_35CUSTOM::DISCOUNT", "AR_CUSTOM::DISCOUNT"
		REALVALUE  = AR_35CUSTOM::DISCOUNT

	CASE "AR_35CUSTOM::BACKORDER", "AR_CUSTOM::BACKORDER"
		TEXTVALUE$ = AR_35CUSTOM::BACKORDER

	CASE "AR_35CUSTOM::TAXFLAG", "AR_CUSTOM::TAXFLAG"
		TEXTVALUE$ = AR_35CUSTOM::TAXFLAG

	!************************************************************
	! BA_JOURNALH fields
	!************************************************************

	CASE "BA_JOURNALH::BILLNUM"
		TEXTVALUE$ = BA_JOURNALH::BILLNUM

	CASE "BA_JOURNALH::CUSNUM"
		TEXTVALUE$ = BA_JOURNALH::CUSNUM

	CASE "BA_JOURNALH::INVNUM", "INVOICE_NUMBER"
		TEXTVALUE$ = BA_JOURNALH::INVNUM

	CASE "BA_JOURNALH::TRADAT"
		TEXTVALUE$ = BA_JOURNALH::TRADAT

	CASE "BA_JOURNALH::NOTES"
		BA_JOURNALH.DEV1$ = "SYS$LOGIN:" IF BA_JOURNALH.DEV1$ = ""
		ST% = LIBR_EXTRACTVAR( &
			BA_JOURNALH.DEV1$ + "BA_JOURNALH", &
			LAST_NOTE$, &
			BA_JOURNALH::BILLNUM)
		TEXTVALUE$ = LAST_NOTE$

	!************************************************************
	! BA_JOURNALL fields
	!************************************************************

	CASE "BA_JOURNALL::BILLNUM"
		TEXTVALUE$ = BA_JOURNALL::BILLNUM

	CASE "BA_JOURNALL::EMPNUM"
		TEXTVALUE$ = BA_JOURNALL::EMPNUM

	CASE "BA_JOURNALL::DAYS"
		REALVALUE = BA_JOURNALL::DAYS

	CASE "BA_JOURNALL::HOURS"
		REALVALUE = BA_JOURNALL::HOURS

	CASE "BA_JOURNALL::UNITS"
		REALVALUE = BA_JOURNALL::UNITS

	CASE "BA_JOURNALL::WAGES"
		REALVALUE = BA_JOURNALL::WAGES

	CASE "BA_JOURNALL::RATE"
		REALVALUE = BA_JOURNALL::RATE

	CASE "BA_JOURNALL::FEE"
		REALVALUE = BA_JOURNALL::FEE

	CASE "BA_JOURNALL::ACCT"
		TEXTVALUE$ = BA_JOURNALL::ACCT

	CASE "BA_JOURNALL::METHOD"
		TEXTVALUE$ = BA_JOURNALL::METHOD

	!************************************************************
	! Customer type
	!************************************************************

	CASE "BA_CUSTYP::CUSTYP"
		TEXTVALUE$ = BA_CUSTYP::CUSTYP

	CASE "BA_CUSTYP::DESCR"
		TEXTVALUE$ = BA_CUSTYP::DESCR

	!************************************************************
	! Payroll master file
	!************************************************************

	CASE "PR_EMP_MASTER::EMPNUM"
		TEXTVALUE$ = PR_EMP_MASTER::EMPNUM

	CASE "PR_EMP_MASTER::EMPNAME"
		TEXTVALUE$ = PR_EMP_MASTER::EMPNAME

	CASE "PR_EMP_MASTER::ADD1"
		TEXTVALUE$ = PR_EMP_MASTER::ADD1

	CASE "PR_EMP_MASTER::ADD2"
		TEXTVALUE$ = PR_EMP_MASTER::ADD2

	CASE "PR_EMP_MASTER::CITY"
		TEXTVALUE$ = PR_EMP_MASTER::CITY

	CASE "PR_EMP_MASTER::STATE"
		TEXTVALUE$ = PR_EMP_MASTER::STATE

	CASE "PR_EMP_MASTER::ZIP"
		TEXTVALUE$ = PR_EMP_MASTER::ZIP

	CASE "PR_EMP_MASTER::COUNTRY"
		TEXTVALUE$ = PR_EMP_MASTER::COUNTRY

	CASE "PR_EMP_MASTER.ADDLINE1"	! Substitute Employee Address
		TEXTVALUE$ = PR_EMP_MASTER.ADDLINE$(1%)

	CASE "PR_EMP_MASTER.ADDLINE2"	! Substitute Employee Address
		TEXTVALUE$ = PR_EMP_MASTER.ADDLINE$(2%)

	CASE "PR_EMP_MASTER.ADDLINE3"	! Substitute Employee Address
		TEXTVALUE$ = PR_EMP_MASTER.ADDLINE$(3%)

	CASE "PR_EMP_MASTER::PHONE"
		TEXTVALUE$ = PR_EMP_MASTER::PHONE

	CASE "PR_EMP_MASTER::SSN"
		TEXTVALUE$ = PR_EMP_MASTER::SSN

	!************************************************************
	! Non fielded values
	!************************************************************

	CASE "TOTAL_DAYS"
		REALVALUE = TOTAL_DAYS

	CASE "TOTAL_HOURS"
		REALVALUE = TOTAL_HOURS

	CASE "TOTAL_UNITS"
		REALVALUE = TOTAL_UNITS

	CASE "TOTAL_WAGES"
		REALVALUE = TOTAL_WAGES

	CASE "TOTAL_FEE"
		REALVALUE = TOTAL_FEE

	CASE "INVOICE_DATE"
		TEXTVALUE$ = PRNT_DATE(INVOICE_DATE$, 6%)

	CASE "PAGE_NUMBER"
		REALVALUE = PAGE_NUMBER%
		TEXTVALUE$ = NUM1$(PAGE_NUMBER%)

	CASE "XOUT_ASSIGN"
		TEXTVALUE$ = XOUTASSIGN$

	END SELECT

	END SUB
