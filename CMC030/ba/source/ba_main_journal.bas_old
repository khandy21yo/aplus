1	%TITLE "Billing Table Maintenance"
	%SBTTL "BA_MAIN_JOURNAL"
	%IDENT "V3.6a Calico"

	FUNCTION LONG BA_MAIN_JOURNAL(CDD_WINDOW_CDD SMG_WINDOW, &
		LONG MOPTION, LONG MLOOP, LONG MFLAG, STRING MVALUE)

	!
	! COPYRIGHT (C) 1987,1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! Abstract:HELP
	!	.p
	!	The ^*Maintain Agency Journal\* option provides the means to enter
	!	billing data to be charged to a specific agency.  The screen also
	!	contains a function in the Command Menu, Line__Items, where client
	!	billing information may be entered.
	!
	! Index:
	!	.x Add>Journal
	!	.x Erase>Journal
	!	.x Change>Journal
	!	.x Journal>Add
	!	.x Journal>Erase
	!	.x Journal>Change
	!	.x Maintain>Agency Journal
	!	.x Agency Journal>Maintenance
	!
	! Option:
	!
	!
	! Compile:
	!
	!	$ BAS BA_SOURCE:BA_MAIN_JOURNAL/LINE
	!	$ LIB FUNC_LIB:CMCFUN/REP BA_MAIN_JOURNAL
	!	$ DELETE BA_MAIN_JOURNAL.OBJ;*
	!
	!
	! Author:
	!
	!	05/02/88 - Kevin Handy
	!
	! Modification history:
	!
	!	04/27/88 - Kevin Handy
	!		Modified to allow R/O open of file if R/W open fails.
	!
	!	03/16/92 - Dan Perkins
	!		Added ability to work with different batches.
	!
	!	05/06/92 - Dan Perkins
	!		Use FUNC_TESTENTRY to test input.
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	10/15/96 - Kevin Handy
	!		Reformat source code.
	!
	!	05/22/97 - Kevin Handy
	!		Use integer for #key
	!
	!	08/25/97 - Kevin Handy
	!		Change 'val' to 'val%'
	!
	!	08/17/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!
	!	03/09/99 - Kevin Handy
	!		Fix FIND bug
	!--

	%PAGE

	!
	! Set up compiling options
	!
	OPTION SIZE = (REAL GFLOAT, INTEGER LONG)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	%INCLUDE "FUNC_INCLUDE:MAIN_WINDOW.COM"
	%INCLUDE "FUNC_INCLUDE:BA_WINDOW.INC"
	%INCLUDE "FUNC_INCLUDE:GL_WINDOW.INC"

	!
	! CDD inclusions and MAPs
	!
	%INCLUDE "SOURCE:[CDD.OPEN]CDD_WINDOW.HB"

	%INCLUDE "SOURCE:[BA.OPEN]BA_JOURNALH.HB"
	MAP (BA_JOURNALH)	BA_JOURNALH_CDD		BA_JOURNALH
	MAP (BA_JOURNALH_OLD)	BA_JOURNALH_CDD		BA_JOURNALH_OLD, BA_JOURNALH2

	%INCLUDE "SOURCE:[BA.OPEN]BA_BILTBL.HB"
	MAP (BA_BILTBL)		BA_BILTBL_CDD		BA_BILTBL

	%INCLUDE "SOURCE:[AR.OPEN]AR_35CUSTOM.HB"
	MAP (AR_35CUSTOM)	AR_35CUSTOM_CDD		AR_35CUSTOM

	%INCLUDE "SOURCE:[BA.OPEN]BA_CONTROL.HB"
	MAP (BA_CONTROL)	BA_CONTROL_CDD		BA_CONTROL

	%INCLUDE "SOURCE:[GL.OPEN]GL_CHART.HB"
	MAP (GL_CHART)		GL_CHART_CDD		GL_CHART

	%INCLUDE "SOURCE:[BA.OPEN]BA_CUSTOMEX.HB"
	MAP (BA_CUSTOMEX)	BA_CUSTOMEX_CDD		BA_CUSTOMEX

	%INCLUDE "SOURCE:[BA.OPEN]BA_CUSTYP.HB"
	MAP (BA_CUSTYP)		BA_CUSTYP_CDD		BA_CUSTYP

	!
	! Common areas
	!
	! These areas store information that is re-used between
	! calls to these functions.
	!
	COM (CH_BA_JOURNALH) &
		BATCH_NO$ = 2%, &
		BA_JOURNALH.CH%, &
		BA_JOURNALH.READONLY%

	COM (CH_BA_CONTROL) &
		BA_CONTROL.CH%

	COM (CH_BA_CUSTOMEX) &
		BA_CUSTOMEX.CH%

	COM (CH_BA_CUSTYP) &
		BA_CUSTYP.CH%

	!
	! External functions
	!
	EXTERNAL LONG   FUNCTION LIBR_EXTRACTVAR
	EXTERNAL LONG   FUNCTION LIBR_INSERTTEXT
	EXTERNAL LONG   FUNCTION LIBR_DELETE
	EXTERNAL LONG   FUNCTION FUNC_TESTENTRY
	EXTERNAL LONG   FUNCTION MAIN_WINDOW
	EXTERNAL LONG   FUNCTION MAIN_JOURNAL

	DECLARE RFA TEMP_RFA

	ON ERROR GOTO 29000

	%PAGE

	SELECT MOPTION

	!******************************************************************
	! Initialization
	!
	! This option is used to initialize the window structure,
	! set up the default values for add, and open all files
	! necessary that have not already been opened.
	!******************************************************************
	CASE OPT_INIT
		!
		! Define window
		!
		SMG_WINDOW::DESCR = "Agency Journal " + BATCH_NO$
		SMG_WINDOW::NHELP = "BA_MAIN_JOURNAL"
		SMG_WINDOW::HSIZE = 130%
		SMG_WINDOW::VSIZE = 18%
		SMG_WINDOW::HVIEW = 130%
		SMG_WINDOW::VVIEW = 18%
		SMG_WINDOW::HPOS  = 2%
		SMG_WINDOW::VPOS  = 2%
		SMG_WINDOW::NITEMS= 7%
		SMG_WINDOW::FLAGS = 0%

		SMG_WINDOW::NKEYS = 1%
		SMG_WINDOW::KNAME(0%) = "Billing-number"
			SMG_WINDOW::KFIELD(0%, 0%) = 1%
			SMG_WINDOW::KFIELD(0%, 1%) = -1%

		!
		! Load in defaults for chart
		!
		CALL READ_DEFAULTS(SMG_WINDOW) &
			IF INSTR(1%, " QV", MVALUE) <= 1%

700		!
		! Get info required for main file
		!
		IF BA_JOURNALH.CH% > 0%
		THEN
			!
			! Already open, set flag to read-only if
			! was that way from last time.
			!
			SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%) &
				IF BA_JOURNALH.READONLY%
			GOTO 790
		END IF

		CALL READ_DEVICE("BA_JOURNALH",BA_JOURNALH.DEV1$,STAT%)
		BA_JOURNALH.DEV1$ = "SYS$LOGIN:" &
			IF BA_JOURNALH.DEV1$ = ""

		!
		! Open main file (existing) for modification
		!
750		%INCLUDE "SOURCE:[BA.OPEN]BA_JOURNALH.CRE"
		BA_JOURNALH.READONLY% = 0%
		GOTO 790

760		!
		! If unable to open for modify, try to open
		! with read access only.
		!
		%INCLUDE "SOURCE:[BA.OPEN]BA_JOURNALH.OPN"
		SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%)
		BA_JOURNALH.READONLY% = -1%

		GOTO 790

770		!
		! File not able to open, so reset channel
		!
		CALL ASSG_FREECHANNEL(BA_JOURNALH.CH%)

		GOTO ExitFunction

790		SMG_WINDOW::CHAN  = BA_JOURNALH.CH%

		RESET #BA_JOURNALH.CH%
		GET #BA_JOURNALH.CH%, REGARDLESS

20100	!******************************************************************
	! Display the background
	!
	! This option is used to display the background information
	! on the screen.  It must first clear any junk on the screen,
	! and then write the background onto it.
	!******************************************************************

	CASE OPT_BACKGROUND

		SMG_STATUS% = SMG$BEGIN_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

		SMG_STATUS% = SMG$ERASE_DISPLAY(SMG_WINDOW::WNUMBER)

		DATA	2,  1, "(01) Agency", &
			6,  1, "(02) Invoice", &
			7,  1, "(03) AR Account", &
			8,  1, "(04) Tran Date", &
			9,  1, "(05) From Payroll Date", &
			10, 1, "(06) To Payroll Date", &
			11, 1, "(07) Non Prod Operation", &
			1,  1, "---- Billing #", &
			0,  0, ""

		RESTORE

		READ XPOS%, YPOS%, XSTR$
		I%=0%
		WHILE (XPOS% <> 0)
			I% = I% + 1%
			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				XSTR$, XPOS%, YPOS%) &
				IF (SMG_WINDOW::HFLAG(I%) AND 2%)=0%
		READ XPOS%, YPOS%, XSTR$
		NEXT

		SMG_STATUS% = SMG$END_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

	!
	! Select function
	!
	CASE OPT_OPTLIST

		MVALUE = MVALUE + " Line_items nOtes"

	!
	! Direction
	!
	CASE OPT_MOREMENU
		SELECT SCOPE::PRG_ITEM

		!
		! Line option
		!
		CASE "Line_items"
			!
			! Make sure there is a header
			!
			TEMP_RFA = GETRFA(BA_JOURNALH.CH%)

			BA_MAIN_JOURNAL = MAIN_JOURNAL(BA_MAIN_JOURNALL.ID, "")

		CASE "nOtes"
			!
			! Display notes
			!
			BA_JOURNALH.DEV1$ = "SYS$LOGIN:" &
				IF BA_JOURNALH.DEV1$ = ""

			ST% = LIBR_EXTRACTVAR( &
				TRM$(BA_JOURNALH.DEV1$) + "BA_JOURNALH", &
				LAST_NOTE$, &
				EDIT$(BA_JOURNALH::BILLNUM, 2%))

			LAST_NOTE$ = ENTR_NOTE(SMG_WINDOW::WNUMBER, &
				"9;1", TEMP$, &
				LAST_NOTE$, 64%, "10;78", MVALUE)

			ST% = LIBR_INSERTTEXT( &
				TRM$(BA_JOURNALH.DEV1$) + "BA_JOURNALH", &
				LAST_NOTE$, &
				EDIT$(BA_JOURNALH::BILLNUM, 2%))
		END SELECT

20200	!******************************************************************
	! Enter/Display/Default
	!
	! This option is used to enter the data from the user, display
	! data, set defaults, and return the data back according to
	! MFLAG.
	!******************************************************************
	CASE OPT_ENTRY
		TEMP$, TEMP1$ = TRM$(SCOPE::PRG_ITEM)
		TEMP$ = "View starting at" IF TEMP$ = "View"

		IF MLOOP% >= 0%
		THEN
			SCOPE::PRG_ITEM = "FLD" + FORMAT$(MLOOP, "<0>##")
		ELSE
			SCOPE::PRG_ITEM = "FLD-" + FORMAT$(-MLOOP, "<0>#")
		END IF

		SCOPE::SCOPE_EXIT = 0%

 Eloop:		SELECT MLOOP

		CASE -1%
			BA_JOURNALH::BILLNUM = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"1;25", TEMP$, &
				BA_JOURNALH::BILLNUM, MFLAG, "~L0'E", MVALUE)

		CASE 1%
	!++
	! Abstract:FLD001
	!	^*(01) Agency
	!	.p
	!	The ^*Agency\* field provides the means to enter the number of the agency
	!	in question. When a valid number is entered, the name and address is
	!	automatically inserted.
	!	.p
	!	A valid number must be entered. By pressing the ^*<list choices>\* key, a
	!	list of valid numbers is displayed.
	!
	! Index:
	!	.x Agency
	!
	!--
			BA_JOURNALH::CUSNUM = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"2;25", TEMP$, &
				BA_JOURNALH::CUSNUM, MFLAG, "'E", MVALUE)

			IF (SCOPE::SCOPE_EXIT = SMG$K_TRM_F14)
			THEN
				IF (MAIN_WINDOW(BA_MAIN_CUSTOM.ID, "VX") = 1%)
				THEN
					BA_JOURNALH::CUSNUM = &
						AR_35CUSTOM::CUSNUM
				END IF
				GOTO ELoop
			END IF

		CASE 2%
	!++
	! Abstract:FLD002
	!	^*(02) Invoice\*
	!	.p
	!	The ^*Invoice\* field provides the means to enter the invoice number for the
	!	current transaction and journal entry.
	!
	! Index:
	!	.x Invoice
	!
	!--
			BA_JOURNALH::INVNUM = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"6;25", TEMP$, &
				BA_JOURNALH::INVNUM, MFLAG, "'E", MVALUE)

		CASE 3%
	!++
	! Abstract:FLD003
	!	^*(03) Accounts Receivable Account\*
	!	.p
	!	The ^*Accounts Receivable Account\* provides the means to enter the Accounts
	!	Receivable account number used for the specified transaction.
	!
	! Index:
	!	.x Accounts Receivable Account
	!
	!--
			IF ((MFLAG AND 1%) = 0%) AND &
				(BA_JOURNALH::ACCT = "") AND &
				(TEMP$ = "Add")
			THEN
				GOSUB GetDefaultAccount
				BA_JOURNALH::ACCT = BA_CUSTYP::AR_ACCT
			END IF

			BA_JOURNALH::ACCT = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"7;25", TEMP$, &
				BA_JOURNALH::ACCT, MFLAG, "'E", MVALUE)

			IF (SCOPE::SCOPE_EXIT = SMG$K_TRM_F14)
			THEN
				IF (MAIN_WINDOW(GL_MAIN_CHART.ID, "VX") = 1%)
				THEN
					BA_JOURNALH::ACCT = &
						GL_CHART::ACCT
				END IF
				GOTO ELoop
			END IF

		CASE 4%
	!++
	! Abstract:FLD004
	!	^*(04) Transaction Date\*
	!	.p
	!	The ^*Transaction Date\* field provides the means to enter the date in which
	!	the transaction took place.
	!
	! Index:
	!	.x Transaction Date
	!	.x Date>Transaction
	!
	!--
			BA_JOURNALH::TRADAT = ENTR_3DATE(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"8;25", TEMP$, &
				BA_JOURNALH::TRADAT, MFLAG, "'E", MVALUE)

		CASE 5%
	!++
	! Abstract:FLD005
	!	^*(05) From Payroll Date\*
	!	.p
	!	The ^*From Payroll Date\* entered in this field causes the
	!	report to begin with the selected date.
	!	.p
	!	The format for entry is MMDDYYYY or MMDDYY.
	!
	! Index:
	!	.x From Payroll Date
	!	.x Date>From Payroll
	!
	!--
			BA_JOURNALH::FROMDATE = ENTR_3DATE(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"9;25", TEMP$, &
				BA_JOURNALH::FROMDATE, MFLAG, "'E", MVALUE)


		CASE 6%
	!++
	! Abstract:FLD006
	!	^*(06) To Payroll Date\*
	!	.p
	!	The ^*To Payroll Date\* entered in this field causes the report to end with
	!	the selected date
	!	.p
	!	The format for entry is MMDDYYYY or MMDDYY.
	!
	! Index:
	!	.x To Payroll Date
	!	.x Date>To Payroll
	!
	!--
			BA_JOURNALH::TODATE = ENTR_3DATE(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"10;25", TEMP$, &
				BA_JOURNALH::TODATE, MFLAG, "'E", MVALUE)

		CASE 7%
	!++
	! Abstract:FLD007
	!	^*(07) Non Productive Operations\*
	!	.p
	!	The ^*Non Productive Operations\* field provides the means to assign a code
	!	for the Non Productive Operations. This code may also be used in other
	!	options.
	!
	! Index:
	!	.x Non Productive Operations
	!	.x Operations>Non Productive
	!
	!--
			BA_JOURNALH::OPERATIONS = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"11;25", TEMP$, &
				BA_JOURNALH::OPERATIONS, MFLAG, "'E", MVALUE)

		END SELECT

		SCOPE::PRG_ITEM = TEMP1$

	!
	! Handle finishing various options specially
	!
	CASE OPT_AFTEROPT

		SELECT SCOPE::PRG_ITEM

		!
		! Add records
		!
		CASE "Add"
			!
			! Add line items also
			!
			BA_MAIN_JOURNAL = MAIN_JOURNAL(BA_MAIN_JOURNALL.ID, "A")

		!
		! Need to remove under old key, and insert under
		! (possibly) new key
		!
		CASE "Change", "Blank", "Initialize"

			!
			! Change line items to match new header
			! if the key was changed.
			!
			! The original record must be the one in the
			! MAP for this to be able to work.  The new
			! key is passed through the QUERY$ variable.
			!
			IF BA_JOURNALH_OLD::BILLNUM <> BA_JOURNALH::BILLNUM
			THEN
				TEMP$ = BA_JOURNALH::BILLNUM + ""
				BA_JOURNALH = BA_JOURNALH_OLD
				BA_MAIN_JOURNAL = &
					MAIN_JOURNAL(BA_MAIN_JOURNALL.ID, &
					"C" + TEMP$)

				BA_JOURNALH.DEV1$ = "SYS$LOGIN:" &
					IF BA_JOURNALH.DEV1$ = ""

				ST% = LIBR_EXTRACTVAR( &
					TRM$(BA_JOURNALH.DEV1$) + &
					"BA_JOURNALH", &
					LAST_NOTE$, &
					EDIT$(BA_JOURNALH_OLD::BILLNUM, 2%))

				ST% = LIBR_DELETE( &
					TRM$(BA_JOURNALH.DEV1$) + "BA_JOURNALH", &
					EDIT$(BA_JOURNALH_OLD::BILLNUM, 2%))

				ST% = LIBR_INSERTTEXT( &
					TRM$(BA_JOURNALH.DEV1$) + "BA_JOURNALH", &
					LAST_NOTE$, &
					EDIT$(BA_JOURNALH::BILLNUM, 2%))
			END IF

		!
		! Need to remove text
		!
		CASE "Erase"

			BA_JOURNALH.DEV1$ = "SYS$LOGIN:" &
				IF BA_JOURNALH.DEV1$ = ""

			ST% = LIBR_DELETE( &
				TRM$(BA_JOURNALH.DEV1$) + "BA_JOURNALH", &
				EDIT$(BA_JOURNALH::BILLNUM, 2%))

			BA_MAIN_JOURNAL = MAIN_JOURNAL(BA_MAIN_JOURNALL.ID, "E")

		END SELECT

	!
	! Handle before doing option
	!
	CASE OPT_TESTOPT

		SELECT SCOPE::PRG_ITEM
		CASE "Add"

			GOSUB GetControl

		END SELECT


	!
	! Test values
	!
20300	CASE OPT_TESTENTRY
		BA_MAIN_JOURNAL = 0%

		SELECT MLOOP

		CASE 1%
			AR_35CUSTOM::ADD1   = "????????????????????"
			AR_35CUSTOM::ADD2   = "????????????????????"
			AR_35CUSTOM::CITY   = "????????????????????"
			AR_35CUSTOM::STATE  = "????????????????????"
			AR_35CUSTOM::ZIP    = "????????????????????"

			!
			! Is the input defined?
			!
			BA_MAIN_JOURNAL = FUNC_TESTENTRY( SMG_WINDOW, &
				BA_JOURNALH::CUSNUM, &
				AR_35CUSTOM::CUSNAM, &
				"BA", MLOOP, "PRG", &
				"Agency Number", BA_MAIN_CUSTOM.ID)

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				AR_35CUSTOM::CUSNAM, &
				2%, 36%, , SMG$M_BOLD)

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				AR_35CUSTOM::ADD1, &
				3%, 36%, , SMG$M_BOLD)

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				AR_35CUSTOM::ADD2, &
				4%, 36%, , SMG$M_BOLD)

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				TRM$(AR_35CUSTOM::CITY) + ", " + &
					TRM$(AR_35CUSTOM::STATE) + "  " + &
					AR_35CUSTOM::ZIP + SPACE$(40%), &
				5%, 36%, , SMG$M_BOLD)

			GOSUB GetDefaultAccount

		CASE 3%
			!
			! Is the input defined?
			!
			BA_MAIN_JOURNAL = FUNC_TESTENTRY( SMG_WINDOW, &
				BA_JOURNALH::ACCT, &
				GL_CHART::DESCR, &
				"BA", MLOOP, "PRG", &
				"Account", GL_MAIN_CHART.ID)

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				GL_CHART::DESCR, &
				7%, 44%, , SMG$M_BOLD)

		END SELECT

20400	CASE OPT_DISPLAY

		IF (SMG_WINDOW::HFLAG(1%) AND 2%)=0%
		THEN
			!
			! Is the input defined?
			!
			IF MAIN_WINDOW(BA_MAIN_CUSTOM.ID, &
				"Q0" + BA_JOURNALH::CUSNUM) <> 1%
			THEN
				AR_35CUSTOM::CUSNAM = "????????????????????"
				AR_35CUSTOM::ADD1 = "????????????????????"
				AR_35CUSTOM::ADD2 = "????????????????????"
				AR_35CUSTOM::CITY = "????????????????????"
				AR_35CUSTOM::STATE = "????????????????????"
				AR_35CUSTOM::ZIP = "????????????????????"
			END IF

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				AR_35CUSTOM::CUSNAM, &
				2%, 36%, , SMG$M_BOLD)
			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				AR_35CUSTOM::ADD1, &
				3%, 36%, , SMG$M_BOLD)
			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				AR_35CUSTOM::ADD2, &
				4%, 36%, , SMG$M_BOLD)
			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				TRM$(AR_35CUSTOM::CITY) + ", " + &
				TRM$(AR_35CUSTOM::STATE) + "  " + &
				AR_35CUSTOM::ZIP + SPACE$(40%), &
				5%, 36%, , SMG$M_BOLD)
		END IF

		IF (SMG_WINDOW::HFLAG(3%) AND 2%)=0%
		THEN
			IF MAIN_WINDOW(GL_MAIN_CHART.ID, &
				"Q0" + BA_JOURNALH::ACCT) <> 1%
			THEN
				GL_CHART::DESCR = "????????????????????"
			END IF

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				GL_CHART::DESCR, &
				7%, 44%, , SMG$M_BOLD)

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				BA_JOURNALH::BILLNUM, 1%, 36%, ,SMG$M_BOLD)
		END IF


		GOSUB GetDefaultAccount

	!
	! Set BA_JOURNALH_OLD value
	!
20500	CASE OPT_SETOLD
		BA_JOURNALH_OLD = BA_JOURNALH

	!
	! Restore BA_JOURNALH_OLD value
	!
	CASE OPT_RESETOLD
		BA_JOURNALH = BA_JOURNALH_OLD

	!
	! Set default value
	!
	CASE OPT_SETDEFAULT
		BA_JOURNALH2 = BA_JOURNALH

	!
	! Restore default value
	!
	CASE OPT_RESETDEFAULT
		BA_JOURNALH = BA_JOURNALH2

	!
	! View header
	!
	CASE OPT_VIEW
		SELECT MLOOP

		!
		! Title (One line only)
		!
		CASE 1%
			MVALUE = "  Bill #     Agency     Invoice    Account            TranDate"

		!
		! Positions of lines
		!
		CASE 2%
			MVALUE = "013,024,033,052"

		!
		! Convert current record into text
		!
		CASE 3%
			MVALUE = &
				BA_JOURNALH::BILLNUM + " " + &
				BA_JOURNALH::CUSNUM + " " + &
				BA_JOURNALH::INVNUM + " " + &
				BA_JOURNALH::ACCT + " " + &
				PRNT_DATE(BA_JOURNALH::TRADAT, 8%)

		END SELECT
	!
	! Find
	!
	CASE OPT_FIND
		SELECT MLOOP

		CASE 0%
			FIND #BA_JOURNALH.CH%, &
				KEY #0% GE BA_JOURNALH::BILLNUM + "", &
				REGARDLESS

		END SELECT

	END SELECT

 ExitFunction:
	EXIT FUNCTION

 GetControl:
28000	!*******************************************************************
	! This subroutine will assign an MATTER number from the control
	! file BA_CONTROL.  It will make sure that the number it is trying
	! to assign does not already exist.
	!*******************************************************************

28020	!
	! Read in the control record
	!
	GET #BA_CONTROL.CH%, RECORD 1%

28060	!
	! We have a key to try now
	!
	BA_CONTROL::BILLNUM = FORMAT$(VAL%(BA_CONTROL::BILLNUM) + 1%, &
		"<0>#########")

28065	FIND #BA_JOURNALH.CH%, KEY #0% EQ BA_CONTROL::BILLNUM + ""

	GOTO 28060

28070	UPDATE #BA_CONTROL.CH%

	BA_JOURNALH::BILLNUM = BA_CONTROL::BILLNUM

	SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
		BA_JOURNALH::BILLNUM, 1%, 36%, ,SMG$M_BOLD)

	RETURN

28080	CALL HELP_3MESSAGE(SCOPE, "Missing BA CONTROL file", &
		"ERR", "BA_CONTROL", "ERROR_CONTROL")
	RETURN

	%PAGE

 GetDefaultAccount:
28100	!*******************************************************************
	! This subroutine searches the customer type file for the
	! default account number.
	!*******************************************************************

	!
	! Get customer type
	!
	GET #BA_CUSTOMEX.CH%, KEY #0% EQ BA_JOURNALH::CUSNUM + "", REGARDLESS

28110	!
	! Get gl info
	!
	GET #BA_CUSTYP.CH%, KEY#0% EQ BA_CUSTOMEX::CUSTYP + "", REGARDLESS

28190	RETURN

29000	!
	! Trap errors
	!
	SELECT ERL
	!
	! Unable to open Read/Write
	!
	CASE 750%
		RESUME 760 IF ERR = 10%
		BA_MAIN_JOURNAL = ERR
		RESUME 770

	!
	! Unable to open Read/Only
	!
	CASE 760%
		BA_MAIN_JOURNAL = ERR
		RESUME 770

	!
	! Unable to reset
	!
	CASE 790%
		RESUME 32767

	!
	! Record does not already exist
	!
	CASE 20300%
		RESUME 32767 IF ERR = 155%

	!
	! No control file record
	!
	CASE 28020%
		RESUME 28080 IF ERR = 155%

	!
	! No record exists with that key yet, so use it.
	!
	CASE 28065%
		RESUME 28070

	!
	! Unable to load in customer type record
	!
	CASE 28100%
		BA_CUSTOMEX::CUSTYP = ""

		BA_CUSTYP::AR_ACCT = ""
		BA_CUSTYP::REV_MASK = ""
		BA_CUSTYP::DESCR = ""

		RESUME 28190

	!
	! Unable to load in customer type record
	!
	CASE 28110%
		BA_CUSTYP::AR_ACCT = ""
		BA_CUSTYP::REV_MASK = ""
		BA_CUSTYP::DESCR = ""

		RESUME 28190

	END SELECT

	ON ERROR GO BACK

32767	END FUNCTION
