1	%TITLE "BC Control File Maintenance"
	%SBTTL "BC_MAIN_CONTROL"
	%IDENT "V3.6a Calico"

	FUNCTION LONG BC_MAIN_CONTROL(CDD_WINDOW_CDD SMG_WINDOW, LONG MOPTION, &
		LONG MLOOP, LONG MFLAG, STRING MVALUE)

	!
	! COPYRIGHT (C) 1987,1988 BY
	!
	! Computer Management Center
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! Abstract:HELP
	!	.P
	!	The ^*Billing Customer Control\* file provides the means to define
	!	the last billing period, the last invoice number used, and a control
	!	number for the billing journal.
	!
	! Index:
	!	.x Change>Control File
	!	.x Control File>Change
	!	.x Control File>Billing Customer
	!	.x Billing Customer>Control File
	!
	! Option:
	!
	!
	! Author:
	!
	!	11/29/88 - J. Shad Rydalch
	!
	! Compile:
	!
	!	$ BAS BC_SOURCE:BC_MAIN_CONTROL/LINE
	!	$ LIB FUNC_LIB:CMCFUN/REP BC_MAIN_CONTROL
	!	$ DELETE BC_MAIN_CONTROL.OBJ;*
	!
	! Modification history:
	!
	!	03/23/93 - Kevin Handy
	!		Clean up (Check)
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	06/24/97 - Kevin Handy
	!		Lose unecessary externals
	!
	!	08/19/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!--
	%PAGE

	!
	! Set up compiling options
	!
	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	%INCLUDE "FUNC_INCLUDE:MAIN_WINDOW.COM"

	%INCLUDE "SOURCE:[CDD.OPEN]CDD_WINDOW.HB"

	%INCLUDE "SOURCE:[BC.OPEN]BC_CONTROL.HB"
	MAP (BC_CONTROL)	BC_CONTROL_CDD	BC_CONTROL
	MAP (FOO_BBC_BLAH)	BC_CONTROL_CDD	BC_CONTROL_OLD, BC_CONTROL2

	!
	! Common Areas
	!
	! These areas store information that is re-used between
	! calls to these functions.
	!
	COM (CH_BC_CONTROL) &
		BC_CONTROL.CH%, &
		BC_CONTROL.READONLY%

	!
	! Declare data types
	!
	DECLARE LONG XPOS, YPOS

	%PAGE

	ON ERROR GOTO 29000

	SELECT MOPTION

	!
	! Initialization
	!
	! This option is used to initialize the window structure,
	! set up the default values for add, and open all files
	! necessary that have not already been opened.
	!
	CASE OPT_INIT

		!*************************************************************
		! Set up information
		!*************************************************************

			!
			! Define window
			!
			SMG_WINDOW::DESCR = "Billing Agency Control File Maintenance"
			SMG_WINDOW::NHELP = "BC_MAIN_CONTROL"
			SMG_WINDOW::HSIZE = 78%
			SMG_WINDOW::VSIZE = 18%
			SMG_WINDOW::HVIEW = 78%
			SMG_WINDOW::VVIEW = 18%
			SMG_WINDOW::HPOS  = 2%
			SMG_WINDOW::VPOS  = 2%
			SMG_WINDOW::NITEMS= 3%
			SMG_WINDOW::FLAGS = 128%	! Relative file

			SMG_WINDOW::NKEYS = 0%


700		!
		! Declare channels
		!
		IF BC_CONTROL.CH% > 0%
		THEN
			!
			! Already open, set flag to read-only if was
			! that way from last time.
			!
			SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%) &
				IF BC_CONTROL.READONLY%
			GOTO 790
		END IF

		!
		! Open main file (existing) for modification
		!
750		%INCLUDE "SOURCE:[BC.OPEN]BC_CONTROL.CRE"
		BC_CONTROL.READONLY% = 0%
		GOTO 790

760		!
		! If unable to open for modify, try to open with read
		! access only.
		!
		%INCLUDE "SOURCE:[BC.OPEN]BC_CONTROL.OPN"
		SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%)
		BC_CONTROL.READONLY% = -1%

		GOTO 790

770		!
		! File not open, so reset channel
		!
		CALL ASSG_FREECHANNEL(BC_CONTROL.CH%)

		EXIT FUNCTION

790		SMG_WINDOW::CHAN  = BC_CONTROL.CH%
		GOSUB 28000

		!
		! Select function
		!
		CASE OPT_OPTLIST
			MVALUE = "Change Blank Help eXit"

		!
		! Display the background
		!
		CASE OPT_BACKGROUND

			SMG_STATUS% = SMG$BEGIN_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

			SMG_STATUS% = SMG$ERASE_DISPLAY(SMG_WINDOW::WNUMBER)

			DATA	5, 10, "(01) Last Period", &
				7, 10, "(02) Year", &
				9, 10, "(03) Last Invoice", &
				0,  0, ""

			RESTORE

			READ XPOS, YPOS, XSTR$
		I%=0%
		WHILE (XPOS <> 0)
			I% = I% + 1%
			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				XSTR$, XPOS, YPOS) &
				IF (SMG_WINDOW::HFLAG(I%) AND 2%)=0%
			READ XPOS, YPOS, XSTR$
		NEXT

		SMG_STATUS% = SMG$END_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

	!
	! Enter/Display/Default
	!
20200	CASE OPT_ENTRY
		TEMP$ = TRM$(SCOPE::PRG_ITEM)

		SCOPE::PRG_ITEM = "FLD" + FORMAT$(MLOOP, "<0>##")

 Reenter:	SCOPE::SCOPE_EXIT = 0%

		SELECT MLOOP

		CASE 1%
			BC_CONTROL::LASTPERCLOSE = &
				ENTR_3NUMBER(SCOPE, SMG_WINDOW::WNUMBER, &
				"5;29", TEMP$, &
				BC_CONTROL::LASTPERCLOSE * 1.0, &
				MFLAG, "##", MVALUE)

		CASE 2%
			BC_CONTROL::YEAR = &
				ENTR_3STRING(SCOPE, SMG_WINDOW::WNUMBER, &
				"7;29", TEMP$, &
				BC_CONTROL::YEAR, &
				MFLAG, "'E", MVALUE)

		CASE 3%
			BC_CONTROL::INV_NUM = &
				ENTR_3STRING(SCOPE, SMG_WINDOW::WNUMBER, &
				"9;29", TEMP$, &
				BC_CONTROL::INV_NUM, &
				MFLAG, "'E", MVALUE)

		END SELECT

		SCOPE::PRG_ITEM = TEMP$

	!
	! Set BC_CONTROL_OLD value
	!
20500	CASE OPT_SETOLD
		BC_CONTROL_OLD = BC_CONTROL

	!
	! Restore BC_CONTROL_OLD value
	!
	CASE OPT_RESETOLD
		BC_CONTROL = BC_CONTROL_OLD

	!
	! Set default value
	!
	CASE OPT_SETDEFAULT
		BC_CONTROL2 = BC_CONTROL

	!
	! Restore default value
	!
	CASE OPT_RESETDEFAULT
		BC_CONTROL = BC_CONTROL2

	END SELECT

	EXIT FUNCTION

28000	!
	! Get period record
	!
	GET #BC_CONTROL.CH%, RECORD 1%, REGARDLESS

	GOTO 28040

28030	!
	! Load in defaults for period file
	!
	BC_CONTROL::LASTPERCLOSE = 0%
	BC_CONTROL::YEAR = ""
	BC_CONTROL::INV_NUM = "1"

	PUT #BC_CONTROL.CH%, RECORD 1%

28040	RETURN

29000	!***************************************************************
	! Trap errors
	!***************************************************************
	SELECT ERL
	!
	! Unable to open Read/Write
	!
	CASE 750%
		RESUME 760 IF ERR = 10%
		BC_MAIN_CONTROL = ERR
		RESUME 770

	!
	! Unable to open Read/Only
	!
	CASE 760%
		BC_MAIN_CONTROL = ERR
		RESUME 770

	!
	! Unable to reset
	!
	CASE 790%
		RESUME 32767

	!
	! Record not found
	!
	CASE 28000%
		RESUME 28030

	!
	! Record not found
	!
	CASE 28030%
		CALL ENTR_3MESSAGE(SCOPE, "Unable to add period record",0%)

		RESUME 32767

	END SELECT

	ON ERROR GO BACK

32767	END FUNCTION
