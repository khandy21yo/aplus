1	%TITLE "Billing Insurance Form"
	%SBTTL "BI_FORM_BILL"
	%IDENT "V3.6a Calico"

	!
	!	COPYRIGHT (C) 1987, 1988 BY
	!	Computer Management Center, Inc.
	!	Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! ID:BI100
	!
	! Abstract:HELP
	!	.p
	!	The ^*Print Form\* program provides the means to print Billing Insurance Bills.
	!	Included in this option is the ability to print the bills in an alignment form.
	!
	! Index:
	!	.x Print Form
	!
	! Option:
	!
	! Compile:
	!
	!	$ BAS BI_SOURCE:BI_FORM_BILL/LINE
	!	$ LINK/EXE=BI_EXE:*.EXE BI_FORM_BILL, -
	!		FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE BI_FORM_BILL.OBJ;*
	!
	! Author:
	!
	!	11/14/88 - Frank Starman
	!
	! Modification history:
	!
	!	06/04/91 - J. Shad Rydalch
	!		Added form fields for address that will keep
	!		post office happy.
	!
	!	06/18/91 - Craig Tanner
	!		Added update to user UTL_REPORT from master.
	!
	!	03/18/92 - Dan Perkins
	!		Added batch selection capability.
	!
	!	03/22/92 - Kevin Handy
	!		Clean up (check)
	!
	!	06/11/92 - Kevin Handy
	!		Modified to use OUTP_INITFORM function.
	!
	!	06/16/92 - Kevin Handy
	!		Clean up (check)
	!
	!	03/23/93 - Kevin Handy
	!		Clean up (Check)
	!
	!	09/23/93 - Kevin Handy
	!		Removed JJ$ and READ_SYSJOB.
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	10/16/96 - Kevin Handy
	!		Reformat source code
	!
	!	05/09/97 - Kevin Handy
	!		Lose PRNT.CH% variable
	!
	!	05/13/97 - Kevin Handy
	!		Reformat source code
	!
	!	09/09/97 - Kevin Handy
	!		Lose unecessary external definitions
	!
	!	08/19/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!
	!	10/25/98 - Kevin Handy
	!		Don't bother erasing SMG_SCREEN_DATA, which is
	!		never created.
	!--

	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	!
	! Define maps
	!
	%INCLUDE "SOURCE:[AR.OPEN]AR_35CUSTOM.HB"
	MAP (AR_35CUSTOM)	AR_35CUSTOM_CDD		AR_35CUSTOM

	%INCLUDE "SOURCE:[BI.OPEN]BI_BILLH.HB"
	MAP (BI_BILLH)		BI_BILLH_CDD		BI_BILLH

	%INCLUDE "SOURCE:[BI.OPEN]BI_BILLL.HB"
	MAP (BI_BILLL)		BI_BILLL_CDD		BI_BILLL

	%INCLUDE "SOURCE:[BI.OPEN]BI_INSURED.HB"
	MAP (BI_INSURED)	BI_INSURED_CDD		BI_INSURED
	MAP (BI_INSURED_PAT)	BI_INSURED_CDD		BI_INSURED_PAT

	%INCLUDE "SOURCE:[BI.OPEN]BI_PATIENT.HB"
	MAP (BI_PATIENT)	BI_PATIENT_CDD		BI_PATIENT

	%INCLUDE "SOURCE:[BI.OPEN]BI_CONTROL.HB"
	MAP (BI_CONTROL)	BI_CONTROL_CDD		BI_CONTROL

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_REPORT.HB"
	MAP (UTL_REPORT)	UTL_REPORT_CDD		UTL_REPORT
	DECLARE			UTL_REPORT_CDD		UTL_REPORT_SYS

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_REPORTX.HB"
	DECLARE			UTL_REPORTX_CDD		UTL_REPORTX

	%INCLUDE "SOURCE:[UTL.OPEN]FORM_GROUP.HB"
	DIM FORM_GROUP_CDD FORM_GROUP(20%)	! Max of 20 groups

	COM (BI_FORM) &
		TOTAL_AMOUNT, &
		PAGE_NUMBER%, &
		REF_NO$ = 8%, &
		AR_CUSTOM.ADDLINE$(4%), &
		BI_INSURED.ADDLINE$(3%), &
		BI_INSURED_PAT.ADDLINE$(3%)

	!
	! External functions
	!
	EXTERNAL LONG		FUNCTION OUTP_FORMINIT
	EXTERNAL LONG		FUNCTION OUTP_FORMPRINT
	EXTERNAL LONG   FUNCTION OUTP_INITFORM

	%PAGE

	ON ERROR GOTO 19000

	!*******************************************************************
	! Initilize maintainence
	!*******************************************************************

	CALL READ_INITIALIZE

	REPORT$ = "BI100"

	!
	! Look up device
	!
	CALL READ_DEVICE("BI_FORM", BI_FORM.DEV$, STAT%)

	!***************************************************************
	! Open report files
	!***************************************************************

355	!
	! Open the report file
	!
	STAT% = FUNC_INCREMENT(REF_NO$)		! Increment invoice number
	OPTN$ = "01" + REF_NO$

	GOTO ExitProgram &
		IF OUTP_INITFORM(UTL_REPORTX, REPORT$, OPTN$) <> CMC$_NORMAL


	INVOICE_DATE$ = DATE_STOREDATE(UTL_REPORTX::OPTDEF(0%))

	!++
	! Abstract:FLD01
	!	^*(01) Invoice Date\*
	!	.p
	!	The ^*Invoice Date\* field is provided to enter the date
	!	which is to be printed on the invoices.
	!	.p
	!	The format for entry is MMDDYY or MMDDYYYY.
	!
	! Index:
	!	.x Invoice Date>Print Form
	!	.x Print Form>Invoice Date
	!	.x Date>Invoice
	!
	!--

	REF_NO$ = UTL_REPORTX::OPTDEF(1%)

	!++
	! Abstract:FLD02
	!	^*(02) Starting Invoice Number\*
	!	.p
	!	The ^*Starting Invoice Number\* field is provided to enter the
	!	number of the first invoice which will be printed.
	!
	! Index:
	!	.x Starting Invoice Number>Print Form
	!	.x Print Form>Starting Invoice Number
	!	.x Invoice Number>Starting
	!
	!--

	REPORT$ = REPORT$ + "$" + TRM$(UTL_REPORTX::OPTDEF(2%))

	!++
	! Abstract:FLD03
	!	^*(03) Form Name\*
	!	.p
	!	The ^*Form Name\* field is provided to enter the name
	!	of the form to be used in printing the invoices. Form
	!	names are created in the Utility option.
	!
	! Index:
	!	.x Form Name>Print Form
	!	.x Print Form>Form Name
	!	.x Name>Form
	!
	!--

	BATCH_NO$ = EDIT$(UTL_REPORTX::OPTDEF(3%), -1%)

	!++
	! Abstract:FLD04
	!	^*(04) Batch Number\*
	!	.p
	!	The ^*Batch Number\* field allows for entry of a selected
	!	batch number. Each Journal File is assigned
	!	a user batch number consisting of two (2) alphanumeric
	!	characters.
	!
	! Index:
	!
	!--

	%PAGE

	!***************************************************************
	! Open all other files
	!***************************************************************

600	!
	! Open vendor master file
	!
	%INCLUDE "SOURCE:[AR.OPEN]AR_35CUSTOM.OPN"

610	!
	! TM Control file
	!
	%INCLUDE "SOURCE:[BI.OPEN]BI_CONTROL.MOD"

	GET #BI_CONTROL.CH%, REGARDLESS
	UNLOCK #BI_CONTROL.CH%

	REF_NO$ = XLATE(BI_CONTROL::INVOICE, &
		STRING$(48%,0%) + "0123456789")

620	!
	! Open the matter file
	!
	%INCLUDE "SOURCE:[BI.OPEN]BI_BILLH.MOD"

630	!
	! Open the line file
	!
	%INCLUDE "SOURCE:[BI.OPEN]BI_BILLL.OPN"

640	!
	! Open the patient file
	!
	%INCLUDE "SOURCE:[BI.OPEN]BI_PATIENT.OPN"

650	!
	! Open the insured file
	!
	%INCLUDE "SOURCE:[BI.OPEN]BI_INSURED.OPN"

 EndOpen:
	!
	! Restore original values for the help message
	!
	SCOPE::PRG_IDENT = TEMP_IDENT$
	SCOPE::PRG_PROGRAM = TEMP_PROGRAM$

	!
	! Load in the form
	!
	GOSUB LoadForm

	!
	! GOTO aligment routine
	!
	GOSUB Alignment

	%PAGE

2000	!*******************************************************************
	! Read through the file
	!*******************************************************************

	RESET #BI_BILLH.CH%

2005	GET #BI_BILLH.CH%
	!
	! Skip unless invoice number field is blank
	!
	GOTO 2005 IF BI_BILLH::INVNUM <> ""

	!
	! Assign invoice number to item
	!
	BI_BILLH::INVNUM = REF_NO$
	BI_BILLH::INVDATE = INVOICE_DATE$

	GOSUB PrintBill

	!
	! Update invoice number
	!
2006	GET #BI_CONTROL.CH%, RECORD 1%
	BI_CONTROL::INVOICE = REF_NO$
	UPDATE #BI_CONTROL.CH%
	UNLOCK #BI_CONTROL.CH%

2008	UPDATE #BI_BILLH.CH%

	STAT% = FUNC_INCREMENT(REF_NO$)		! Increment invoice number

	GOTO 2005

 PrintBill:
2010	FIND #BI_INSURED.CH%, KEY#0% EQ BI_BILLH::PATIENT, REGARDLESS
	GET #BI_INSURED.CH%, REGARDLESS
	BI_INSURED_PAT = BI_INSURED

	!
	! Create an address line format that reduces white space
	!
	I% = 0%

	IF EDIT$(BI_INSURED_PAT::ADD1, -1%) <> ""
	THEN
		I% = I% + 1%
		BI_INSURED_PAT.ADDLINE$(I%) = &
			EDIT$(BI_INSURED_PAT::ADD1, 8% + 16% + 32% + 128%)
	END IF

	IF EDIT$(BI_INSURED_PAT::ADD2, -1%) <> ""
	THEN
		I% = I% + 1%
		BI_INSURED_PAT.ADDLINE$(I%) = &
			EDIT$(BI_INSURED_PAT::ADD2, 8% + 16% + 32% + 128%)
	END IF

	I% = I% + 1%
	BI_INSURED_PAT.ADDLINE$(I%) = &
		EDIT$(EDIT$(BI_INSURED_PAT::CITY, 128%) + ", " + &
		BI_INSURED_PAT::STATE + " " + BI_INSURED_PAT::ZIP + " " + &
		BI_INSURED_PAT::COUNTRY, 8% + 16% + 32% + 128%)

	BI_INSURED_PAT.ADDLINE$(LOOP%) = "" FOR LOOP% = I% + 1% TO 3%

2012	FIND #BI_INSURED.CH%, KEY#0% EQ BI_BILLH::INSURED, REGARDLESS
	GET #BI_INSURED.CH%, REGARDLESS

	!
	! Create an address line format that reduces white space
	!
	I% = 0%

	IF EDIT$(BI_INSURED::ADD1, -1%) <> ""
	THEN
		I% = I% + 1%
		BI_INSURED.ADDLINE$(I%) = &
			EDIT$(BI_INSURED::ADD1, 8% + 16% + 32% + 128%)
	END IF

	IF EDIT$(BI_INSURED::ADD2, -1%) <> ""
	THEN
		I% = I% + 1%
		BI_INSURED.ADDLINE$(I%) = &
			EDIT$(BI_INSURED::ADD2, 8% + 16% + 32% + 128%)
	END IF

	I% = I% + 1%
	BI_INSURED.ADDLINE$(I%) = EDIT$(EDIT$(BI_INSURED::CITY, 128%) + ", " + &
		BI_INSURED::STATE + " " + BI_INSURED::ZIP + " " + &
		BI_INSURED::COUNTRY, 8% + 16% + 32% + 128%)

	BI_INSURED.ADDLINE$(LOOP%) = "" FOR LOOP% = I% + 1% TO 3%

2016	BI_PATIENT::INSURED = BI_BILLH::INSURED
	BI_PATIENT::PATIENT = BI_BILLH::PATIENT
	BI_PATIENT::INSURANCE = "?"
	BI_PATIENT::FAMRELAT= ""
	BI_PATIENT::GROUPNO = "?"

	FIND #BI_PATIENT.CH%, &
		KEY#0% EQ BI_BILLH::INSURED + BI_BILLH::PATIENT, &
		REGARDLESS
	GET #BI_PATIENT.CH%, REGARDLESS

2018	!*******************************************************************
	! Read Customer file
	!*******************************************************************

	AR_35CUSTOM::CUSNUM = BI_PATIENT::INSURANCE
	AR_35CUSTOM::CUSNAM = ""
	AR_35CUSTOM::ADD1 = ""
	AR_35CUSTOM::ADD2 = ""
	AR_35CUSTOM::CITY = ""
	AR_35CUSTOM::STATE = ""
	AR_35CUSTOM::ZIP = ""

	FIND #AR_35CUSTOM.CH%, KEY#0% EQ BI_PATIENT::INSURANCE, REGARDLESS
	GET #AR_35CUSTOM.CH%, REGARDLESS

	!
	! Create an address line format that reduces white space
	!
	I% = 0%

	IF EDIT$(AR_35CUSTOM::ADD1, -1%) <> ""
	THEN
		I% = I% + 1%
		AR_CUSTOM.ADDLINE$(I%) = &
			EDIT$(AR_35CUSTOM::ADD1, 8% + 16% + 32% + 128%)
	END IF

	IF EDIT$(AR_35CUSTOM::ADD2, -1%) <> ""
	THEN
		I% = I% + 1%
		AR_CUSTOM.ADDLINE$(I%) = &
			EDIT$(AR_35CUSTOM::ADD2, 8% + 16% + 32% + 128%)
	END IF

	IF EDIT$(AR_35CUSTOM::ADD3, -1%) <> ""
	THEN
		I% = I% + 1%
		AR_CUSTOM.ADDLINE$(I%) = &
			EDIT$(AR_35CUSTOM::ADD3, 8% + 16% + 32% + 128%)
	END IF

	I% = I% + 1%
	AR_CUSTOM.ADDLINE$(I%) = EDIT$(EDIT$(AR_35CUSTOM::CITY, 128%) + ", " + &
		AR_35CUSTOM::STATE + " " + AR_35CUSTOM::ZIP + " " + &
		AR_35CUSTOM::COUNTRY, 8% + 16% + 32% + 128%)

	AR_CUSTOM.ADDLINE$(LOOP%) = "" FOR LOOP% = I% + 1% TO 4%

2020	!
	! Go through the WIP file, and see what groups have been
	! allocated, and generate totals for each group.
	!
	TOTAL_AMOUNT = 0.0

	FIND #BI_BILLL.CH%, KEY#0% GE BI_BILLH::PATIENT+ &
		BI_BILLH::INSURED, REGARDLESS

2050	GET #BI_BILLL.CH%, REGARDLESS

	!
	! Give up when the insured number changes
	!
	IF BI_BILLL::PATIENT+BI_BILLL::INSURED = &
		BI_BILLH::PATIENT + BI_BILLH::INSURED
	THEN
		TOTAL_AMOUNT = TOTAL_AMOUNT + BI_BILLL::AMOUNT
		GOTO 2050
	END IF

2100	!
	! Is there anything to print
	!
	GOSUB PrintForm

2180	GOTO ExitProgram IF UTL_REPORTX::STAT

2190	!
	! Go get the next vendor record
	!
	RETURN

	%PAGE

 ExitProgram:

4000	!******************************************************************
	! Exit the program
	!******************************************************************

	CALL OUTP_FINISHNOTITLE(UTL_REPORTX)

	CLOSE BI_CONTROL.CH%

	!
	! Erase Display
	!
	SMG_STATUS% = SMG$ERASE_DISPLAY(SCOPE::SMG_OPTION)
	SMG_STATUS% = SMG$ERASE_DISPLAY(SCOPE::SMG_MESSAGE)

	!
	! Change the width
	!
	SMG_STATUS% = SMG$CHANGE_PBD_CHARACTERISTICS(SCOPE::SMG_PBID, 80%)

 ExitProgram1:
	CALL SUBR_3EXITPROGRAM(SCOPE, "", "")

	%PAGE

 PrintForm:
18000	!***************************************************************
	! Print the bill now
	!***************************************************************

	FOR FORM_LOOP% = 1% TO FORM_GROUP%

		!
		! Page if necessary
		!
		IF LINE_COUNT% > FORM_GROUP(FRM_TOP%)::NUMBER - 4%
		THEN
			GOSUB NewPage
		END IF

		!
		! Top of the form
		!
		IF (FORM_GROUP(FORM_LOOP%)::FGROUP = "FRM-TOP")
		THEN
			LINE_COUNT% = LINE_COUNT% + &
				OUTP_FORMPRINT(UTL_REPORTX, &
				FORM_LOOP%, &
				FORM_TEXT$, &
				FORM_GROUPS%, &
				FORM_GROUP(), &
				0%)
			GOTO 18080
		END IF

		!
		! Body of a group
		!
		IF (FORM_GROUP(FORM_LOOP%)::FGROUP = "FRM-BODY")
		THEN
			GOSUB BillLine

			GOTO 18080
		END IF

		!
		! Bottom of the form
		!
		IF (FORM_GROUP(FORM_LOOP%)::FGROUP = "FRM-BOTTOM")
		THEN
			LINE_COUNT% = LINE_COUNT% + &
				OUTP_FORMPRINT(UTL_REPORTX, &
				FORM_LOOP%, &
				FORM_TEXT$, &
				FORM_GROUPS%, &
				FORM_GROUP(), &
				0%)
			GOTO 18080
		END IF

		!
		! Don't know what it is.  Fake it.
		!
		LINE_COUNT% = LINE_COUNT% + OUTP_FORMPRINT(UTL_REPORTX, &
			FORM_LOOP%, &
			FORM_TEXT$, &
			FORM_GROUPS%, &
			FORM_GROUP(), &
			0%)

18080	NEXT FORM_LOOP%

	!
	! Print lines to botton of the form
	!
	CALL OUTP_LINENOTITLE(LYT_LINE$, UTL_REPORTX, "", 0%) &
		FOR LOOP% = LINE_COUNT% + 1% TO FORM_GROUP(FRM_TOP%)::NUMBER

	LINE_COUNT% = 0%

18190	!
	! Done with this form
	!
	RETURN

 NewPage:
	!*******************************************************************
	! Skip to next page
	!*******************************************************************

	CALL OUTP_LINENOTITLE(LYT_LINE$, UTL_REPORTX, "", 0%) &
		FOR LOOP% = LINE_COUNT% + 1% TO FORM_GROUP(FRM_TOP%)::NUMBER

	!
	! Set up for new page
	!
	LINE_COUNT% = 0%
	PAGE_NUMBER% = PAGE_NUMBER% + 1%

	!
	! Print top of page, if we have one.
	!
	LINE_COUNT% = LINE_COUNT% + OUTP_FORMPRINT(UTL_REPORTX, &
		FRM_TOP%, &
		FORM_TEXT$, &
		FORM_GROUPS%, &
		FORM_GROUP(), &
		0%) &
		IF FRM_TOP%

	RETURN

	%PAGE

 BillLine:
18200	!*******************************************************************
	! Print out all info that exists for a specific grouping of
	! matter types
	!*******************************************************************

	THIS_COUNT% = 0%

	!
	! Get first item
	!
	FIND #BI_BILLL.CH%, KEY #0% GE BI_BILLH::PATIENT + &
		BI_BILLH::INSURED, REGARDLESS

18210	!
	! Pull up next
	!
	GET #BI_BILLL.CH%, REGARDLESS

	!
	! Exit when done
	!
	GOTO 18290 IF BI_BILLL::PATIENT+BI_BILLL::INSURED <> &
		BI_BILLH::PATIENT+BI_BILLH::INSURED

18230	!
	! Print out line
	!
	!
	! Page if necessary
	!
	IF (LINE_COUNT% > FORM_GROUP(FRM_TOP%)::NUMBER - 8%) OR &
	((THIS_COUNT% >= FORM_GROUP(FORM_LOOP%)::NUMBER - 1%) AND &
	(FORM_GROUP(FORM_LOOP%)::NUMBER <> 0%))
	THEN
		GOSUB NewPage
		THIS_COUNT% = 0%
	END IF

	TEMP_COUNT% = OUTP_FORMPRINT(UTL_REPORTX, &
		FORM_LOOP%, &
		FORM_TEXT$, &
		FORM_GROUPS%, &
		FORM_GROUP(), &
		0%)

	LINE_COUNT% = LINE_COUNT% + TEMP_COUNT%
	THIS_COUNT% = THIS_COUNT% + TEMP_COUNT%

	!
	! Get next record
	!
	GOTO 18210

18290	!
	! Exit from section
	!
	IF (FORM_GROUP(FORM_LOOP%)::NUMBER <> 0%)
	THEN
		FOR LOOP% = THIS_COUNT% + 1% TO FORM_GROUP(FORM_LOOP%)::NUMBER
			CALL OUTP_LINENOTITLE(LYT_LINE$, UTL_REPORTX, "", 0%)
			LINE_COUNT% = LINE_COUNT% + 1%
		NEXT LOOP%
	END IF

	RETURN

	%PAGE

 Alignment:
	!*******************************************************************
	! Print alignment form, if desireable
	!*******************************************************************

	SMG_STATUS% = SMG$ERASE_DISPLAY(SCOPE::SMG_OPTION)
	SMG_STATUS% = SMG$ERASE_DISPLAY(SCOPE::SMG_MESSAGE)

	PAGE_NUMBER% = 1%
	LINE_COUNT% = 0%

	UTL_REPORTX::LINENO = 0%
	UTL_REPORTX::PAGENO = 0%

	SCOPE::PRG_ITEM = "ALIGNMENT"
	JUNK$ = ENTR_3YESNO(SCOPE, SCOPE::SMG_OPTION, "", &
		"Do you want an alignment form?  Confirm then press <Do> ", &
		"N", 0%, "'E", "")

	SMG_STATUS% = SMG$ERASE_DISPLAY(SCOPE::SMG_OPTION)

	SELECT SCOPE::SCOPE_EXIT

	!
	! An exit key was typed
	!
	CASE 3%, SMG$K_TRM_CTRLZ, SMG$K_TRM_F10
		GOTO ExitProgram

	!
	! Return, etc. act as next screen
	!
	CASE 10%, 12%, 13%, SMG$K_TRM_F7, SMG$K_TRM_DO

	!
	! Case else
	!
	CASE ELSE
		CALL ENTR_3BADKEY(SCOPE,SCOPE::SCOPE_EXIT)
		GOTO Alignment

	END SELECT

	GOTO AlignmentReturn IF JUNK$ <> "Y"

	!
	! Load in the current form for the alignment
	!
	FOR FORM_LOOP% = 1% TO FORM_GROUP%

		IF (LEFT(FORM_GROUP(FORM_LOOP%)::FGROUP, 8%) = "FRM-BODY")
		THEN
			LINE_COUNT% = LINE_COUNT% + &
				OUTP_FORMPRINT(UTL_REPORTX, &
				FORM_LOOP%, &
				FORM_TEXT$, &
				FORM_GROUPS%, &
				FORM_GROUP(), &
				1%) &
				FOR I% = 1% TO 3%

			IF (FORM_GROUP(FORM_LOOP%)::NUMBER <> 0%)
			THEN
				FOR LOOP% = THIS_COUNT% + 1% TO FORM_GROUP(FORM_LOOP%)::NUMBER
					CALL OUTP_LINENOTITLE(LYT_LINE$, UTL_REPORTX, "", 0%)
					LINE_COUNT% = LINE_COUNT% + 1%
				NEXT LOOP%
			END IF
		ELSE
			LINE_COUNT% = LINE_COUNT% + &
				OUTP_FORMPRINT(UTL_REPORTX, &
				FORM_LOOP%, &
				FORM_TEXT$, &
				FORM_GROUPS%, &
				FORM_GROUP(), &
				1%)
		END IF

	NEXT FORM_LOOP%

	!
	! Print lines to botton of the form
	!
	CALL OUTP_LINENOTITLE(LYT_LINE$, UTL_REPORTX, "", 0%) &
		FOR LOOP% = LINE_COUNT% + 1% TO FORM_GROUP(FRM_TOP%)::NUMBER

	!
	! Do they need another?
	!
	GOTO Alignment

 AlignmentReturn:
	RETURN

	%PAGE

 LoadForm:
	!*******************************************************************
	! Initilize bill form
	!*******************************************************************

	!
	! Get form from the AR form library
	!
	SMG_STATUS% = OUTP_FORMINIT( &
		BI_FORM.DEV$ + "BI_FORM", REPORT$, &
		FORM_TEXT$, FORM_GROUP%, FORM_GROUP())

	!
	! Was there an error?
	!
	IF SMG_STATUS% <> 0%
	THEN
		CALL HELP_34MESSAGE(SCOPE, "statement form is missing", &
			"E", SCOPE::PRG_PROGRAM, REPORT$, NUM1$(SMG_STATUS%))
		GOTO ExitProgram
	END IF

	!
	! Search for the desired parts of the form
	!
	FRM_TOP% = 0%

	FOR I% = 1% TO FORM_GROUP%

		SELECT FORM_GROUP(I%)::FGROUP

		CASE "FRM-TOP"
			FRM_TOP% = I%

		END SELECT

	NEXT I%

	RETURN

	%PAGE

19000	!*******************************************************************
	! Trap errors
	!*******************************************************************

	!
	! Handle record locked errors
	!
	IF ERR = 154%
	THEN
		SLEEP 5%
		RESUME
	END IF

	SELECT ERL

	!
	! Unable to open vendor master file
	!
	CASE 600%
		RESUME 610 IF ERR = 5%
		FILENAME$ = "AR_35CUSTOM"

	!
	! Unable to open users report file
	!
	CASE 610%
		FILENAME$ = "BI_CONTROL"

	!
	! Unable to open billing journal header file
	!
	CASE 620%
		FILENAME$ = "BI_BILLH"

	!
	! Unable to open billing journal line file
	!
	CASE 630%
		RESUME 640 IF ERR = 5%
		FILENAME$ = "BI_BILLL"

	!
	! Unable to open patient type file
	!
	CASE 640%
		RESUME 650 IF ERR = 5%
		FILENAME$ = "BI_PATIENT"

	!
	! Unable to open customer type file
	!
	CASE 650%
		RESUME EndOpen IF ERR = 5%
		FILENAME$ = "BI_INSURED"

	CASE 2005%
		RESUME ExitProgram IF ERR = 11%
		FILENAME$ = "BI_BILLH"

	!
	! Can't find record
	!
	CASE 2010%
		RESUME 2012 IF ERR = 155% OR ERR = 9%
		FILENAME$ = "BI_INSURED"

	!
	! Can't find record
	!
	CASE 2012%
		RESUME 2016 IF ERR = 155% OR ERR = 9%
		FILENAME$ = "BI_INSURED"

	!
	! Can't find record
	!
	CASE 2016%
		RESUME 2018 IF ERR = 155% OR ERR = 9%
		FILENAME$ = "BI_PATIENT"

	!
	! Can't find record
	!
	CASE 2018%
		RESUME 2020 IF ERR = 155% OR ERR = 9%
		FILENAME$ = "AR_35_CUSTOM"

	!
	! Error looking through line file
	!
	CASE 2020%
		RESUME 2100 IF ERR = 155% OR ERR = 9%
		FILENAME$ = "BI_BILLL"

	CASE 2050%
		RESUME 2100 IF ERR = 11%
		FILENAME$ = "BI_BILLL"

	!
	! Error looking through line file
	!
	CASE 18200%
		RESUME 18290 IF ERR = 155% OR ERR = 9%
		FILENAME$ = "BI_BILLL"

	CASE 18210%
		RESUME 18290 IF ERR = 11%
		FILENAME$ = "BI_BILLL"

	END SELECT

	!
	! Untrapped error
	!
	RESUME 19990

19990	!
	! This moved from inside error to outside so that errors occuring
	! at lower levels could be trapped.  Basic will not allow any
	! error to occur inside of an error no matter if it is in a
	! different module.
	!
	CALL HELP_34MESSAGE(SCOPE, NUM1$(ERL) + " " + ERT$(ERR), &
		"E", ERN$, FILENAME$, NUM1$(ERR))

	GOTO ExitProgram

	!
	! Handle the cases where a file couldn't be opened
	!
	END

20000	SUB FORM_LOADVAR(VARNAME$, REALVALUE, TEXTVALUE$)

	!*******************************************************************
	! This function is used to return the value of a field back to the
	! form printer.
	!*******************************************************************

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	!
	! Define maps
	!
	%INCLUDE "SOURCE:[AR.OPEN]AR_35CUSTOM.HB"
	MAP (AR_35CUSTOM)	AR_35CUSTOM_CDD	AR_35CUSTOM

	%INCLUDE "SOURCE:[BI.OPEN]BI_BILLH.HB"
	MAP (BI_BILLH)	BI_BILLH_CDD	BI_BILLH

	%INCLUDE "SOURCE:[BI.OPEN]BI_BILLL.HB"
	MAP (BI_BILLL)	BI_BILLL_CDD	BI_BILLL

	%INCLUDE "SOURCE:[BI.OPEN]BI_INSURED.HB"
	MAP (BI_INSURED) BI_INSURED_CDD	BI_INSURED
	MAP (BI_INSURED_PAT) BI_INSURED_CDD	BI_INSURED_PAT

	%INCLUDE "SOURCE:[BI.OPEN]BI_PATIENT.HB"
	MAP (BI_PATIENT) BI_PATIENT_CDD	BI_PATIENT

	COM (BI_FORM) &
		TOTAL_AMOUNT, &
		PAGE_NUMBER%, &
		REF_NO$ = 8%, &
		AR_CUSTOM.ADDLINE$(4%), &
		BI_INSURED.ADDLINE$(3%), &
		BI_INSURED_PAT.ADDLINE$(3%)

	%PAGE

	!
	! Set up default values
	!
	REALVALUE = 0.0
	TEXTVALUE$ = "????????"

	!
	! Pick by variable
	!
	SELECT VARNAME$

	!************************************************************
	! Fields for the AR_35CUSTOM file
	!************************************************************

	CASE "AR_35CUSTOM::CUSNUM", "AR_CUSTOM::CUSNUM"
		TEXTVALUE$ = AR_35CUSTOM::CUSNUM

	CASE "AR_35CUSTOM::CUSNAM", "AR_CUSTOM::CUSNAM"
		TEXTVALUE$ = AR_35CUSTOM::CUSNAM

	CASE "AR_35CUSTOM::TTYPE", "AR_CUSTOM::TTYPE"
		TEXTVALUE$ = AR_35CUSTOM::TTYPE

	CASE "AR_35CUSTOM::CATEGORY", "AR_CUSTOM::CATEGORY"
		TEXTVALUE$ = AR_35CUSTOM::CATEGORY

	CASE "AR_35CUSTOM::BDATE", "AR_CUSTOM::BDATE"
		TEXTVALUE$ = PRNT_DATE(AR_35CUSTOM::BDATE, 8%)

	CASE "AR_35CUSTOM::SSTATUS", "AR_CUSTOM::SSTATUS"
		TEXTVALUE$ = AR_35CUSTOM::SSTATUS

	CASE "AR_35CUSTOM::EDATE", "AR_CUSTOM::EDATE"
		TEXTVALUE$ = PRNT_DATE(AR_35CUSTOM::EDATE, 8%)

	CASE "AR_35CUSTOM::ADD1", "AR_CUSTOM::ADD1"
		TEXTVALUE$ = AR_35CUSTOM::ADD1

	CASE "AR_35CUSTOM::ADD2", "AR_CUSTOM::ADD2"
		TEXTVALUE$ = AR_35CUSTOM::ADD2

	CASE "AR_35CUSTOM::ADD3", "AR_CUSTOM::ADD3"
		TEXTVALUE$ = AR_35CUSTOM::ADD3

	CASE "AR_35CUSTOM::CITY", "AR_CUSTOM::CITY"
		TEXTVALUE$ = AR_35CUSTOM::CITY

	CASE "AR_35CUSTOM::STATE", "AR_CUSTOM::STATE"
		TEXTVALUE$ = AR_35CUSTOM::STATE

	CASE "AR_35CUSTOM::ZIP", "AR_CUSTOM::ZIP"
		TEXTVALUE$ = AR_35CUSTOM::ZIP

	CASE "AR_35CUSTOM::COUNTRY", "AR_CUSTOM::COUNTRY"
		TEXTVALUE$ = AR_35CUSTOM::COUNTRY

	CASE "AR_35CUSTOM::COUNTY", "AR_CUSTOM::COUNTY"
		TEXTVALUE$ = AR_35CUSTOM::COUNTY

	CASE "AR_CUSTOM.ADDLINE1"	! Substitute Customer Address
		TEXTVALUE$ = AR_CUSTOM.ADDLINE$(1%)

	CASE "AR_CUSTOM.ADDLINE2"	! Substitute Customer Address
		TEXTVALUE$ = AR_CUSTOM.ADDLINE$(2%)

	CASE "AR_CUSTOM.ADDLINE3"	! Substitute Customer Address
		TEXTVALUE$ = AR_CUSTOM.ADDLINE$(3%)

	CASE "AR_CUSTOM.ADDLINE4"	! Substitute Customer Address
		TEXTVALUE$ = AR_CUSTOM.ADDLINE$(4%)

	CASE "AR_35CUSTOM::PHONE", "AR_CUSTOM::PHONE"
		TEXTVALUE$ = AR_35CUSTOM::PHONE

	CASE "AR_35CUSTOM::METHOD", "AR_CUSTOM::METHOD"
		TEXTVALUE$ = AR_35CUSTOM::METHOD

	CASE "AR_35CUSTOM::STMTFLG", "AR_CUSTOM::STMTFLG"
		TEXTVALUE$ = AR_35CUSTOM::STMTFLG

	CASE "AR_35CUSTOM::ALPSRT", "AR_CUSTOM::ALPSRT"
		TEXTVALUE$ = AR_35CUSTOM::ALPSRT

	CASE "AR_35CUSTOM::SERCHRG", "AR_CUSTOM::SERCHRG"
		TEXTVALUE$ = AR_35CUSTOM::SERCHRG

	CASE "AR_35CUSTOM::TAXCODE", "AR_CUSTOM::TAXCODE"
		TEXTVALUE$ = AR_35CUSTOM::TAXCODE

	CASE "AR_35CUSTOM::TAXEXEMP", "AR_CUSTOM::TAXEXEMP"
		TEXTVALUE$ = AR_35CUSTOM::TAXEXEMP

	CASE "AR_35CUSTOM::LOCATION", "AR_CUSTOM::LOCATION"
		TEXTVALUE$ = AR_35CUSTOM::LOCATION

	CASE "AR_35CUSTOM::TERMS", "AR_CUSTOM::TERMS"
		TEXTVALUE$ = AR_35CUSTOM::TERMS

	CASE "AR_35CUSTOM::CARRIER", "AR_CUSTOM::CARRIER"
		TEXTVALUE$ = AR_35CUSTOM::CARRIER

	CASE "AR_35CUSTOM::SALESMAN", "AR_CUSTOM::SALESMAN"
		TEXTVALUE$ = AR_35CUSTOM::SALESMAN

	CASE "AR_35CUSTOM::CREDITLIM", "AR_CUSTOM::CREDITLIM"
		REALVALUE  = AR_35CUSTOM::CREDITLIM

	CASE "AR_35CUSTOM::DISCOUNT", "AR_CUSTOM::DISCOUNT"
		REALVALUE  = AR_35CUSTOM::DISCOUNT

	CASE "AR_35CUSTOM::BACKORDER", "AR_CUSTOM::BACKORDER"
		TEXTVALUE$ = AR_35CUSTOM::BACKORDER

	CASE "AR_35CUSTOM::TAXFLAG", "AR_CUSTOM::TAXFLAG"
		TEXTVALUE$ = AR_35CUSTOM::TAXFLAG

	!************************************************************
	! BI_BILLH fields
	!************************************************************

	CASE "BI_BILLH::INSURED"
		TEXTVALUE$ = BI_BILLH::INSURED

	CASE "BI_BILLH::PATIENT"
		TEXTVALUE$ = BI_BILLH::PATIENT

	CASE "BI_BILLH::STATIONMAN"
		TEXTVALUE$ = BI_BILLH::STATIONMAN

	CASE "BI_BILLH::INVNUM"
		TEXTVALUE$ = BI_BILLH::INVNUM

	CASE "BI_BILLH::INVDATE"
		TEXTVALUE$ = PRNT_DATE(BI_BILLH::INVDATE,6%)

	!************************************************************
	! BI_BILLL fields
	!************************************************************

	CASE "BI_BILLL::INSURED"
		TEXTVALUE$ = BI_BILLL::INSURED

	CASE "BI_BILLL::PATIENT"
		TEXTVALUE$ = BI_BILLL::PATIENT

	CASE "BI_BILLL::SERVDATE"
		TEXTVALUE$ = PRNT_DATE(BI_BILLL::SERVDATE,6%)

	CASE "BI_BILLL::CPT"
		TEXTVALUE$ = BI_BILLL::CPT

	CASE "BI_BILLL::DESCRIPTION"
		TEXTVALUE$ = BI_BILLL::DESCRIPTION

	CASE "BI_BILLL::DIAGNOSIS"
		TEXTVALUE$ = BI_BILLL::DIAGNOSIS

	CASE "BI_BILLL::LENTH"
		REALVALUE = BI_BILLL::LENTH

	CASE "BI_BILLL::MULTIPLIER"
		REALVALUE = BI_BILLL::MULTIPLIER

	CASE "BI_BILLL::AMOUNT"
		REALVALUE = BI_BILLL::AMOUNT

	!************************************************************
	! Insured
	!************************************************************

	CASE "BI_INSURED::INSURED"
		TEXTVALUE$ = BI_INSURED::INSURED

	CASE "BI_INSURED::INSNAME"
		TEXTVALUE$ = BI_INSURED::INSNAME

	CASE "BI_INSURED::ADD1"
		TEXTVALUE$ = BI_INSURED::ADD1

	CASE "BI_INSURED::ADD2"
		TEXTVALUE$ = BI_INSURED::ADD2

	CASE "BI_INSURED::CITY"
		TEXTVALUE$ = BI_INSURED::CITY

	CASE "BI_INSURED::STATE"
		TEXTVALUE$ = BI_INSURED::STATE

	CASE "BI_INSURED::ZIP"
		TEXTVALUE$ = BI_INSURED::ZIP

	CASE "BI_INSURED::COUNTRY"
		TEXTVALUE$ = BI_INSURED::COUNTRY

	CASE "BI_INSURED::COUNTY"
		TEXTVALUE$ = BI_INSURED::COUNTY

	CASE "BI_INSURED.ADDLINE1"	! Substitute Insured Address
		TEXTVALUE$ = BI_INSURED.ADDLINE$(1%)

	CASE "BI_INSURED.ADDLINE2"	! Substitute Insured Address
		TEXTVALUE$ = BI_INSURED.ADDLINE$(2%)

	CASE "BI_INSURED.ADDLINE3"	! Substitute Insured Address
		TEXTVALUE$ = BI_INSURED.ADDLINE$(3%)

	CASE "BI_INSURED::PHONE"
		TEXTVALUE$ = BI_INSURED::PHONE

	CASE "BI_INSURED::ALPSRT"
		TEXTVALUE$ = BI_INSURED::ALPSRT

	CASE "BI_INSURED::REFNO"
		TEXTVALUE$ = BI_INSURED::REFNO

	CASE "BI_INSURED::BIRTHDATE"
		TEXTVALUE$ = PRNT_DATE(BI_INSURED::BIRTHDATE,6%)

	CASE "BI_INSURED::SEX"
		TEXTVALUE$ = BI_INSURED::SEX

	CASE "BI_INSURED::ONSETDATE"
		TEXTVALUE$ = PRNT_DATE(BI_INSURED::ONSETDATE,6%)

	!************************************************************
	! Patient
	!************************************************************

	CASE "BI_INSURED_PAT::INSURED"
		TEXTVALUE$ = BI_INSURED_PAT::INSURED

	CASE "BI_INSURED_PAT::INSNAME"
		TEXTVALUE$ = BI_INSURED_PAT::INSNAME

	CASE "BI_INSURED_PAT::ADD1"
		TEXTVALUE$ = BI_INSURED_PAT::ADD1

	CASE "BI_INSURED_PAT::ADD2"
		TEXTVALUE$ = BI_INSURED_PAT::ADD2

	CASE "BI_INSURED_PAT::CITY"
		TEXTVALUE$ = BI_INSURED_PAT::CITY

	CASE "BI_INSURED_PAT::STATE"
		TEXTVALUE$ = BI_INSURED_PAT::STATE

	CASE "BI_INSURED_PAT::ZIP"
		TEXTVALUE$ = BI_INSURED_PAT::ZIP

	CASE "BI_INSURED_PAT::COUNTRY"
		TEXTVALUE$ = BI_INSURED_PAT::COUNTRY

	CASE "BI_INSURED_PAT::COUNTY"
		TEXTVALUE$ = BI_INSURED_PAT::COUNTY

	CASE "BI_INSURED_PAT.ADDLINE1"	! Substitute Insured patient Address
		TEXTVALUE$ = ADDLINE$(1%)

	CASE "BI_INSURED_PAT.ADDLINE2"	! Substitute Insured patient Address
		TEXTVALUE$ = ADDLINE$(2%)

	CASE "BI_INSURED_PAT.ADDLINE3"	! Substitute Insured patient Address
		TEXTVALUE$ = ADDLINE$(3%)

	CASE "BI_INSURED_PAT::PHONE"
		TEXTVALUE$ = BI_INSURED_PAT::PHONE

	CASE "BI_INSURED_PAT::ALPSRT"
		TEXTVALUE$ = BI_INSURED_PAT::ALPSRT

	CASE "BI_INSURED_PAT::REFNO"
		TEXTVALUE$ = BI_INSURED_PAT::REFNO

	CASE "BI_INSURED_PAT::BIRTHDATE"
		TEXTVALUE$ = PRNT_DATE(BI_INSURED::BIRTHDATE,6%)

	CASE "BI_INSURED_PAT::SEX"
		TEXTVALUE$ = BI_INSURED_PAT::SEX

	CASE "BI_INSURED_PAT::ONSETDATE"
		TEXTVALUE$ = PRNT_DATE(BI_INSURED_PAT::ONSETDATE,6%)

	!************************************************************
	! Patient
	!************************************************************

	CASE "BI_PATIENT::INSURED"
		TEXTVALUE$ = BI_PATIENT::INSURED

	CASE "BI_PATIENT::PATIENT"
		TEXTVALUE$ = BI_PATIENT::PATIENT

	CASE "BI_PATIENT::FAMRELAT"
		TEXTVALUE$ = BI_PATIENT::FAMRELAT

	CASE "BI_PATIENT::INSURANCE"
		TEXTVALUE$ = BI_PATIENT::INSURANCE

	CASE "BI_PATIENT::GROUPNO"
		TEXTVALUE$ = BI_PATIENT::GROUPNO

	!************************************************************
	! Non fielded values
	!************************************************************

	CASE "TOTAL_AMOUNT"
		REALVALUE = TOTAL_AMOUNT

	CASE "PAGE_NUMBER"
		REALVALUE = PAGE_NUMBER%
		TEXTVALUE$ = NUM1$(PAGE_NUMBER%)
	END SELECT

	END SUB
