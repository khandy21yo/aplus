1	%TITLE "CTP Time Rate Table"
	%SBTTL "BI_MAIN_TABLELINE"
	%IDENT "V3.6a Calico"

	FUNCTION LONG BI_MAIN_TABLELINE(CDD_WINDOW_CDD SMG_WINDOW, &
		LONG MOPTION, LONG MLOOP, LONG MFLAG, STRING MVALUE)

	!
	! COPYRIGHT (C) 1987 BY
	!
	! Computer Management Center
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! Abstract:HELP
	!	.p
	!	The ^*Rate Table\* program maintains the CPT Time rate table.
	!
	! Index:
	!	.x Rate Table
	!	.x Table>Rate
	!
	! Option:
	!
	!
	! Compile:
	!
	!	$ BAS BI_SOURCE:BI_MAIN_TABLELINE/LINE
	!	$ LIB/REP FUNC_LIB:CMCFUN BI_MAIN_TABLELINE
	!	$ DELETE BI_MAIN_TABLELINE.OBJ;*
	!
	! Author:
	!
	!	10/27/88 - Frank Starman
	!
	! Modification history:
	!
	!	03/23/93 - Kevin Handy
	!		Clean up (Check)
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	10/16/96 - Kevin Handy
	!		Reformat source code
	!
	!	05/22/97 - Kevin Handy
	!		Use integer for #key
	!
	!	08/25/97 - Kevin Handy
	!		Change 'val' to 'val%'
	!
	!	08/19/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!
	!	03/08/99 - Kevin Handy
	!		Finx FIND bug
	!--
	%PAGE

	!
	! Set up compiling options
	!
	OPTION SIZE = (REAL GFLOAT, INTEGER LONG)

	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	%INCLUDE "FUNC_INCLUDE:MAIN_WINDOW.COM"
	%INCLUDE "SOURCE:[CDD.OPEN]CDD_WINDOW.HB"

	%INCLUDE "SOURCE:[BI.OPEN]BI_RATELINE.HB"
	MAP (BI_RATELINE)	BI_RATELINE_CDD		BI_RATELINE
	MAP (BI_RATELINE_OLD)	BI_RATELINE_CDD		BI_RATELINE_OLD, &
							BI_RATELINE2

	%INCLUDE "SOURCE:[BI.OPEN]BI_RATETABLE.HB"
	MAP (BI_RATETABLE)	BI_RATETABLE_CDD	BI_RATETABLE

	COM (CH_BI_RATELINE) &
		BI_RATELINE.CH%

	!
	! Create array to contain pointers and totals
	!
	RECORD RARRAY_RECORD
		RFA	LINRFA		! Rfa pointer for record
	END RECORD

	MAP (TT_BI_RATELINE) RARRAY_RECORD RARRAY(100%)! Allocate for 100

	%PAGE

	ON ERROR GOTO 29000

	SELECT MOPTION

	CASE OPT_INIT
		!
		! Define window
		!
		SMG_WINDOW::DESCR = "Time Rate Table"
		SMG_WINDOW::NHELP = "BI_MAIN_TABLELINE"
		SMG_WINDOW::HSIZE = 78%
		SMG_WINDOW::VSIZE = 13%
		SMG_WINDOW::HVIEW = 78%
		SMG_WINDOW::VVIEW = 18%
		SMG_WINDOW::HPOS  = 2%
		SMG_WINDOW::VPOS  = 7%
		SMG_WINDOW::NITEMS= 2%
		SMG_WINDOW::FLAGS = 0%

		SMG_WINDOW::TOPLIN = 3%
		SMG_WINDOW::BOTLIN = 12%

		!
		! Load in defaults for chart
		!
		CALL READ_DEFAULTS(SMG_WINDOW)

700		!
		! Get info required for main file
		!
		GOTO 750 IF BI_RATELINE.CH% > 0%

		!
		! Open main file (existing) for modification
		!
		%INCLUDE "SOURCE:[BI.OPEN]BI_RATELINE.CRE"

750		SMG_WINDOW::CHAN  = BI_RATELINE.CH%

		RESET #BI_RATELINE.CH%
		GET #BI_RATELINE.CH%, REGARDLESS


	!
	! Display the background
	!
20100	CASE OPT_BACKGROUND

		SMG_STATUS% = SMG$BEGIN_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

		SMG_STATUS% = SMG$ERASE_DISPLAY(SMG_WINDOW::WNUMBER)

		SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
			"  (01)        (02)", &
			1%, 1%, , SMG$M_REVERSE)

		SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
			"  Time        Rate", &
			2%, 1%, , SMG$M_REVERSE)

		SMG_STATUS% = SMG$END_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

	!
	! Extra display stuff
	!
	CASE OPT_DISPLAY

		SMG_STATUS% = SMG$BEGIN_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

		!
		! Generate totals
		!

		!
		! Display totals
		!
		SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
			"Number of lines" + &
			FORMAT$(SMG_WINDOW::TOTREC, "### "), &
			SMG_WINDOW::VSIZE, 1%, , SMG$M_REVERSE)

		!
		! Paint lines on screen
		!
		FOR I% = 1% TO 2%
			A% = VAL%(MID("009,019",I%*4%-3%, 3%))

			SMG_STATUS% = SMG$DRAW_LINE(SMG_WINDOW::WNUMBER, &
				1%, A%, SMG_WINDOW::BOTLIN, A%)
		NEXT I%

		SMG_STATUS% = SMG$END_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

	!
	! Enter/Display/Default
	!
20200	CASE OPT_ENTRY
		TEMP$, TEMP1$ = TRM$(SCOPE::PRG_ITEM)
		TEMP$ = "View starting at" IF TEMP$ = "View"

		SCOPE::PRG_ITEM = "FLD" + FORMAT$(MLOOP, "<0>##")

		XLINE$ = NUM1$(SMG_WINDOW::CURLIN)

 Reentry:	SCOPE::SCOPE_EXIT = 0%

		SELECT MLOOP

		CASE 1%

	!++
	! Abstract:FLD001
	!
	!	^*(01) Time\*
	!	.p
	!	The ^*Time\* field is provided to enter the time, in minutes,
	!	for a particular rate.
	!	.p
	!	The field is entered in minutes only.  Two (02) spaces are
	!	available for the entry.
	!
	! Index:
	!	.x Add>Time
	!	.x Erase>Time
	!	.x Change>Time
	!	.x Maintain>Time
	!	.x Time>Add
	!	.x Time>Erase
	!	.x Time>Change
	!	.x Time>Maintain
	!--

			INTERVAL = ENTR_3NUMBER(SCOPE, SMG_WINDOW::WNUMBER, &
				XLINE$ + ";3", TEMP$, &
				VAL%(EDIT$(BI_RATELINE::INTERVAL, -1%)), &
				MFLAG, "<0>#", MVALUE)

			BI_RATELINE::INTERVAL = FORMAT$(INTERVAL,"<0>#")

		CASE 2%

	!++
	! Abstract:FLD002
	!	^*(02) Rate\*
	!	.p
	!	The ^*Rate\* field provides the means to enter the rate that
	!	will be charged for the amount of time entered in field (01).
	!
	! Index:
	!	.x Rate>Add
	!	.x Rate>Change
	!	.x Rate>Erase
	!	.x Rate>Maintain
	!
	!--

			BI_RATELINE::RATE = ENTR_3NUMBER(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				XLINE$ + ";13",TEMP$, &
				BI_RATELINE::RATE, MFLAG, &
				"###.##", MVALUE )

		END SELECT

		SCOPE::PRG_ITEM = TEMP1$

	!
	! Test values
	!
20300	CASE OPT_TESTENTRY

		BI_MAIN_TABLELINE = 0%

		SELECT MLOOP

		CASE 1%
			IF BI_RATELINE::INTERVAL = ""
			THEN
				BI_MAIN_TABLELINE = 1%
			END IF

		END SELECT

	! Set BI_RATELINE_OLD value
	!
20500	CASE OPT_SETOLD
		BI_RATELINE_OLD = BI_RATELINE

	!
	! Restore BI_RATELINE_OLD value
	!
	CASE OPT_RESETOLD
		BI_RATELINE = BI_RATELINE_OLD

	!
	! Set default value
	!
	CASE OPT_SETDEFAULT
		BI_RATELINE2 = BI_RATELINE

	!
	! Restore default value
	!
	CASE OPT_RESETDEFAULT
		BI_RATELINE = BI_RATELINE2

		!
		! Set special default values for the key of a new record
		! which is the most likely case when this function is to
		! be called.
		!

		BI_RATELINE::RATETABLE = BI_RATETABLE::RATETABLE

	!
	! Find
	!
	CASE OPT_FIND
		SELECT MLOOP

		CASE 0%
			FIND #BI_RATELINE.CH%, &
				KEY#0% GE BI_RATELINE::RATETABLE + "", &
					REGARDLESS
		END SELECT

	!
	! Handle array of records
	!
27000	CASE OPT_ARRAY

		!
		! Select sub-option of array
		!
		SELECT MLOOP

		!
		! Load array with line items
		!
		CASE 1%

			!
			! Empty array
			!
			SMG_WINDOW::TOTREC = 0%

27110			!
			! Search for first record
			!
			FIND #SMG_WINDOW::CHAN, &
				KEY #0% GE BI_RATETABLE::RATETABLE + "", &
					REGARDLESS

27120			!
			! Get a record
			!
			GET #SMG_WINDOW::CHAN

			IF BI_RATELINE::RATETABLE = &
			BI_RATETABLE::RATETABLE
			THEN
				!
				! Add information to array
				!
				SMG_WINDOW::TOTREC = SMG_WINDOW::TOTREC + 1%
				RARRAY(SMG_WINDOW::TOTREC)::LINRFA = &
					GETRFA(SMG_WINDOW::CHAN)
				GOTO 27120
			END IF

		!
		! Remove one element of the array
		!
		CASE 2%
			!
			! Remove item pointed to by Mflag
			!
			FOR I% = MFLAG TO SMG_WINDOW::TOTREC - 1%
				RARRAY(I%) = RARRAY(I% + 1%)
			NEXT I%

		!
		! Set array item to current record
		!
		CASE 3%
			RARRAY(MFLAG)::LINRFA = GETRFA(SMG_WINDOW::CHAN)

		!
		! Load in current record, locked
		!
		CASE 4%
27200			GET #SMG_WINDOW::CHAN, RFA RARRAY(MFLAG)::LINRFA

		!
		! Load in current record, unlocked
		!
		CASE 5%
			GET #SMG_WINDOW::CHAN, RFA RARRAY(MFLAG)::LINRFA, &
				REGARDLESS

		!
		! Change the current record's key to match header.  The
		! new key probably passes through MVALUE, unless some
		! other means is devised.
		!
		CASE 6%
			BI_RATELINE::RATETABLE = MID(MVALUE,2%,6%)
		!
		! Print descriptions in journal window.
		!
		CASE 7%
			! Nop right now

		END SELECT
	END SELECT

28000	EXIT FUNCTION

	%PAGE

29000	!*******************************************************************
	! Trap errors
	!*******************************************************************
	SELECT ERL
	CASE 750%
		RESUME 32767

	!
	! Record does not already exist
	!
	CASE 20300%
		RESUME 32767 IF ERR = 155%

	!
	! Error while loading array
	!
	CASE 27110%
		!
		! Nothing to load
		!
		RESUME 28000

	CASE 27120%
		!
		! Read all records
		!
		RESUME 28000 IF ERR = 11%

	END SELECT

	ON ERROR GO BACK

32767	END FUNCTION
