1	%TITLE "CPT Category Codes File List"
	%SBTTL "BI_RPRT_CPTCATEGORY"
	%IDENT "V3.6a Calico"

	!
	! COPYRIGHT (C) 1986, 1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! ID:BI007
	!
	! Abstract:HELP
	!	.p
	!	Accessing the ^*Current Procedural Terminology Category\* option in the Master
	!	List Menu provides the means to print a report which will contain the following
	!	information:
	!	.lm +10
	!	.b
	!	.list 0,"*"
	!	.le
	!	Current Procedural Terminology Category
	!	.le
	!	Description
	!	.els
	!
	! Index:
	!	.x Current Procedural Terminology Category>Report
	!	.x Report>Current Procedural Terminology Category
	!
	! Option:
	!
	!
	! Compile:
	!
	!	$ BAS BI_SOURCE:BI_RPRT_CPTCATEGORY/LINE
	!	$ LINK/EXE=BI_EXE: BI_RPRT_CPTCATEGORY, FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE BI_RPRT_CPTCATEGORY.OBJ;*
	!
	! Author:
	!
	!	09/09/88 - J. Shad Rydalch
	!
	! Modification History:
	!
	!	06/22/90 - Aaron Redd
	!		Added line layout information so that the report could
	!		also be sent to either a spreadsheet or a DIF file.
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	09/03/96 - Kevin Handy
	!		Reformat source code.
	!
	!	08/19/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!
	!	10/15/98 - Kevin Handy
	!		Lose excessive %PAGE's
	!--
	%PAGE

	!
	! Set up compiling options
	!
	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_REPORTX.HB"
	DECLARE			UTL_REPORTX_CDD	UTL_REPORTX

	%INCLUDE "SOURCE:[BI.OPEN]BI_CATEGORY.HB"
	MAP	(BI_CATEGORY)	BI_CATEGORY_CDD	BI_CATEGORY

	!
	! Declare variables and constants
	!
	DECLARE	STRING	LYT_LINE

	%PAGE

	!
	! Set up error trapping
	!
	ON ERROR GOTO 19000

 Init:
	!
	! Initilize report
	!
	CALL OUTP_INITFROMFILE(UTL_REPORTX, 132%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	SORT.BY$ = EDIT$(UTL_REPORTX::OPTDEF(0%), 132%)

	!++
	! Abstract:FLD01
	!	^*(01) Sort (C,D)\*
	!	.p
	!	The value entered in the ^*Sort\* field will cause the report
	!	to print in a selected order.
	!	.p
	!	Valid settings are:
	!	.lm +10
	!	.b
	!	.list 0,"*"
	!	.le
	!	C = Category
	!	.le
	!	D = Description
	!	.els
	!
	! Index:
	!	.x Sort>Category List
	!	.x Category List>Sort
	!
	!--

	FROM.ITEM$ = EDIT$(UTL_REPORTX::OPTDEF(1%), 132%)

	!++
	! Abstract:FLD02
	!	^*(02) From Item\*
	!	.p
	!	The value entered in the ^*From Item\* field will cause the
	!	Category List Report to print in a selected order by entering
	!	that selection in this field. The value of the selection
	!	must be in agreement with the Sort value in field (01).
	!	.p
	!	A blank setting will cause the report to begin with the first
	!	Category in the file.
	!
	! Index:
	!	.x From Item>Category List
	!	.x Category List>From Item
	!	.x Item>From
	!
	!--

	TO.ITEM$ = EDIT$(UTL_REPORTX::OPTDEF(2%), 132%)

	!++
	! Abstract:FLD03
	!	^*(03) To Item\*
	!	.p
	!	The value entered in the ^*To Item\* field will cause the
	!	Category List Report to end with a selected item by entering
	!	that item in this field. The value of the selection must be
	!	in agreement with the Sort value in field (01).
	!	.p
	!	A blank setting will cause the report to end with the last
	!	Category in the file.
	!
	! Index:
	!	.x To Item>Category List
	!	.x Category List>To Item
	!	.x Item>To
	!
	!--

	WLDCRD$ = EDIT$(UTL_REPORTX::OPTDEF(3%), -1%)

	!++
	! Abstract:FLD04
	!	^*(04) Wildcard\*
	!	.p
	!	The ^*Wildcard\* field in the Category Type report setting screen
	!	provides the means to select designated Categories to be printed in
	!	the report by entering a "wildcard" value in this field.
	!
	! Index:
	!	.x Wildcard>Category List
	!	.x Category List>Wildcard
	!
	!--


	SELECT SORT.BY$
	CASE "C"
		SORT.KEY% = 0%
		ADD.TITLE$ = "BY  CODE"
	CASE "D"
		SORT.KEY% = 1%
		ADD.TITLE$ = "BY  DESCRIPTION"
	END SELECT


300	%INCLUDE "SOURCE:[BI.OPEN]BI_CATEGORY.OPN"

 ReportTitle:
	!
	! Title
	!
	TITLE$(1%) = "CPT  CATEGORY  "+ADD.TITLE$
	TITLE$(2%) = "Billing Insurance System"
	TITLE$(3%) = ""

	!
	! Heading
	!
	TITLE$(4%) = "CPTCat Description"
	TITLE$(5%) = "."

	!
	! Line layouts
	!
	LYT_LINE = "$CPTCategory:004,$CategoryDescr:045"

	%PAGE

17000	!******************************************************************
	! OUTPUT REPORT
	!******************************************************************
	IF FROM.ITEM$ = ""
	THEN
		RESET #BI_CATEGORY.CH%, KEY#SORT.KEY%
	ELSE
		FIND #BI_CATEGORY.CH%, KEY #SORT.KEY% GE FROM.ITEM$,REGARDLESS
	END IF

 GetNextRec:
17020	!
	! Main loop starts here
	!
	GOTO ExitProgram IF UTL_REPORTX::STAT

	!
	! Get next record
	!
	GET #BI_CATEGORY.CH%, REGARDLESS

	!
	! Check current record
	!
	SELECT SORT.BY$

	CASE "C"
		GOTO ExitTotal IF (BI_CATEGORY::CATEGORY > TO.ITEM$) AND &
			TO.ITEM$ <> ""

		GOTO GetNextRec IF WLDCRD$ <> "" AND &
			COMP_STRING(EDIT$(BI_CATEGORY::CATEGORY,-1%), &
			WLDCRD$) = 0%

	CASE "D"
		GOTO ExitTotal IF (BI_CATEGORY::DESCRIPTION > TO.ITEM$) AND &
			TO.ITEM$ <> ""

		GOTO GetNextRec IF WLDCRD$ <> "" AND &
			COMP_STRING(EDIT$(BI_CATEGORY::DESCRIPTION,-1%), &
			WLDCRD$) = 0%

	END SELECT

17300	!
	! Print out one line
	!
	TEXT$ = BI_CATEGORY::CATEGORY + " " + &
		BI_CATEGORY::DESCRIPTION

	CALL OUTP_LINE(LYT_LINE, UTL_REPORTX, TITLE$(), TEXT$, 0%)

17350	!
	! Try for next record
	!
	GOTO GetNextRec

 ExitTotal:
17400	!

 ExitProgram:
	CALL OUTP_FINISH(UTL_REPORTX)

	!
	! Exit to next program or menu
	!
	IF TRM$(UTL_REPORTX::NEXTRUN) = ""
	THEN
		CALL SUBR_3EXITPROGRAM(SCOPE, "", "")
	ELSE
		CALL SUBR_3EXITPROGRAM(SCOPE, "RUN " + UTL_REPORTX::NEXTRUN, "")
	END IF

	%PAGE

 HelpError:
	!******************************************************************
	! Help Message for an error
	!******************************************************************
	CALL HELP_34MESSAGE(SCOPE, NUM1$(ERL) + " " + ERT$(ERR), &
		"E", ERN$, FILENAME$, NUM1$(ERR))
	UTL_REPORTX::STAT = -1%
	GOTO ExitProgram

	%PAGE

19000	!******************************************************************
	! ERROR TRAPPING
	!******************************************************************

	SELECT ERR
	CASE 154%	! Locked record
		SLEEP 5%
		RESUME
	END SELECT

	FILENAME$ = ""
	SELECT ERL

	CASE 300%
		FILENAME$ = "BI_CPTCATEGORY"

	CASE 17000%
		CALL ENTR_3MESSAGE(SCOPE, "Unable to find beginning record!", 0%)
		RESUME ExitProgram

	CASE 17020%	! End of file
		RESUME ExitTotal IF ERR = 11%
		FILENAME$ = "BI_CATEGORY"

	END SELECT

	!
	! Untrapped error
	!
	RESUME HelpError

32767	END

