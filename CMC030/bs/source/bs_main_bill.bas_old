1	%TITLE "Billing for Services Journal"
	%SBTTL "BS_MAIN_BILL"
	%IDENT "V3.6a Calico"

	FUNCTION LONG BS_MAIN_BILL(CDD_WINDOW_CDD SMG_WINDOW, LONG MOPTION, &
		LONG MLOOP, LONG MFLAG, STRING MVALUE)

	!
	! COPYRIGHT (C) 1987, 1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! Abstract:HELP
	!	.p
	!	This program maintains the Billing services journal file
	!
	! Compile:
	!
	!	$ BAS BS_SOURCE:BS_MAIN_BILL/LINE
	!	$ LIB FUNC_LIB:CMCFUN/REP BS_MAIN_BILL
	!	$ DELETE BS_MAIN_BILL.OBJ;*
	!
	! Author:
	!
	!	09/26/89 - Frank F. Starman
	!
	! Modification history:
	!
	!	03/23/93 - Kevin Handy
	!		Clean up (Check)
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	05/22/97 - Kevin Handy
	!		Use integer for #key
	!
	!	08/19/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!
	!	04/08/99 - Kevin Handy
	!		Use BASIC$STARLET for LIB$ routines
	!--
	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	%INCLUDE "LIB$ROUTINES" %FROM %LIBRARY "SYS$LIBRARY:BASIC$STARLET.TLB"

	%INCLUDE "FUNC_INCLUDE:BS_WINDOW.INC"
	%INCLUDE "FUNC_INCLUDE:MAIN_WINDOW.COM"

	%INCLUDE "SOURCE:[CDD.OPEN]CDD_WINDOW.HB"

	%INCLUDE "SOURCE:[BS.OPEN]BS_BILL.HB"
	MAP	(BS_BILL)	BS_BILL_CDD		BS_BILL
	MAP	(BS_BILL_OLD)	BS_BILL_CDD		BS_BILL_OLD
	MAP	(BS_BILL_DEF)	BS_BILL_CDD		BS_BILL_DEF

	%INCLUDE "SOURCE:[BS.OPEN]BS_CLIENT.HB"
	MAP	(BS_CLIENT)	BS_CLIENT_CDD	BS_CLIENT

	%INCLUDE "SOURCE:[BS.OPEN]BS_RATE.HB"
	MAP	(BS_RATE)	BS_RATE_CDD	BS_RATE

	%INCLUDE "SOURCE:[SB.OPEN]SB_SUBACCOUNT.HB"
	MAP	(SB_SUBACCOUNT)	SB_SUBACCOUNT_CDD	SB_SUBACCOUNT

	!
	! Common Areas
	!
	! These areas store information that is re-used between
	! calls to these functions.
	!
	COM (BATCH_BS_BILL) &
		BATCH_NO$	= 6%

	COM (CH_BS_BILL) &
		BS_BILL.CH%, &
		BS_BILL.READONLY%

	!
	! External functions
	!
	EXTERNAL LONG		FUNCTION MAIN_WINDOW
	EXTERNAL REAL		FUNCTION BS_READ_RATE

	!
	! Declare data types
	!
	DECLARE LONG XPOS, YPOS

	%PAGE

	ON ERROR GOTO 29000

	SELECT MOPTION

	!
	! Initialization
	!
	! This option is used to initialize the window structure,
	! set up the default values for add, and open all files
	! necessary that have not already been opened.
	!
	CASE OPT_INIT

		!
		! Define window
		!
		SMG_WINDOW::DESCR = "Billing for Services Journal "+ BATCH_NO$
		SMG_WINDOW::NHELP = "BS_MAIN_BILL"
		SMG_WINDOW::CHAN  = BS_BILL.CH%
		SMG_WINDOW::HSIZE = 78%
		SMG_WINDOW::VSIZE = 18%
		SMG_WINDOW::HVIEW = 78%
		SMG_WINDOW::VVIEW = 18%
		SMG_WINDOW::HPOS  = 2%
		SMG_WINDOW::VPOS  = 2%
		SMG_WINDOW::NITEMS= 7%

		SMG_WINDOW::FLAGS = 0%

		SMG_WINDOW::NKEYS = 1%
		SMG_WINDOW::KNAME(0%) = "Client"
			SMG_WINDOW::KFIELD(0%, 0%) = 2%
			SMG_WINDOW::KFIELD(0%, 1%) = 1%
			SMG_WINDOW::KFIELD(0%, 2%) = 2%

		CALL READ_DEFAULTS(SMG_WINDOW) &
			IF INSTR(1%, " QV", MVALUE) <= 1%

700		!
		! Declare channels
		!
		IF BS_BILL.CH% > 0%
		THEN
			!
			! Already open, set flag to read-only if was
			! that way from last time.
			!
			SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%) &
				IF BS_BILL.READONLY%
			GOTO 790
		END IF

		!
		! Open main file (existing) for modification
		!
750		%INCLUDE "SOURCE:[BS.OPEN]BS_BILL.CRE"
		BS_BILL.READONLY% = 0%
		GOTO 790

760		!
		! If unable to open for modify, try to open with read
		! access only.
		!
		%INCLUDE "SOURCE:[BS.OPEN]BS_BILL.OPN"
		SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%)
		BS_BILL.READONLY% = -1%

		GOTO 790

770		!
		! File not open, so reset channel
		!
		IF FLAGOPEN%
		THEN
			ST% = LIB$FREE_LUN(BS_BILL.CH%)
			BS_BILL.CH% = 0%
		ELSE
			BS_BILL.CH% = -BS_BILL.CH%
		END IF

		EXIT FUNCTION

790		SMG_WINDOW::CHAN  = BS_BILL.CH%
		RESET #BS_BILL.CH%
		GET #BS_BILL.CH%, REGARDLESS

	!
	! Display the background
	!
	! This option is used to display the background information on the
	! screen.  It must first clear any junk on the screen, and then
	! write the background onto it.
	!
20100	CASE OPT_BACKGROUND

		!
		! Main screen
		!
		SMG_STATUS% = SMG$BEGIN_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

		SMG_STATUS% = SMG$ERASE_DISPLAY(SMG_WINDOW::WNUMBER)

			DATA	05,  05, "(01) Client #", &
				06,  05, "(02) Program #", &
				07,  05, "(03) Time UOM", &
				08,  05, "(04) Rate", &
				09,  05, "(05) Length", &
				10,  05, "(06) Amount", &
				11,  05, "(07) Init", &
				0,  0, ""

			RESTORE

		READ XPOS, YPOS, XSTR$
		I%=0%
		WHILE (XPOS <> 0)
			I% = I% + 1%
			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				XSTR$, XPOS, YPOS) &
				IF (SMG_WINDOW::HFLAG(I%) AND 2%)=0%
		READ XPOS, YPOS, XSTR$
		NEXT

		SMG_STATUS% = SMG$END_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

	!
	! Enter/Display/Default
	!
	! This option is used to enter the data from the user, display data,
	! set defaults, and return the data back according to MFLAG.
	!
20200	CASE OPT_ENTRY

		TEMP$ = TRM$(SCOPE::PRG_ITEM)
		TEMP$ = "View starting at" IF TEMP$ = "View "

		SCOPE::PRG_ITEM = "FLD" + FORMAT$(MLOOP, "<0>##")

		SCOPE::SCOPE_EXIT = 0%

 Reenter:	SELECT MLOOP

		CASE 1%
			BS_BILL::CLIENT = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"5;30", TEMP$, &
				BS_BILL::CLIENT, MFLAG, "'E", MVALUE)

			IF (SCOPE::SCOPE_EXIT = SMG$K_TRM_F14)
			THEN
				IF MAIN_WINDOW(BS_MAIN_CLIENT.ID, "V0") = 1%
				THEN
					BS_BILL::CLIENT = BS_CLIENT::CLIENT
				END IF
				GOTO Reenter
			END IF

		CASE 2%
			BS_BILL::PRG = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"6;30", TEMP$, &
				BS_BILL::PRG, MFLAG, "'E", MVALUE)

			IF (SCOPE::SCOPE_EXIT = SMG$K_TRM_F14)
			THEN
				IF MAIN_WINDOW(BS_MAIN_PROGRAM.ID, &
					"V0P") = 1%
				THEN
					BS_BILL::PRG = &
						SB_SUBACCOUNT::SUBACCOUNT
				END IF
				GOTO Reenter
			END IF

		CASE 3%
			BS_BILL::RATEUOM = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"7;30", TEMP$, &
				BS_BILL::RATEUOM, MFLAG, "'E", MVALUE)

		CASE 4%


			IF TEMP$ = "Add"
			THEN
				BS_BILL::RATE = &
					BS_READ_RATE(BS_BILL::PRG, &
						BS_BILL::RATEUOM,"") &
					IF (MFLAG AND 1%) = 0%
			END IF

			BS_BILL::RATE = ENTR_3NUMBER(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"08;31",TEMP$, BS_BILL::RATE, MFLAG, &
				"#,###.##", MVALUE )

		CASE 5%
			BS_BILL::LENGTH = ENTR_3NUMBER(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"09;31",TEMP$, BS_BILL::LENGTH, MFLAG, &
				"#,###.##", MVALUE )

		CASE 6%

			IF TEMP$ = "Add"
			THEN
				BS_BILL::AMOUNT = FUNC_ROUND(BS_BILL::RATE * &
					BS_BILL::LENGTH,2%) &
					IF (MFLAG AND 1%) = 0%
			END IF

			BS_BILL::AMOUNT = ENTR_3NUMBER(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"10;30",TEMP$, BS_BILL::AMOUNT, MFLAG, &
				"##,###.##", MVALUE )

		CASE 7%
			BS_BILL::INITIALS = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"11;30", TEMP$, &
				BS_BILL::INITIALS, MFLAG, "'E", MVALUE)

		END SELECT

		SCOPE::PRG_ITEM = TEMP$

20300	CASE OPT_TESTENTRY

		BS_MAIN_BILL = 0%

		SELECT MLOOP

		CASE 1%
			IF BS_BILL::CLIENT = ""
			THEN
				BS_MAIN_BILL = 1%
			ELSE
			NAME$ = STRING$(40%,63%)
			IF MAIN_WINDOW(BS_MAIN_CLIENT.ID, &
				"Q0"+BS_BILL::CLIENT) <> 1%
			THEN
				CALL ENTR_3MESSAGE(SCOPE, "Input undefined", 0%)
				BS_MAIN_BILL = 1%

			ELSE
				NAME$ = BS_CLIENT::CLIENTNAME
			END IF

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				NAME$,5%,41%, ,SMG$M_BOLD)

			END IF

		CASE 4%


		END SELECT

	CASE OPT_DISPLAY

		IF (SMG_WINDOW::HFLAG(1%) AND 2%)=0%
		THEN
			NAME$ = STRING$(40%,63%)
			NAME$ = BS_CLIENT::CLIENTNAME &
				IF MAIN_WINDOW(BS_MAIN_CLIENT.ID, &
				"Q0" + BS_BILL::CLIENT) = 1%
			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				NAME$,5%,41%, ,SMG$M_BOLD)
		END IF

20500	CASE OPT_SETOLD
		BS_BILL_OLD = BS_BILL

	CASE OPT_RESETOLD
		BS_BILL = BS_BILL_OLD

	CASE OPT_SETDEFAULT
		BS_BILL_DEF = BS_BILL

	CASE OPT_RESETDEFAULT
		BS_BILL = BS_BILL_DEF

	CASE OPT_VIEW
		SELECT MLOOP

		CASE 1%
			MVALUE = "  Client     Program    RateUOM    Amount"

		CASE 2%
			MVALUE = "013,024,032"

		CASE 3%
			MVALUE = BS_BILL::CLIENT + " " + &
				BS_BILL::PRG + " " + &
				BS_BILL::RATEUOM + "      "+ &
				FORMAT$(BS_BILL::AMOUNT,"##,###.##")
		END SELECT

	CASE OPT_FIND
		SELECT MLOOP

		CASE 0%
			FIND #BS_BILL.CH%, KEY#0% GE BS_BILL::CLIENT+ &
				BS_BILL::PRG, &
				REGARDLESS

		END SELECT

	END SELECT

28000	EXIT FUNCTION

29000	!*******************************************************************
	! ERROR TRAP
	!*******************************************************************

	SELECT ERL
	CASE 750%
		RESUME 760 IF ERR = 10%
		BS_MAIN_BILL = ERR
		RESUME 770

	CASE 760%
		BS_MAIN_BILL = ERR
		RESUME 770

	CASE 790%
		RESUME 32767

	CASE 20300%
		RESUME 32767 IF ERR = 155%

	END SELECT

	ON ERROR GO BACK

32767	END FUNCTION
