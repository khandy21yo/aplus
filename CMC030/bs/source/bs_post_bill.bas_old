1	%TITLE "Billing for Services Journal Post"
	%SBTTL "BS_POST_BILL"
	%IDENT "V3.6a Calico"

	!
	! COPYRIGHT (C) 1989 BY
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! ID:BS002
	!
	! Abstract:HELP
	!	.p
	!	This program posts the Billing service journal
	!	into the Billing register file.
	!
	! Compile:
	!
	!	$ BAS BS_SOURCE:BS_POST_BILL
	!	$ LINK/EXE=BS_EXE: BS_POST_BILL, FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE BS_POST_BILL.OBJ;*
	!
	! Author:
	!
	!	09/28/1989 - Frank Starman
	!
	! Modification history:
	!
	!	03/03/92 - Kevin Handy
	!		Changed "CMC$WARNING" to "CMC$_WARNING".
	!
	!	03/32/93 - Kevin Handy
	!		Clean up (Check)
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	09/03/96 - Kevin Handy
	!		Reformat source code.
	!
	!	08/19/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!--
	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include constants and and some functions
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	!
	! Include map statements
	!
	%INCLUDE "SOURCE:[BS.OPEN]BS_BILL.HB"
	MAP	(BS_BILL)		BS_BILL_CDD		BS_BILL

	!
	! CDD Inclusions
	!
	%INCLUDE "SOURCE:[BS.OPEN]BS_REGISTER.HB"
	%INCLUDE "SOURCE:[BS.OPEN]BS_CLIENT.HB"
	%INCLUDE "SOURCE:[SB.OPEN]SB_SUBACCOUNT.HB"
	%INCLUDE "SOURCE:[UTL.OPEN]UTL_REPORTX.HB"

	!
	! Declare internal variables
	!
	DECLARE	BS_REGISTER_CDD		BS_REGISTER
	DECLARE UTL_REPORTX_CDD		UTL_REPORTX
	DECLARE BS_CLIENT_CDD		BS_CLIENT_EXAM
	DECLARE SB_SUBACCOUNT_CDD	SB_SUBACCOUNT_EXAM

	DECLARE LONG	EXIT_STATUS
	DECLARE LONG	INTR_STATUS

	DECLARE STRING	TITLE(10%)
	DECLARE STRING	BATCH_NUMBER
	DECLARE STRING	TEST_PROGRAM
	DECLARE STRING	CLIENT
	DECLARE STRING	POSTDATE
	DECLARE STRING	POSTTIME

	!
	! External functions
	!
	EXTERNAL	LONG	FUNCTION BS_TRAN_POST

	EXTERNAL	LONG	FUNCTION ASSG_POSTBATCH
	EXTERNAL	LONG	FUNCTION BS_EXAM_CLIENT
	EXTERNAL	LONG	FUNCTION SB_EXAM_SUBACCOUNT
	EXTERNAL	LONG	FUNCTION OUTP_UNDEFCODES

	%PAGE

	!
	! Set up error trapping
	!
	ON ERROR GOTO 19000

 Init:	!==============================================================
	! OPEN THE PRINT CONTROL FILE
	!==============================================================

	!
	! Set user defined fields
	!
	CALL OUTP_INITFROMFILE(UTL_REPORTX, 132%)

	BATCH_NO$ = TRM$(UTL_REPORTX::OPTDEF(0%))

	!
	! Title
	!
	TITLE(1%) = "BILLING  JOURNAL  POSTING  PROTOCOL"
	TITLE(2%) = "Billing Services System"
	TITLE(3%) = ""

	!
	! Heading
	!
	TITLE(4%) = "."

300	!
	! Open BS Journal file
	!
	%INCLUDE "SOURCE:[BS.OPEN]BS_BILL.UPD"

	%PAGE

	!******************************************************************
	! Check if process has been interrupted
	!******************************************************************
	!
	! Open up batch control file and check if interrupted
	!
	INTR_STATUS = ASSG_POSTBATCH(OPT_RESTART, BATCH_NUMBER, TITLE(), &
		UTL_REPORTX, "BS_BILL", BATCH_NO$, &
		"", "")

	SELECT INTR_STATUS
	!
	! Success
	!
	CASE CMC$_NORMAL

	!
	! Process was interrupted
	!
	CASE CMC$_WARNING
		GOTO Aborted IF BS_TRAN_POST(OPT_RESTART, &
			BATCH_NUMBER, TITLE(), &
			UTL_REPORTX, "","") <> CMC$_NORMAL

	!
	! Other things going wrong
	!
	CASE ELSE
		GOTO Aborted

	END SELECT

 AssignBatch:
	!******************************************************************
	! Assign batch number and open control files
	!******************************************************************
	!
	! Open up batch control file and get a batch number
	!
	GOTO Aborted IF ASSG_POSTBATCH(OPT_ASSIGN, BATCH_NUMBER, TITLE(), &
		UTL_REPORTX, "BS_BILL", BATCH_NO$, &
		BATCH_NO$, "") <> CMC$_NORMAL

	EXIT_STATUS = BS_TRAN_POST(OPT_CHECK, BATCH_NUMBER, TITLE(), &
		UTL_REPORTX, "",BATCH_NO$)

	SELECT EXIT_STATUS
	!
	! Success
	!
	CASE CMC$_NORMAL

	!
	! Found batch number, go for new one
	!
	CASE CMC$_WARNING
		GOTO AssignBatch

	!
	! Something else went wrong
	!
	CASE ELSE
		GOTO Aborted
	END SELECT

 CreateTrans:
	!******************************************************************
	! Create transmittal
	!******************************************************************
	GOTO Aborted IF ASSG_POSTBATCH(OPT_ADDREC, BATCH_NUMBER, TITLE(), &
					UTL_REPORTX, "", "", "", "") <> CMC$_NORMAL

	POSTDATE = DATE_TODAY
	POSTTIME = TIME_NOW

	!
	! Blank flags
	!
	CLIENT, TEST_PROGRAM = " "

	!
	! Start at the beginning of the Journal
	!
	RESET #BS_BILL.CH%

 NextRec:
	!
	! Get (next) Journal record
	!
1000	GET #BS_BILL.CH%

	!
	! Test client number
	!
	EXIT_STATUS = BS_EXAM_CLIENT(BS_BILL::CLIENT, BS_CLIENT_EXAM)

	SELECT EXIT_STATUS
	CASE CMC$_NORMAL
		! Code found
	CASE CMC$_UNDEFINED
		CLIENT = "*"
	CASE ELSE
		GOTO Aborted
	END SELECT

	!
	! Test program number
	!
	EXIT_STATUS = SB_EXAM_SUBACCOUNT("P",BS_BILL::PRG, SB_SUBACCOUNT_EXAM)

	SELECT EXIT_STATUS
	CASE CMC$_NORMAL
		! Code found
	CASE CMC$_UNDEFINED
		TEST_PROGRAM = "*"
	CASE ELSE
		GOTO Aborted
	END SELECT

	!
	! Generate a BS register record
	!
	BS_REGISTER::CLIENT	= BS_BILL::CLIENT
	BS_REGISTER::PRG	= BS_BILL::PRG
	BS_REGISTER::PERIOD	= BATCH_NO$
	BS_REGISTER::RATEUOM	= BS_BILL::RATEUOM
	BS_REGISTER::INITIALS	= BS_BILL::INITIALS
	BS_REGISTER::LENGTH	= BS_BILL::LENGTH
	BS_REGISTER::AMOUNT	= BS_BILL::AMOUNT
	BS_REGISTER::POSTDATE	= POSTDATE
	BS_REGISTER::POSTTIME	= POSTTIME
	BS_REGISTER::BATCH	= BATCH_NUMBER

	!
	! Put the record in the restaurant transaction file
	!
	GOTO Aborted IF BS_TRAN_POST(OPT_ADDREC, BATCH_NUMBER, TITLE(), &
		UTL_REPORTX, BS_REGISTER,"") <> CMC$_NORMAL

 GoToNext:
	!
	! Was anything undefined?
	!
	IF INSTR(1%, CLIENT + TEST_PROGRAM, "*")
	THEN
		TEXT$ = CLIENT + BS_BILL::CLIENT + " " + &
			TEST_PROGRAM + BS_BILL::PRG + " " + &
			FORMAT$(BS_BILL::AMOUNT, "###,###.##")

		!
		! Keep undefined codes
		!
		GOTO Aborted IF OUTP_UNDEFCODES(OPT_ADDREC,TITLE(),UTL_REPORTX, &
							TEXT$) <> CMC$_NORMAL

		!
		! Blank flags
		!
		CLIENT, TEST_PROGRAM = " "

	END IF

	GOTO 1000

 Confirm:
	!******************************************************************
	! Confirm posting
	!******************************************************************
	EXIT_STATUS = OUTP_UNDEFCODES(OPT_CONFIRM, TITLE(), UTL_REPORTX, "")

	GOTO Aborted IF EXIT_STATUS <> CMC$_NORMAL

	!******************************************************************
	! Posting
	!******************************************************************
	GOTO Interrupt IF BS_TRAN_POST(OPT_POSTFILE, BATCH_NUMBER, TITLE(), &
					UTL_REPORTX, "",BATCH_NO$) <> CMC$_NORMAL

 Complete:
	!******************************************************************
	! Complete process and delete journal
	!******************************************************************
	EXIT_STATUS = ASSG_POSTBATCH(OPT_COMPLETE, BATCH_NUMBER, TITLE(), &
					UTL_REPORTX, "", "", "", "")

1500	!
	! Remove file
	!
	CLOSE BS_BILL.CH%

	KILL BS_BILL.DEV$ + "BS_BILL_" + BATCH_NO$ + ".JRL" &
		FOR I% = 1% TO 10%

 ExitProgram:
	!******************************************************************
	! Exit normally
	!******************************************************************
	!
	! Print undefined code if any
	!
	TEXT$ = " Client      Program        Amount"
	EXIT_STATUS = OUTP_UNDEFCODES(OPT_SUMMARY, TITLE(), UTL_REPORTX, TEXT$)

	CALL OUTP_FINISH(UTL_REPORTX)

	!
	! Exit to next program or menu
	!
	IF TRM$(UTL_REPORTX::NEXTRUN) = ""
	THEN
		CALL SUBR_3EXITPROGRAM(SCOPE, "", "")
	ELSE
		CALL SUBR_3EXITPROGRAM(SCOPE, "RUN " + UTL_REPORTX::NEXTRUN, "")
	END IF

	%PAGE

 Aborted:
	!******************************************************************
	! Abort process
	!******************************************************************
	IF INTR_STATUS <> CMC$_WARNING
	THEN
		EXIT_STATUS = ASSG_POSTBATCH(OPT_ABORT,	BATCH_NUMBER, TITLE(), &
			UTL_REPORTX, "", "", "", "")

		GOTO ExitProgram
	END IF

	%PAGE

 Interrupt:
	!******************************************************************
	! Interrupt process
	!******************************************************************
	EXIT_STATUS = ASSG_POSTBATCH(OPT_INTERRUPT, BATCH_NUMBER, TITLE(), &
					UTL_REPORTX, "", "", "", "")

	GOTO ExitProgram

	%PAGE

 HelpError:
	!******************************************************************
	! Help Message for an error
	!******************************************************************
	CALL HELP_34MESSAGE(SCOPE, NUM1$(ERL) + " " + ERT$(ERR), &
		"E", ERN$, FILENAME$, NUM1$(ERR))

	UTL_REPORTX::STAT = -1%
	GOTO ExitProgram

	%PAGE

19000	!******************************************************************
	! Error trapping
	!******************************************************************
	!
	! Trap errors by error number
	!
	SELECT ERR
	!
	! Locked block
	!
	CASE 154%
		SLEEP 1%
		RESUME
	END SELECT

	!
	! Trap errors by line number
	!
	SELECT ERL
	!
	! Unable to open BS_BILL file
	!
	CASE 300%
		FILENAME$ = "BS_BILL"

	!
	! End of journal file
	!
	CASE 1000%
		RESUME Confirm IF ERR = 11%
		FILENAME$ = "BS_BILL"

	!
	! Kill journal
	!
	CASE 1500%
		RESUME ExitProgram

	END SELECT

	!
	! Trap untrapped errors
	!
	RESUME HelpError

	%PAGE

32767	!******************************************************************
	! End of posting program BS_POST_BILL
	!******************************************************************
	END
