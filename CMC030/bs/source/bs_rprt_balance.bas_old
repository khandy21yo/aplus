1	%TITLE "Balance Service Billing Report"
	%SBTTL "BS_RPRT_BALANCE"
	%IDENT "V3.6a Calico"

	!
	! COPYRIGHT (C) 1986, 1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! ID:BS003
	!
	! Abstract:HELP
	!	.p
	!	This program prints out the Balance service billing report
	!
	! Compile:
	!
	!	$ BAS BS_SOURCE:BS_RPRT_BALANCE/LINE
	!	$ LINK/EXE=BS_EXE: BS_RPRT_BALANCE, FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE BS_RPRT_BALANCE.OBJ;*
	!
	! Author:
	!
	!	09/29/89 - Frank Starman
	!
	! Modification History:
	!
	!	03/24/93 - Kevin Handy
	!		Clean up (Check)
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	09/03/96 - Kevin Handy
	!		Reformat source code.
	!
	!	08/19/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!--
	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_REPORTX.HB"
	DECLARE			UTL_REPORTX_CDD		UTL_REPORTX

	%INCLUDE "SOURCE:[SB.OPEN]SB_SUBACCOUNT.HB"
	MAP	(SB_SUBACCOUNT)	SB_SUBACCOUNT_CDD	SB_SUBACCOUNT

	%INCLUDE "SOURCE:[SB.OPEN]SB_TYPE.HB"
	MAP	(SB_TYPE)	SB_TYPE_CDD	SB_TYPE

	%INCLUDE "SOURCE:[SB.OPEN]SB_CLASS.HB"
	MAP	(SB_CLASS)	SB_CLASS_CDD	SB_CLASS

	%INCLUDE "SOURCE:[BS.OPEN]BS_CLIENT.HB"
	MAP	(BS_CLIENT)	BS_CLIENT_CDD	BS_CLIENT

	%PAGE

	ON ERROR GOTO 19000

 Init:	!
	! Initilize report
	!
	CALL OUTP_INITFROMFILE(UTL_REPORTX, 132%)

	GOTO ExitProgram IF UTL_REPORTX::STAT

	SORT.BY$ = EDIT$(UTL_REPORTX::OPTDEF(0%), -1%)
	FROM.ITEM$ = EDIT$(UTL_REPORTX::OPTDEF(1%), -1%)
	TO.ITEM$ = EDIT$(UTL_REPORTX::OPTDEF(2%), -1%)
	FROM.PERIOD$ = EDIT$(UTL_REPORTX::OPTDEF(5%), -1%)
	TO.PERIOD$ = EDIT$(UTL_REPORTX::OPTDEF(6%), -1%)

	ADD.PERIOD$ = "  "
	ADD.PERIOD$ = "FROM  "+FROM.PERIOD$+"  " IF FROM.PERIOD$<>""
	ADD.PERIOD$ = ADD.PERIOD$+"TO  "+TO.PERIOD$+"  " IF TO.PERIOD$<>""

	SELECT SORT.BY$
	CASE "C"
		SORT.KEY% = 2%
		ADD.TITLE$ = "BY  PROGRAM  CLASS"
	CASE "P"
		SORT.KEY% = 0%
		ADD.TITLE$ = "BY  PROGRAM  NUMBER"
	CASE "T"
		SORT.KEY% = 1%
		ADD.TITLE$ = "BY  PROGRAM  TYPE"
	END SELECT

310	!
	%INCLUDE "SOURCE:[SB.OPEN]SB_SUBACCOUNT.OPN"

320	!
	! Open file
	!
	%INCLUDE "SOURCE:[SB.OPEN]SB_TYPE.OPN"

330	!
	! Open file
	!
	%INCLUDE "SOURCE:[SB.OPEN]SB_CLASS.OPN"

340	!
	! Open file
	!
	%INCLUDE "SOURCE:[BS.OPEN]BS_CLIENT.OPN"

 ReportTitle:
	!
	! Title
	!
	TITLE$(1%) = "SERVICE  BILLING  REGISTER"+ADD.PERIOD$+ADD.TITLE$
	TITLE$(2%) = "Service Billing System"
	TITLE$(3%) = ""

	!
	! Heading
	!
	TITLE$(4%) = "Program    Ty Cls  Client#    Name"+ &
		"                                     "+ &
		"RateUOM   CTDLength  CTDAmount "+ &
		"YtdLength  YtdAmount"

	LYT_LINE$ = "$Program:011,$Ty:014,$Cls:019,$Client#:030," + &
		"$Name:071,$RateUOM:081,VCTDLength:092," + &
		"VCTDAmount:102,VYtdLength:113,VYtdAmount:123"

	TITLE$(5%) = "."

	%PAGE

17000	!******************************************************************
	! OUTPUT REPORT
	!******************************************************************

	FIND #SB_SUBACCOUNT.CH%, KEY#SORT.KEY% GE "P"+FROM.ITEM$, REGARDLESS

 NextSubacct:
17020	GET #SB_SUBACCOUNT.CH%

	GOTO ExitTotal IF SB_SUBACCOUNT::SUBJECT <> "P"

	SELECT SORT.BY$

	CASE "C"
		GOTO ExitTotal IF (SB_SUBACCOUNT::CLASS > TO.ITEM$) AND &
			TO.ITEM$ <> ""

		GOTO NextSubacct IF WLDCRD$ <> "" AND &
			COMP_STRING(EDIT$(SB_SUBACCOUNT::CLASS,-1%), WLDCRD$) = 0%

		IF TEST_CATEGORY$ <> SB_SUBACCOUNT::CLASS AND &
			TEST_CATEGORY$ <>"" AND PRINT.LINE%
		THEN
			CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), " ", 2%)
			PRINT.LINE% = 0%
		END IF

		TEST_CATEGORY$ = SB_SUBACCOUNT::CLASS

	CASE "P"
		GOTO ExitTotal IF (SB_SUBACCOUNT::SUBACCOUNT > TO.ITEM$) AND &
			TO.ITEM$ <> ""

		GOTO NextSubacct IF WLDCRD$ <> "" AND &
			COMP_STRING(EDIT$(SB_SUBACCOUNT::SUBACCOUNT,-1%), WLDCRD$) = 0%

	CASE "T"
		GOTO ExitTotal IF (SB_SUBACCOUNT::TTYPE> TO.ITEM$) AND &
			TO.ITEM$ <> ""
		GOTO NextSubacct IF WLDCRD$ <> "" AND &
			COMP_STRING(EDIT$(SB_SUBACCOUNT::TTYPE,-1%), WLDCRD$) = 0%

		IF TEST_PRODTYPE$ <> SB_SUBACCOUNT::TTYPE AND &
			TEST_PRODTYPE$ <>"" AND PRINT.LINE%
		THEN
			CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), " ", 2%)
			PRINT.LINE% = 0%
		END IF

		TEST_PRODTYPE$ = SB_SUBACCOUNT::TTYPE

	END SELECT

17100	RESET #BS_CLIENT.CH%

17120	GET #BS_CLIENT.CH%, REGARDLESS

	RATEUOM$ = "  "
	!
	! Go for balance
	!
	CALL BS_READ_REGISTER(BS_CLIENT::CLIENT,SB_SUBACCOUNT::SUBACCOUNT, &
			FROM.PERIOD$,TO.PERIOD$,RATEUOM$,AMOUNT(),LENGTH())

	IF AMOUNT(0%)<>0.0 OR AMOUNT(1%)<>0%
	THEN
		TEXT$ = SB_SUBACCOUNT::SUBACCOUNT	+ " " + &
			SB_SUBACCOUNT::TTYPE		+ " " + &
			SB_SUBACCOUNT::CLASS		+ " " + &
			BS_CLIENT::CLIENT		+ " " + &
			LEFT(BS_CLIENT::CLIENTNAME,40%)	+ " " + &
			RATEUOM$			+ "        " + &
			FORMAT$(LENGTH(0%),"##,###.##")	+ " " + &
			FORMAT$(AMOUNT(0%),"###,###.##")+ " " + &
			FORMAT$(LENGTH(1%),"##,###.##")	+ " " + &
			FORMAT$(AMOUNT(1%),"###,###.##")

		CALL OUTP_LINE(LYT_LINE$, UTL_REPORTX, TITLE$(), TEXT$, LIN%)
		PRINT.LINE% = -1%
	END IF

	PREV.TYPE$ = SB_SUBACCOUNT::TTYPE

	GOTO 17120

 ExitTotal:
17400	!
	! Handle end of report
	!

 ExitProgram:
	CALL OUTP_FINISH(UTL_REPORTX)

	!
	! Exit to next program or menu
	!
	IF TRM$(UTL_REPORTX::NEXTRUN) = ""
	THEN
		CALL SUBR_3EXITPROGRAM(SCOPE, "", "")
	ELSE
		CALL SUBR_3EXITPROGRAM(SCOPE, "RUN " + UTL_REPORTX::NEXTRUN, "")
	END IF

	%Page

18000	!
	! Read type
	!
	SB_TYPE::DESCR = &
		STRING$(LEN(SB_TYPE::DESCR), ASCII("?"))
	GET #SB_TYPE.CH%, KEY#0% EQ PREV.TYPE$, REGARDLESS

	RETURN

18100	!
	! Read Class
	!
	SB_CLASS::DESCR = &
		STRING$(LEN(SB_CLASS::DESCR), ASCII("?"))
	GET #SB_CLASS.CH%, KEY#0% EQ SB_SUBACCOUNT::CLASS, REGARDLESS

	RETURN

 HelpError:
	!******************************************************************
	! Help Message for an error
	!******************************************************************
	CALL HELP_34MESSAGE(SCOPE, NUM1$(ERL) + " " + ERT$(ERR), &
		"E", ERN$, FILENAME$, NUM1$(ERR))
	UTL_REPORTX::STAT = -1%
	GOTO ExitProgram

	%Page

19000	!******************************************************************
	! ERROR TRAPPING
	!******************************************************************

	SELECT ERR
	CASE 154%	! Locked record
		SLEEP 5%
		RESUME
	END SELECT

	FILENAME$ = ""
	SELECT ERL

	CASE 310%
		FILENAME$ = "SB_SUBACCOUNT"

	CASE 320%
		RESUME 330 IF ERR = 5%
		FILENAME$ = "SB_TYPE"

	CASE 330%
		RESUME 340 IF ERR = 5%
		FILENAME$ = "SB_CLASS"

	CASE 340%
		FILENAME$ = "BS_CLIENT"

	CASE 17000%
		GOTO ExitProgram IF ERR = 155%
		FILENAME$ = "SB_SUBACCOUNT"

	CASE 17020%
		RESUME ExitTotal IF ERR = 11%
		FILENAME$ = "SB_SUBACCOUNT"

	CASE 17120%
		RESUME NextSubacct IF ERR = 11%
		FILENAME$ = "SB_CLIENT"

	CASE 18000%
		!RESUME 18010 IF ERR = 155% OR ERR = 9%
		FILENAME$ = "SB_TYPE"

	CASE 18100%
		!RESUME 18110 IF ERR = 155% OR ERR = 9%
		FILENAME$ = "SB_CLASS"

	END SELECT

	!
	! Untrapped error
	!
	RESUME HelpError

32767	END
