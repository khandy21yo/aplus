1	%TITLE "Billing Table Maintenance"
	%SBTTL "BT_MAIN_TUITION"
	%IDENT "V3.6a Calico"

	FUNCTION LONG BT_MAIN_TUITION(CDD_WINDOW_CDD SMG_WINDOW, &
		LONG MOPTION, LONG MLOOP, LONG MFLAG, STRING MVALUE)

	!
	! COPYRIGHT (C) 1987,1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! Abstract:HELP
	!	.p
	!	The ^*Maintain Tuition Billing Table\* routine provides for entry and
	!	maintenance.
	!
	! Index:
	!	.x Billing Table Maintenance
	!	.x Maintenance>Billing Table
	!
	! Option:
	!
	!
	! Compile:
	!
	!	$ BAS BT_SOURCE:BT_MAIN_TUITION/LINE
	!	$ LIB FUNC_LIB:CMCFUN/REP BT_MAIN_TUITION
	!	$ DELETE BT_MAIN_TUITION.OBJ;*
	!
	!
	! Author:
	!
	!	05/02/88 - Kevin Handy
	!
	! Modification history:
	!
	!	04/27/88 - Kevin Handy
	!		Modified to allow R/O open of file if R/W open fails.
	!
	!	07/08/88 - Kevin Handy
	!		Changed layout of tuition file to have child
	!		name instead of pointing to the payroll master
	!		file.
	!
	!	02/26/92 - Kevin Handy
	!		Modified to use AR_MAIN_CUSTOM instead of
	!		BT_MAIN_CUSTOM since Frank deleted function but
	!		changed none of the programs that used it.
	!
	!	02/26/92 - Kevin Handy
	!		Modified to use "xx_WINDOW.INC" instead of
	!		hard-coded numbers since Frank didn't change
	!		this program when he changed all of the others.
	!
	!	05/11/92 - Dan Perkins
	!		Use FUNC_TESTENTRY to test input.
	!
	!	03/24/93 - Kevin Handy
	!		Clean up (Check)
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 Calico coding standards
	!
	!	04/20/95 - Kevin Handy
	!		Modified to use AR_MAIN_35CUSTOM instead of
	!		AR_MAIN_CUSTOM.
	!
	!	10/17/96 - Kevin Handy
	!		Reformat source code
	!
	!	08/19/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!--
	%PAGE

	!
	! Set up compiling options
	!
	OPTION SIZE = (REAL GFLOAT, INTEGER LONG)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	%INCLUDE "FUNC_INCLUDE:MAIN_WINDOW.COM"

	%INCLUDE "FUNC_INCLUDE:AR_WINDOW.INC"
	%INCLUDE "FUNC_INCLUDE:GL_WINDOW.INC"

	!
	! CDD inclusions and MAPs
	!
	%INCLUDE "SOURCE:[CDD.OPEN]CDD_WINDOW.HB"

	%INCLUDE "SOURCE:[BT.OPEN]BT_TUITION.HB"
	MAP (BT_TUITION)	BT_TUITION_CDD		BT_TUITION
	MAP (BT_TUITION_OLD)	BT_TUITION_CDD		BT_TUITION_OLD, BT_TUITION2

	%INCLUDE "SOURCE:[AR.OPEN]AR_35CUSTOM.HB"
	MAP (AR_35CUSTOM)	AR_35CUSTOM_CDD		AR_35CUSTOM

	%INCLUDE "SOURCE:[GL.OPEN]GL_CHART.HB"
	MAP (GL_CHART)		GL_CHART_CDD		GL_CHART

	!
	! Common areas
	!
	! These areas store information that is re-used between
	! calls to these functions.
	!
	COM (CH_BT_TUITION) &
		BT_TUITION.CH%, &
		BT_TUITION.READONLY%

	!
	! External functions
	!
	EXTERNAL LONG   FUNCTION MAIN_WINDOW
	EXTERNAL LONG   FUNCTION FUNC_TESTENTRY

	ON ERROR GOTO 29000

	%PAGE

	SELECT MOPTION

	!******************************************************************
	! Initialization
	!
	! This option is used to initialize the window structure,
	! set up the default values for add, and open all files
	! necessary that have not already been opened.
	!******************************************************************
	CASE OPT_INIT
		!
		! Define window
		!
		SMG_WINDOW::DESCR = "Billing Table Maintenance"
		SMG_WINDOW::NHELP = "BT_MAIN_TUITION"
		SMG_WINDOW::HSIZE = 78%
		SMG_WINDOW::VSIZE = 18%
		SMG_WINDOW::HVIEW = 130%
		SMG_WINDOW::VVIEW = 18%
		SMG_WINDOW::HPOS  = 2%
		SMG_WINDOW::VPOS  = 2%
		SMG_WINDOW::NITEMS= 7%
		SMG_WINDOW::FLAGS = 0%

		SMG_WINDOW::NKEYS = 1%
		SMG_WINDOW::KNAME(0%) = "Guardian"
			SMG_WINDOW::KFIELD(0%, 0%) = 3%
			SMG_WINDOW::KFIELD(0%, 1%) = 1%
			SMG_WINDOW::KFIELD(0%, 2%) = 2%
			SMG_WINDOW::KFIELD(0%, 3%) = 3%

		!
		! Load in defaults for chart
		!
		CALL READ_DEFAULTS(SMG_WINDOW) &
			IF INSTR(1%, " QV", MVALUE) <= 1%

700		!
		! Get info required for main file
		!
		IF BT_TUITION.CH% > 0%
		THEN
			!
			! Already open, set flag to read-only if
			! was that way from last time.
			!
			SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%) &
				IF BT_TUITION.READONLY%
			GOTO 790
		END IF

		!
		! Open main file (existing) for modification
		!
750		%INCLUDE "SOURCE:[BT.OPEN]BT_TUITION.CRE"
		BT_TUITION.READONLY% = 0%
		GOTO 790

760		!
		! If unable to open for modify, try to open
		! with read access only.
		!
		%INCLUDE "SOURCE:[BT.OPEN]BT_TUITION.OPN"
		SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%)
		BT_TUITION.READONLY% = -1%

		GOTO 790

770		!
		! File not able to open, so reset channel
		!
		CALL ASSG_FREECHANNEL(BT_TUITION.CH%)

		EXIT FUNCTION

790		SMG_WINDOW::CHAN  = BT_TUITION.CH%

		RESET #BT_TUITION.CH%
		GET #BT_TUITION.CH%, REGARDLESS

20100	!******************************************************************
	! Display the background
	!
	! This option is used to display the background information
	! on the screen.  It must first clear any junk on the screen,
	! and then write the background onto it.
	!******************************************************************
	CASE OPT_BACKGROUND

		SMG_STATUS% = SMG$BEGIN_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

		SMG_STATUS% = SMG$ERASE_DISPLAY(SMG_WINDOW::WNUMBER)

		DATA	2,  1, "(01) Guardian", &
			4,  1, "(02) Client", &
			5,  1, "(03) From Date", &
			6,  1, "(04) To Date", &
			7,  1, "(05) Rate", &
			8,  1, "(06) GL Account", &
			9,  1, "(07) Diaper Rate", &
			0,  0, ""

		RESTORE

		READ XPOS%, YPOS%, XSTR$

		WHILE (XPOS% <> 0)
			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				XSTR$, XPOS%, YPOS%)
			READ XPOS%, YPOS%, XSTR$
		NEXT

		SMG_STATUS% = SMG$END_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

20200	!******************************************************************
	! Enter/Display/Default
	!
	! This option is used to enter the data from the user, display
	! data, set defaults, and return the data back according to
	! MFLAG.
	!******************************************************************
	CASE OPT_ENTRY
		TEMP$, TEMP1$ = TRM$(SCOPE::PRG_ITEM)
		TEMP$ = "View starting at" IF TEMP$ = "View"

		SCOPE::PRG_ITEM = "FLD" + FORMAT$(MLOOP, "<0>##")

		SCOPE::SCOPE_EXIT = 0%

 Eloop:		SELECT MLOOP

		CASE 1%

	!++
	! Abstract:FLD001
	!	^*(01) Guardian\*
	!	.p
	!	The ^*Guardian\* field will accommodate up to ten (10) alphanumeric
	!	characters, providing a field large enough to use Social Security
	!	numbers as guardian numbers if desired. The format is user defined.
	!	.p
	!	This field is a key and must have a value. It cannot be null.
	!	.p
	!	Pressing ^*<List Choices>\* while the cursor is located at this field
	!	will display a list of valid Guardian numbers.
	!
	! Index:
	!	.x Guardian>Billing Table Maintenance
	!	.x Billing Table Maintenance>Guardian
	!
	!--

			BT_TUITION::CUSNUM = ENTR_3STRING(SCOPE, SMG_WINDOW::WNUMBER, &
				"2;25", TEMP$, &
				BT_TUITION::CUSNUM, MFLAG, "'E", MVALUE)

			IF (SCOPE::SCOPE_EXIT = SMG$K_TRM_F14)
			THEN
				IF (MAIN_WINDOW(AR_MAIN_35CUSTOM.ID, "VX") = 1%)
				THEN
					BT_TUITION::CUSNUM = &
						AR_35CUSTOM::CUSNUM
				END IF
				GOTO ELoop
			END IF

		CASE 2%

	!++
	! Abstract:FLD002
	!	^*(02) Client\*
	!	.p
	!	The ^*Client\* field in the Billing Table Maintenance screen provides
	!	the means to enter the client name. This is the client for which
	!	the tuition is being charged. This name must be unique for this
	!	guardian. The client field is forty (40) alphanumeric characters.
	!
	! Index:
	!	.x Client>Billing Table Maintenance
	!	.x Billing Table Maintenance>Client
	!
	!--

			BT_TUITION::CHILD = ENTR_3STRING(SCOPE, SMG_WINDOW::WNUMBER, &
				"4;25", TEMP$, &
				BT_TUITION::CHILD, MFLAG, "'E", MVALUE)

		CASE 3%

	!++
	! Abstract:FLD003
	!	^*(03) From Date\*
	!	.p
	!	The ^*From Date\* indicates the date when the billing
	!	becomes effective for a particular client.
	!	.p
	!	The format for this field is MMDDYY or MMDDYYYY.
	!
	! Index:
	!	.x From Date>Maitain Tuition Billing Table
	!	.x Maintain Tuition Billing Table>From Date
	!	.x Date>From
	!
	!--

			BT_TUITION::FROMDATE = ENTR_3DATE(SCOPE, SMG_WINDOW::WNUMBER, &
				"5;25", TEMP$, &
				BT_TUITION::FROMDATE, MFLAG, "'E", MVALUE)

		CASE 4%

	!++
	! Abstract:FLD004
	!	^*(04) To Date\*
	!	.p
	!	The ^*To Date\* indicates the date when the billing for
	!	a particular client is to be terminated.
	!	.p
	!	The format for this field is MMDDYY or MMDDYYYY.
	!
	! Index:
	!	.x To Date>Maintain Tuition Billing Table
	!	.x Maintain Tuition Billing Table>To Date
	!	.x Date>To
	!
	!--

			BT_TUITION::TODATE = ENTR_3DATE(SCOPE, SMG_WINDOW::WNUMBER, &
				"6;25", TEMP$, &
				BT_TUITION::TODATE, MFLAG, "'E", MVALUE)

		CASE 5%

	!++
	! Abstract:FLD005
	!	^*(05) Rate\*
	!	.p
	!	The ^*Rate\* field provides the means to enter the rate or amount
	!	which is to be charged to a guardian.
	!	.p
	!	The rate can range from .01 to 9999999.99. If no decimal is entered,
	!	the system will automatically insert the decimal point two positions
	!	from the right.
	!
	! Index:
	!	.x Rate>Maintain Tuition Billing Table
	!	.x Maintain Tuition Billing Table>Rate
	!
	!--

			BT_TUITION::RATE = ENTR_3NUMBER(SCOPE, SMG_WINDOW::WNUMBER, &
				"7;25", TEMP$, &
				BT_TUITION::RATE, MFLAG, "###,###.##", MVALUE)

		CASE 6%

	!++
	! Abstract:FLD006
	!	^*(06) Account\*
	!	.p
	!	The ^*Account\* field is used to enter the General Ledger
	!	revenue account number to be credited when the journal is created.
	!	.p
	!	Pressing ^*<List Choices>\* while the cursor is located at this field,
	!	will display a list of valid GL account numbers.
	!
	! Index:
	!	.x Account>Tuition
	!
	!--

			BT_TUITION::ACCOUNT = ENTR_3STRING(SCOPE, SMG_WINDOW::WNUMBER, &
				"8;25", TEMP$, &
				BT_TUITION::ACCOUNT, MFLAG, "'E", MVALUE)

			IF (SCOPE::SCOPE_EXIT = SMG$K_TRM_F14)
			THEN
				IF (MAIN_WINDOW(GL_MAIN_CHART.ID, "VX") = 1%)
				THEN
					BT_TUITION::ACCOUNT = &
						GL_CHART::ACCT
				END IF
				GOTO ELoop
			END IF

		CASE 7%

	!++
	! Abstract:FLD007
	!	^*(07) Diaper Rate\*
	!	.p
	!	The ^*Diaper Rate\* field provides the means to enter the amount charged
	!	for diapers if they are needed.
	!
	! Index:
	!	.x Diaper Rate
	!	.x Rate>Diaper
	!
	!--

			BT_TUITION::DIAPER_RATE = ENTR_3NUMBER(SCOPE, SMG_WINDOW::WNUMBER, &
				"9;25", TEMP$, &
				BT_TUITION::DIAPER_RATE, MFLAG, "###,###.##", MVALUE)

		END SELECT

		SCOPE::PRG_ITEM = TEMP1$

	CASE OPT_AFTEROPT

20300	CASE OPT_TESTENTRY
		BT_MAIN_TUITION = 0%

		SELECT MLOOP

		CASE 1%
			BT_MAIN_TUITION = FUNC_TESTENTRY( SMG_WINDOW, &
				BT_TUITION::CUSNUM, &
				AR_35CUSTOM::CUSNAM, &
				"BT", MLOOP, "PRG", &
				"Guardian", AR_MAIN_35CUSTOM.ID)

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				AR_35CUSTOM::CUSNAM, &
				2%, 40%, , SMG$M_BOLD)

		CASE 6%
			BT_MAIN_TUITION = FUNC_TESTENTRY( SMG_WINDOW, &
				BT_TUITION::ACCOUNT, &
				GL_CHART::DESCR, &
				"BT", MLOOP, "PRG", &
				"Account", GL_MAIN_CHART.ID)

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				GL_CHART::DESCR, &
				8%, 46%, , SMG$M_BOLD)

		END SELECT

	CASE OPT_DISPLAY

		IF MAIN_WINDOW(AR_MAIN_35CUSTOM.ID, "Q0" + BT_TUITION::CUSNUM) <> 1%
		THEN
			AR_35CUSTOM::CUSNAM = "????????????????????"
		END IF

		SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
			AR_35CUSTOM::CUSNAM, &
			2%, 40%, , SMG$M_BOLD)

		IF MAIN_WINDOW(GL_MAIN_CHART.ID, "Q0" + BT_TUITION::ACCOUNT) <> 1%
		THEN
			GL_CHART::DESCR= "????????????????????"
		END IF

		SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
			GL_CHART::DESCR, &
			8%, 46%, , SMG$M_BOLD)

20500	CASE OPT_SETOLD
		BT_TUITION_OLD = BT_TUITION

	CASE OPT_RESETOLD
		BT_TUITION = BT_TUITION_OLD

	CASE OPT_SETDEFAULT
		BT_TUITION2 = BT_TUITION

	CASE OPT_RESETDEFAULT
		BT_TUITION = BT_TUITION2

	CASE OPT_VIEW
		SELECT MLOOP

		CASE 1%

			MVALUE = "  Guardian   Client               " + &
				"From Date  To Date            Rate " + &
				"  GL Account         Diaper Rate"

		CASE 2%

			MVALUE = "013,034,045,056,070,090"

		CASE 3%

			MVALUE = &
				BT_TUITION::CUSNUM + " " + &
				LEFT(BT_TUITION::CHILD, 20%) + " " + &
				PRNT_DATE(BT_TUITION::FROMDATE, 8%) + " " + &
				PRNT_DATE(BT_TUITION::TODATE, 8%) + "    " + &
				FORMAT$(BT_TUITION::RATE, "###,###.##") + "  " + &
				BT_TUITION::ACCOUNT + " " + &
				FORMAT$(BT_TUITION::DIAPER_RATE, "###,###.##")

		END SELECT

	CASE OPT_FIND
		SELECT MLOOP

		CASE 0%
			FIND #BT_TUITION.CH%, &
				KEY #0% GE BT_TUITION::CUSNUM + &
					BT_TUITION::CHILD + &
					BT_TUITION::FROMDATE, &
				REGARDLESS

		END SELECT

	END SELECT

	EXIT FUNCTION

29000	!
	! Error trap
	!
	SELECT ERL
	CASE 750%
		RESUME 760 IF ERR = 10%
		BT_MAIN_TUITION = ERR
		RESUME 770

	CASE 760%
		BT_MAIN_TUITION = ERR
		RESUME 770

	CASE 790%
		RESUME 32767

	CASE 20300%
		RESUME 32767 IF ERR = 155%

	END SELECT

	ON ERROR GO BACK

32767	END FUNCTION
