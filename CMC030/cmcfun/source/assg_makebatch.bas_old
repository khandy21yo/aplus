1	%TITLE "Generate a batch number given a date and a time"
	%SBTTL "ASSG_MAKEBATCH"
	%IDENT "V3.3"

	FUNCTION STRING ASSG_MAKEBATCH(GIVEN_DATE$, GIVEN_TIME$)

	!
	! COPYRIGHT (C) 1994 BY
	! Computer Management Center
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	!
	! Abstract:HELP
	!	.b
	!	.lm +5
	!	This functon will generate a batch number when given
	!	a date and time.
	!	.b
	!	The method used to generate a batch number is to calculate
	!	the number of seconds since the beginning of the system's
	!	date, and then stuff as much of that into a RADIX(32?)
	!	value as possible. The loss of the high order bits causes
	!	the value to cycle every 68 years.
	!	.lm -5
	!
	! Index:
	!
	! Parameters:
	!
	!	GIVEN_DATE$
	!		This is the date to generate the batch number for,
	!		in YYYYMMDD format.
	!
	!	GIVEN_TIME$
	!		This is the time to generate the batch number for,
	!		in HHMMSS format.
	!
	! Environment:
	!
	!	VAX/VMS BASIC V4.4
	!
	! Compile:
	!
	!	$ BAS FUNC_SOURCE:ASSG_MAKEBATCH
	!	$ LIB FUNC_LIB:CMCFUN/REP ASSG_MAKEBATCH
	!	$ DELETE ASSG_MAKEBATCH.OBJ;*
	!
	! Author:
	!
	!	09/28/94 - Kevin Handy
	!		Ripped code out of ASSG_POSTBATCH so there would
	!		only be one source for this code.
	!
	! Modification History:
	!
	!	09/28/94 - Kevin Handy
	!		Modified formula so that is uses (char% ^ 6)
	!		instead of (char% ^ 6 - 1) which is harder
	!		to reverse. This change causes approximately
	!		7 difference in the batch number.
	!--
	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! External functions
	!
	EXTERNAL LONG	FUNCTION DATE_DAYCODE
	EXTERNAL LONG	FUNCTION TIME_CODE

	!
	! Define the RADIX and the characters used to print that RADIX.
	! Note that some characters are missing, because trying to
	! identify them can be hard from a printout, i.e. (0 and O,
	! 1 and I)
	!
	CHARACTER$="23456789ABCDEFGHJKLMNPQRSTUVWXYZ"
	CHAR% = LEN(CHARACTER$)

	!
	! Generate the number of seconds since the beginning of time
	! (according to the date function). We must use floating point
	! math here because the numbers will overflow a 32 bit
	! integer.
	!
	SECONDS = DATE_DAYCODE(GIVEN_DATE$) * 60.0 * 60.0 * 24.0 + &
		TIME_CODE(GIVEN_TIME$)

	!
	! Trim it down to the maximum allowed for RADIX(char%)
	!
	SECONDS = SECONDS - &
		INT(SECONDS / (CHAR% ^ 6.0)) * (CHAR% ^ 6.0)

	!
	! Convert the number to RADIX(char%)
	!
	PRIOR_NUMBER$ = ""
	FOR EX% = 5% TO 0% STEP -1%
		ALPHA% = INT(SECONDS / CHAR% ^ EX%)
		SECONDS = SECONDS - ALPHA% * CHAR% ^ EX%
		PRIOR_NUMBER$ = PRIOR_NUMBER$ + &
			MID(CHARACTER$, ALPHA% + 1%, 1%)
	NEXT EX%

	!
	! Return the result
	!
	ASSG_MAKEBATCH = PRIOR_NUMBER$

	END FUNCTION
