/*	%TITLE "SUBR_SUBMIT -- Submit a File to SYS$BATCH"
 *	%SBTTL "MODULE System"
 *	%IDENT "V3.0"
 *
 *
 * COPYRIGHT (C) 1988 BY
 * Computer Management Center
 * Idaho Falls, Idaho.
 *
 * This software is furnished under a license and may be used and
 * copied only in accordance with terms of such license and with
 * the inclusion of the above copyright notice.  This software or
 * any other copies therof may not be provided or otherwise made
 * available to any other person.  No title to and ownership of
 * the software is hereby transferred.
 *
 * The information in this software is subject to change without
 * notice and should not be construed as a committment by
 * Computer management Center.
 *
 * CMC assumes no responsibility for the use or reliability of
 * its software on equipment which is not supported by CMC.
 *
 *++
 *
 * Abstract:
 *
 *	This function submits a job to be executen on the
 *	batch processor.
 *
 *	Assumes the use of SYS$BATCH.
 *
 * Index:
 *
 * Parameters:
 *
 *	DDATA$ 
 *		The name of the command file to submit.
 *		
 *
 *	STATUS% 
 *		The returned status value and may be:
 *	.table
 *			1% - Normal
 *
 *			?  - JBC errors
 *	.endtable
 *
 * Example:
 *
 *	CALL SUBR_SUBMIT(THEDATA$, STATUS%)
 *
 * Environment:
 *
 *	VAX/VMS BASIC V4.4
 *
 * Compile:
 *
 *	$ CC FUNC_SOURCE:SUBR_SUBMIT/G_FLOAT
 *	$ LIB FUNC_LIB:CMC_3VECTOR/REP SUBR_SUBMIT
 *	$ DELETE SUBR_SUBMIT.OBJ;*
 *
 * Author:
 *
 *	02/23/88 - B. Craig Larsen
 *
 * Modification history:
 *
 *	08/10/88 - Kevin Handy
 *		Modified to submit directly, instead of going
 *		through a detached job.
 *
 *	12/09/88 - Kevin Handy
 *		Finally fixed random crashing by using SYS$SNDJBCW
 *		instead of SYS$SNDJBC.
 *
 *	07/06/89 - Kevin Handy
 *		Modified so function will work in sharable library.
 *--
 *++
 *
 * Variables:
 *
 *	SYS.QUE
 *		String used to handle the spool que.
 *
 *	SYS.FILE
 *		String used to handle the spooler file name.
 *
 *	SYS.FORM
 *		String for spool form.
 *
 *	SYS_STAT
 *		Long variable for status of spool form.
 *
 *	SPOOL(7%)
 *		Array used for queue and form names.
 *
 *	SYS.COPIES
 *		Long variable for spool copies.
 *
 *--
 */

/*
 * Include files
 */
#include <stdio.h>
#include <ctype.h>

#include <descrip>

#include "func_include:sndjbc.h"

/*
 * Declare vars
 */
struct iosb
{
	long	stat;
	long	zero;
};

struct itemlst
{
	short int buflen;
	short int code;
	long	bufadr;
	long	retlenadr;
};


void subr_submit(struct dsc$descriptor *ddata, int *status)
{
	long sys_stat;
	struct itemlst spool[6];
	struct iosb iosstr;

#ifdef DEBUG
	struct dsc$descriptor_s dsc_mesg;
#endif

	char errortext[80];
	int flag;

	/*
	 * Queue name
	 */
	spool[0].code		= SJC$_QUEUE;
	spool[0].bufadr		= "SYS$BATCH";
	spool[0].buflen		= strlen(spool[0].bufadr);
	spool[0].retlenadr	= 0;

	/*
	 * File name
	 */
	spool[1].code		= SJC$_FILE_SPECIFICATION;
	spool[1].buflen		= ddata->dsc$w_length;
	spool[1].bufadr		= ddata->dsc$a_pointer;
	spool[1].retlenadr	= 0;

	/*
	 * Delete the file on completion
	 */
	spool[2].buflen		= 0;
	spool[2].code		= SJC$_DELETE_FILE;
	spool[2].bufadr		= 0;
	spool[2].retlenadr	= 0;

	/*
	 * No log file
	 */
	spool[3].buflen		= 0;
	spool[3].code		= SJC$_NO_LOG_SPECIFICATION;
	spool[3].bufadr		= 0;
	spool[3].retlenadr	= 0;

	/*
	 * End of list
	 */
	spool[4].buflen		= 0;
	spool[4].code		= 0;
	spool[4].bufadr		= 0;
	spool[4].retlenadr	= 0;
	
	iosstr.stat, iosstr.zero = 0;

	sys_stat = sys$sndjbcw(0L, SJC$_ENTER_FILE,
		0L, spool, &iosstr, 0L, 0L, 0L);

#ifdef DEBUG
	if (((sys_stat & 1) == 0) || ((iosstr.stat & 1) == 0))
	{

		sprintf(&errortext, "Error from SYS$SNDJBC = %ld, ios = %ld",
			sys_stat, iosstr.stat);

		dsc_mesg.dsc$w_length = strlen(errortext);
		dsc_mesg.dsc$a_pointer = errortext;
		dsc_mesg.dsc$b_class = DSC$K_CLASS_S;
		dsc_mesg.dsc$b_dtype = DSC$K_DTYPE_T;
		flag = 0;

		entr_message(&scope, &dsc_mesg, &flag);
	}
#endif
	*status = sys_stat;

}
