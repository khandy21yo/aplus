1	%TITLE "Format a Time String into 24-Hour Time."
	%SBTTL "TIME_STORETIME"
	%IDENT "V3.3"

	FUNCTION STRING TIME_STORETIME(XDEFLT$,KIND$)

	!
	! COPYRIGHT (C) 1987 BY
	! Computer Management Center
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	!
	! Abstract:HELP
	!	.p
	!	This function takes a users input, and comes up with
	!	a usable time formatted in HHMMSS(24-hour) format.  It can
	!	handle conditions as the following:
	!	.b
	!	.list 0,"*"
	!	.le
	!	H	AM/PM	H	(24-HOUR)
	!	.le
	!	HH	AM/PM	HH	(24-HOUR)
	!	.le
	!	HHM	AM/PM	HHM	(24-HOUR)
	!	.le
	!	HHMM	AM/PM	HHMM	(24-HOUR)
	!	.le
	!	HHMMS	AM/PM	HHMMS	(24-HOUR)
	!	.le
	!	HHMMSS	AM/PM	HHMMSS	(24-HOUR)
	!	.endlist
	!
	!	Where ':' is any non-numeric character.
	!	Those times that are short of 6 characters will be padded
	!	with '0'(zeros).  It will also handle elapse time up to
	!	99:59:59 hours.  Elapse time may be entered as follows:
	!	.b
	!	.list 0,"*"
	!	.le
	!		HH:MM:SS  if KIND$ = 'H' for hours(up to 995959).
	!	.le
	!		HHMMSS
	!	.le
	!		HHMMS
	!	.le
	!		HHMM
	!	.le
	!		HHM
	!	.le
	!		HH
	!	.le
	!		H
	!	.le
	!		MM:SS     if KIND$ = 'M' for minutes(up to 5959).
	!	.le
	!		MMSS
	!	.le
	!		MMS
	!	.le
	!		MM
	!	.le
	!		M
	!	.le
	!		SS	if KIND$ = 'S' for seconds(up to 59).
	!	.le
	!		S
	!	.endlist
	!
	!		Real time if KIND$ = ''
	!
	! Parameters:
	!
	!	XDEFLT$
	!		The passed time string the user wishes to have formatted.
	!
	!	KIND$
	!		The passed way the user wishes the time to be formatted.
	!
	!		Options are:
	!		.table
	!			'H' for hours(up to 995959).
	!			'M' for minutes(up to 5959).
	!			'S' for seconds(up to 59).
	!		.endtable
	!
	!	This function returns a usable time formatted in
	!	HHMMSS(24-hour) format.
	!
	! Example:
	!
	! Environment:
	!
	!	VAX/VMS BASIC V4.4
	!
	! Compile:
	!
	!	$ BAS FUNC_SOURCE:TIME_STORETIME/LINE
	!	$ LIB FUNC_LIB:CMC_3VECTOR/REP TIME_STORETIME
	!	$ DELETE TIME_STORETIME.OBJ;*
	!
	! Author:
	!
	!	05/27/86 - B. Craig Larsen
	!
	! Modification history:
	!
	!	04/23/87 - Kevin Handy
	!		Modified to handle bad dates better.
	!
	!	04/30/87 - B. Craig Larsen
	!		Modified to handle more bad dates.
	!
	!	12/10/87 - Kevin Handy
	!		Modified to allow dots as well as colons.
	!
	!	06/13/89 - Kevin Handy
	!		Removed ENTR_MESSAGE call so that function
	!		is more independent, and more compatible
	!		with DATE_STOREDATE.
	!
	!	07/06/93 - Kevin Handy
	!		Modified to use VAL%( instead of VAL( for
	!		a timy bit more speed.
	!
	!	07/14/93 - Kevin Handy
	!		Disabled goofiness allowing such things as
	!		"midnight" and "12 midnight".  They are not
	!		allowed by the description above, and are
	!		just confusing.
	!--
	%PAGE

	!++
	!
	! Variables:
	!
	!	HMS$
	!		String that holds the format for the hours, minutes,
	!		and seconds.
	!
	!	TEST$
	!		String used to test for numbers and colons.
	!
	!	NEWT$
	!		String that holds the formatted time value.
	!
	!	GETS$
	!		String that holds the origional time value.
	!
	!	I%
	!		Integer used to chose the correct format for the time.
	!
	!	HR%
	!		Integer that holds the hours value.
	!
	!	AMPM$
	!		String that splits the time to A.M. or P.M.
	!
	!--
	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	ON ERROR GOTO 19000

	!
	! Initial Value
	!
	TIME_STORETIME	= ""
	NEWT$, GETS$	= EDIT$(XDEFLT$, -1%)
	NEWT$ = LEFT(NEWT$, LEN(NEWT$) - 2%) IF INSTR(1%, NEWT$, 'AM')
	NEWT$ = LEFT(NEWT$, LEN(NEWT$) - 2%) IF INSTR(1%, NEWT$, 'PM')
	SELECT NEWT$
 !		CASE	'MIDNIGHT', 'MID', 'MI', '12MI', '12MID', &
 !			'12MIDNIGHT', '1200MI', '1200MID', '120000MI', &
 !			'120000MID', '12:00MI', '12:00MID', '12:00:00MI'
 !
 !			NEWT$	= '240000'

 !		CASE	'NOON', '12M', '1200M', '120000M', '12:00M', '12:00:00M'
		CASE	'12M', '1200M', '120000M', '12:00M', '12:00:00M'
			NEWT$	= '120000'
	END SELECT

	HMS$	= EDIT$(KIND$,-1%)

	!
	! Anything besides numbers and colons is illegal
	!
	TEST$	= XLATE( NEWT$, STRING$(46%, 0%) + ":" + STRING$(11%, 0%) + ":")
	GOTO 10000 IF (LEN(TEST$) > 2%) OR (TEST$ = NEWT$) OR &
		( XLATE(NEWT$, STRING$(46%,0%) + "." + '0'c + "0123456789:") <> NEWT$ )

	!
	! Establish hours, minutes and seconds in that order
	!
	X$	= NEWT$ + ''
	FOR K%= 0% TO 2%
		I% = INSTR(1%, X$, ":")
		I% = INSTR(1%, X$, ".") IF I% = 0%

		SELECT I%
			CASE 1%		! Colon at 1
				ATIME$(K%)	= '00'
				X$		= RIGHT(X$, 2%)

			CASE 2%		! Colon at 2
				ATIME$(K%)	= '0' + LEFT(X$, 1%)
				X$		= RIGHT(X$, 3%)

			CASE 3%		! Colon at 3
				ATIME$(K%)	= LEFT (X$, 2%)
				X$		= RIGHT(X$, 4%)

			CASE ELSE	! No Colon or Colon > 3
				ATIME$(K%) = LEFT$(X$, 2%)
				SELECT LEN( ATIME$( K% ) )
					CASE 0%
						ATIME$(K%) = '00'

					CASE 1%
						ATIME$(K%) = '0' + ATIME$(K%)
				END SELECT
				X$	= RIGHT(X$, 3%)
		END SELECT
	NEXT K%

	NEWT$	= ATIME$(0%) + ATIME$(1%) + ATIME$(2%)

	!
	!	Strip non-numeric and calculate elaspe times
	!
	NEWT$	= '00'   + LEFT$(NEWT$, 4%)	IF HMS$ = 'M'
	NEWT$	= '0000' + LEFT$(NEWT$, 2%)	IF HMS$ = 'S'

	HR%	= VAL%(LEFT(NEWT$,2%))
	IF HR% > 99% OR VAL%(MID(NEWT$,3%,2%)) > 59% &
		OR VAL%(MID(NEWT$,5%,2%)) > 59% OR (HMS$='' AND HR%>24%)
	THEN
		GOTO 10000
	ELSE
		IF HMS$ = ''
		THEN
			AMPM$	= MID(GETS$, INSTR(1%, GETS$, 'M') - 1%,2%)
			HR%	= HR% + 12% IF (AMPM$='PM' AND HR%<12%) &
					OR (AMPM$='AM' AND HR% = 12%)
			HR%	= HR% - 24% IF HR% > 24%
			NEWT$	= LEFT(RIGHT(NUM1$(HR% + 100%),2%) + &
					RIGHT(NEWT$,3%),6%)
		END IF
	END IF

	TIME_STORETIME	= LEFT(NEWT$,6%)

10000	EXIT FUNCTION

19000	!
	! Trap errors
	!
	TIME_STORETIME = ""
	RESUME 10000

32767	END FUNCTION
