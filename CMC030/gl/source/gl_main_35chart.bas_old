1	%TITLE "CHART OF ACCOUNTS MAINTENANCE"
	%SBTTL "GL_MAIN_35CHART"
	%IDENT "V3.6 Calico"

	FUNCTION LONG GL_MAIN_35CHART(CDD_WINDOW_CDD SMG_WINDOW, LONG MOPTION, &
		LONG MLOOP, LONG MFLAG, STRING MVALUE)

	!
	! COPYRIGHT (C) 1987, 1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! ID:1005
	!
	! Abstract:HELP
	!	.b
	!	.lm +5
	!	The ^*Chart of Accounts Maintenance\* routine is used to
	!	enter and maintain the Chart of Accounts.
	!	.b
	!	In addition to account number and account description
	!	information, codes are entered which will accommodate the
	!	desired presentation in the financial statements.
	!	.lm -5
	!
	! Index:
	!	.x Chart of Accounts>Maintenance
	!	.x Maintain>Chart of Accounts
	!
	! Option:
	!
	!
	! Environment:
	!
	!	VAX/VMS V4.4  BASIC V2.3
	!
	! Compile:
	!
	!	$ BAS GL_SOURCE:GL_MAIN_35CHART/LINE
	!	$ LIB FUNC_LIB:CMCFUN/REP GL_MAIN_35CHART
	!	$ DELETE GL_MAIN_35CHART.OBJ;*
	!
	! Author:
	!
	!	06/18/90 - J. Shad Rydalch
	!
	! Modification history:
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	01/26/96 - Kevin Handy
	!		Clean up source.
	!		Change STRING$(...,ASCII(" ")) to "" in several
	!		places.
	!
	!	10/18/96 - Kevin Handy
	!		Clean up (Check)
	!--
	%PAGE

	!
	! Set up compling options
	!
	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	%INCLUDE "FUNC_INCLUDE:MAIN_WINDOW.COM"
	%INCLUDE "FUNC_INCLUDE:GL_WINDOW.INC"
	%INCLUDE "FUNC_INCLUDE:UTL_WINDOW.INC"

	!
	! External functions
	!
	EXTERNAL LONG	FUNCTION FUNC_TESTENTRY
	EXTERNAL LONG	FUNCTION MAIN_WINDOW

	%PAGE

	!
	! CDD inclusions and MAPs
	!
	%INCLUDE %FROM %CDD "CDD$TOP.CDD.CDD_WINDOW"

	%INCLUDE %FROM %CDD "CDD$TOP.GL.GL_35CHART"
	MAP	(GL_35CHART)		GL_35CHART_CDD	GL_35CHART
	MAP	(GL_35CHART_OLD)	GL_35CHART_CDD	GL_35CHART_OLD, &
							GL_35CHART2
	%INCLUDE %FROM %CDD "CDD$TOP.GL.GL_CATEGORY"
	MAP	(GL_CATEGORY)	GL_CATEGORY_CDD	GL_CATEGORY

	%INCLUDE %FROM %CDD "CDD$TOP.UTL.UTL_SYSTEM"
	MAP (UTL_SYSTEM)	UTL_SYSTEM_CDD	UTL_SYSTEM

	!
	! Common areas
	!
	! These areas store information that is re-used between
	! calls to these functions.
	!
	COM (CH_GL_35CHART) &
		GL_35CHART.CH%, &
		GL_35CHART.READONLY%

	COM (TT_GL_35CHART) &
		ACCTITLE$ = 20%, &
		ACCTYPE$(6%) = 20%, &
		SUMTITLE$ = 20%, &
		SUMMARY$(4%) = 20%

	!
	! Set up error trapping
	!
	ON ERROR GOTO 29000

	%PAGE

	SELECT MOPTION

	!***********************************************************
	! Initialization
	!
	! This option is used to initialize the window structure,
	! set up the default values for add, and open all files
	! necessary that have not already been opened.
	!***********************************************************
	CASE OPT_INIT

		!
		! Define window
		!
		SMG_WINDOW::DESCR = "Chart of Accounts Maintenance"
		SMG_WINDOW::NHELP = "GL_MAIN_35CHART"
		SMG_WINDOW::HSIZE = 78%
		SMG_WINDOW::VSIZE = 18%
		SMG_WINDOW::HVIEW = 130%
		SMG_WINDOW::VVIEW = 18%
		SMG_WINDOW::HPOS  = 2%
		SMG_WINDOW::VPOS  = 2%
		SMG_WINDOW::NITEMS= 9%
		SMG_WINDOW::FLAGS = 0%

		SMG_WINDOW::NKEYS = 4%
		SMG_WINDOW::KNAME(0%) = "Account"
			SMG_WINDOW::KFIELD(0%, 0%) = 1%
			SMG_WINDOW::KFIELD(0%, 1%) = 1%
		SMG_WINDOW::KNAME(1%) = "account_Type"
			SMG_WINDOW::KFIELD(1%, 0%) = 1%
			SMG_WINDOW::KFIELD(1%, 1%) = 3%
		SMG_WINDOW::KNAME(2%) = "Category"
			SMG_WINDOW::KFIELD(2%, 0%) = 1%
			SMG_WINDOW::KFIELD(2%, 1%) = 4%
		SMG_WINDOW::KNAME(3%) = "System"
			SMG_WINDOW::KFIELD(3%, 0%) = 1%
			SMG_WINDOW::KFIELD(3%, 1%) = 6%

		!
		! Define account type
		!
		ACCTITLE$ = "Type   Description"
		ACCTYPE$(0%) = "6"
		ACCTYPE$(1%) = "A    Assets"
		ACCTYPE$(2%) = "L    Liability"
		ACCTYPE$(3%) = "O    Owners Equity"
		ACCTYPE$(4%) = "S    Income Summary"
		ACCTYPE$(5%) = "R    Revenue"
		ACCTYPE$(6%) = "E    Expense"

		!
		! Define summary flag
		!
		SUMTITLE$ = "Code   Description"
		SUMMARY$(0%) = "4"
		SUMMARY$(1%) = "1    Full detail"
		SUMMARY$(2%) = "2    By date"
		SUMMARY$(3%) = "3    One line"
		SUMMARY$(4%) = "4    By batch"

		CALL READ_DEFAULTS(SMG_WINDOW) &
			IF INSTR(1%, " QV", MVALUE) <= 1%

700		!
		! Declare channels
		!
		IF GL_35CHART.CH% > 0%
		THEN
			!
			! Already open, set flag to read-only if
			! was that way from last time.
			!
			SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%) &
				IF GL_35CHART.READONLY%
			GOTO 790
		END IF

		!
		! Open main file (existing) for modification
		!
750		%INCLUDE "SOURCE:[GL.OPEN]GL_35CHART.CRE"
		GL_35CHART.READONLY% = 0%
		GOTO 790

760		!
		! If unable to open for modify, try to open
		! with read access only.
		!
		%INCLUDE "SOURCE:[GL.OPEN]GL_35CHART.OPN"
		SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%)
		GL_35CHART.READONLY% = -1%

		GOTO 790

770		!
		! File not able to open, so reset channel
		!
		CALL ASSG_FREECHANNEL(GL_35CHART.CH%)

		GOTO ExitFunction

790		SMG_WINDOW::CHAN  = GL_35CHART.CH%
		RESET #GL_35CHART.CH%
		GET #GL_35CHART.CH%, REGARDLESS

	%PAGE

20100	!
	! Display the background
	!
	CASE OPT_BACKGROUND

		SMG_STATUS% = SMG$BEGIN_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

		SMG_STATUS% = SMG$ERASE_DISPLAY(SMG_WINDOW::WNUMBER)

		DATA	5, 10, "(01) Account", &
			6, 10, "(02) Description", &
			7, 10, "(03) Type", &
			8, 10, "(04) Category", &
			9, 10, "(05) Summary Flag", &
			10, 10, "(06) System", &
			13, 10, "(07) Cash Flow", &
			14, 10, "(08) Work Capital", &
			15, 10, "(09) Bal/inc Code", &
			12, 10, "** Financial Report Codes **", &
			0,  0, ""

		RESTORE

		READ XPOS%, YPOS%, XSTR$
		I%=0%
		WHILE (XPOS% <> 0)
			I% = I% + 1%
			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				XSTR$, XPOS%, YPOS%) IF (SMG_WINDOW::HFLAG(I%) AND 2%)=0%
		READ XPOS%, YPOS%, XSTR$
		NEXT

		SMG_STATUS% = SMG$END_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

	%PAGE

20200	!
	! Enter/Display/Default
	!
	CASE OPT_ENTRY
		TEMP$ = TRM$(SCOPE::PRG_ITEM)
		TEMP$ = "View starting at" IF TEMP$ = "View "

		SCOPE::PRG_ITEM = "FLD" + FORMAT$(MLOOP, "<0>##")

 ReEnter:	SCOPE::SCOPE_EXIT = 0%

		SELECT MLOOP

		CASE 1%
	!++
	! Abstract:FLD001
	!	^*(01) Account\*
	!	.b
	!	.lm +5
	!	The complete descriptive name of this field is General Ledger
	!	Chart of Account Number, though it is sometimes referred to as
	!	General Ledger Number, Account Number or Account.
	!	.b
	!	This field ^&cannot\& be left blank. A value must be typed
	!	when a record is being added. After an account number has been added
	!	and transactions have been posted to the account, this field cannot
	!	be changed.
	!	.lm -5
	!
	! Index:
	!
	!--
			GL_35CHART::ACCOUNT = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, "5;38", TEMP$, &
				GL_35CHART::ACCOUNT, MFLAG, "'E", MVALUE)

		CASE 2%
	!++
	! Abstract:FLD002
	!	^*(02) Description\*
	!	.b
	!	.lm +5
	!	This field is for the ^*Description\* of an account entered in field (01).
	!	.b
	!	A dash or minus sign is used in the description as notification to the
	!	financial report writer. When the consolidation feature is being
	!	used, the description after that point will be truncated. The
	!	reason is to allow the user to key in the department or location
	!	after the dash and not have it appear on the consolidated financial.
	!	.b
	!	Forty spaces are available for the entry.
	!	.lm -5
	!
	! Index:
	!
	!--
			GL_35CHART::DESCR = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, "6;38", TEMP$, &
				GL_35CHART::DESCR, MFLAG, "'E", MVALUE)

		CASE 3%
	!++
	! Abstract:FLD003
	!	^*(03) Type\*
	!	.b
	!	.lm +5
	!	This field is used to enter a code which will define which ^*Type\*
	!	of account is being added. Valid ^*Type\* codes are listed below:
	!	.table 3,25
	!	.te
	!	^*A\* - Assets (Real Account)
	!	.te
	!	^*L\* - Liability (Real Account)
	!	.te
	!	^*O\* - Owners Equity (Real Account)
	!	.te
	!	^*S\* - Income Summary (Real Account)
	!	.te
	!	^*R\* - Revenue (Nominal Account)
	!	.te
	!	^*E\* - Expense (Nominal Account)
	!	.end table
	!	Pressing ^*List Choices\* while the cursor is at this field will
	!	display a list of valid type codes.
	!	.lm -5
	!
	! Index:
	!
	!--
			GL_35CHART::ACCTYPE = ENTR_3STRINGLIST(SCOPE, &
				SMG_WINDOW::WNUMBER, "7;38", TEMP$, &
				GL_35CHART::ACCTYPE, MFLAG, "'", &
				MVALUE, ACCTYPE$(), ACCTITLE$, "005" )

		CASE 4%
	!++
	! Abstract:FLD004
	!	^*(04) Category\*
	!	.b
	!	.lm +5
	!	^*Category\* refers to the area in which an account is classified as to
	!	its type.
	!	.b
	!	.lm -5
	!
	! Index:
	!
	!--
			GL_35CHART::CATEGORY = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, "8;38", TEMP$, &
				GL_35CHART::CATEGORY, MFLAG, "'E", MVALUE)

			IF SCOPE::SCOPE_EXIT = SMG$K_TRM_F14
			THEN
				IF MAIN_WINDOW(GL_MAIN_CATEGORY.ID, "V0") = 1%
				THEN
					GL_35CHART::CATEGORY = GL_CATEGORY::CATEGORY
				END IF
				GOTO ReEnter
			END IF

		CASE 5%
	!++
	! Abstract:FLD005
	!	^*(05) Summary Flag\*
	!	.b
	!	.lm +5
	!	This field is used to control the level of detail to be printed
	!	in the General Ledger report. Valid flags are 1,2,3,4 and are
	!	defined as follows:
	!	.table 3,25
	!	.te
	!	^*1\* - Full Detail
	!	.te
	!	^*2\* - By Date
	!	.te
	!	^*3\* - One Line
	!	.te
	!	^*4\* - By Batch
	!	.end table
	!	Pressing ^*List Choices\* while the cursor is at this field will
	!	display a list of valid Summary Flags.
	!	.lm -5
	!
	! Index:
	!
	!--
			GL_35CHART::SUMMARY = ENTR_3STRINGLIST(SCOPE, &
				SMG_WINDOW::WNUMBER, "9;38", TEMP$, &
				GL_35CHART::SUMMARY, MFLAG, "'", &
				MVALUE, SUMMARY$(), SUMTITLE$, "005" )

		CASE 6%
	!++
	! Abstract:FLD006
	!	^*(06) System\*
	!	.b
	!	.lm +5
	!	^*System\* defines the subsidiary system where the account is being used at
	!	the present time to get the desired information.
	!	.Example
	!	.ee
	!	^*GL\* - General Ledger
	!	.ee
	!	^*AP\* - Accounts Payable
	!	.end example
	!	.lm -5
	!
	! Index:
	!
	!--
			GL_35CHART::SYSTEM = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, "10;38", TEMP$, &
				GL_35CHART::SYSTEM, MFLAG, "'E", MVALUE)

			IF (SCOPE::SCOPE_EXIT = SMG$K_TRM_F14)
			THEN
				IF (MAIN_WINDOW(UTL_MAIN_SYSTEM.ID, "V0  ") = 1%)
				THEN
					GL_35CHART::SYSTEM = UTL_SYSTEM::SYSTEM
				END IF
				GOTO Reenter
			END IF

		CASE 7%
	!++
	! Abstract:FLD007
	!	^*(07) Cash Flow\*
	!	.b
	!	.lm +5
	!	This field is used to define how each account will be presented
	!	in the Cash Flow statement.  It is a secondary key, duplicates
	!	are allowed, and it can have a null value.
	!	.b
	!	Four spaces are available for the entry.
	!	.lm -5
	!
	! Index:
	!
	!--
			GL_35CHART::FLOW = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, "13;38", TEMP$, &
				GL_35CHART::FLOW, MFLAG, "'E", MVALUE)

		CASE 8%
	!++
	! Abstract:FLD008
	!	^*(08) Work Capital\*
	!	.b
	!	.lm +5
	!	The ^*Work Capital\* field is used to define how each account will
	!	be presented in the statement of working capital.  It is a secondary
	!	key, duplicates are allowed, and it can have a null value.
	!	.lm -5
	!
	! Index:
	!
	!--
			GL_35CHART::WORK = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, "14;38", TEMP$, &
				GL_35CHART::WORK, MFLAG, "'E", MVALUE)

		CASE 9%
	!++
	! Abstract:FLD009
	!	.ts 55
	!	^*(09) Bal/inc Code\*
	!	.b
	!	.lm +5
	!	The ^*Bal/inc Code\* field is used to define how each account will
	!	be presented in the financial statements. It is a secondary key,
	!	duplicates are allowed, and it can have a null value.
	!	.b
	!	Ten spaces are available for the entry.
	!	.lm -5
	!
	! Index:
	!
	!--
			GL_35CHART::FINTYPE = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, "15;38", TEMP$, &
				GL_35CHART::FINTYPE, MFLAG, "'E", MVALUE)

		END SELECT

		SCOPE::PRG_ITEM = TEMP$

	%PAGE

20300	!***********************************************************
	! Test values
	!***********************************************************
	CASE OPT_TESTENTRY
		GL_MAIN_35CHART = 0%

		SELECT MLOOP

		CASE 1%
			IF GL_35CHART::ACCOUNT = ""
			THEN
				GL_MAIN_35CHART = 1%
			ELSE
				IF (MVALUE = "ADD")
				THEN
					GET #GL_35CHART.CH%, KEY#0 EQ GL_35CHART::ACCOUNT, &
						REGARDLESS

					GL_MAIN_35CHART = 2%
					CALL ENTR_3MESSAGE(SCOPE, "Record Already Exists", 1%)
				END IF
			END IF

		CASE 4%
			IF GL_35CHART::CATEGORY <> ""
			THEN
				!
				! Is the Category defined?
				!
				GL_MAIN_35CHART = FUNC_TESTENTRY(SMG_WINDOW, &
					GL_35CHART::CATEGORY, &
					GL_CATEGORY::DESCR, &
					"GL", MLOOP, "CATEGORY", &
					"Category", GL_MAIN_CATEGORY.ID)

				SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
					GL_CATEGORY::DESCR, 8%, 43%, , &
					SMG$M_BOLD)

			END IF

		END SELECT

	%PAGE

	CASE OPT_DISPLAY

		IF (SMG_WINDOW::HFLAG(4%) AND 2%)=0%
		THEN
			GL_CATEGORY::DESCR = STRING$(LEN(GL_CATEGORY::DESCR), &
				ASCII("?")) &
				IF MAIN_WINDOW(GL_MAIN_CATEGORY.ID, &
				"Q0"+GL_35CHART::CATEGORY)<>1%

			GL_CATEGORY::DESCR = "" &
				IF EDIT$(GL_35CHART::CATEGORY, -1%) = ""

			!
			! Display name (ALSO IN TESTENTRY)
			!
			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				GL_CATEGORY::DESCR, 8%, 43%, ,SMG$M_BOLD)
		END IF

20500	CASE OPT_SETOLD		! Set GL_35CHART_OLD value
		GL_35CHART_OLD = GL_35CHART

	CASE OPT_RESETOLD	! Restore GL_35CHART_OLD value
		GL_35CHART = GL_35CHART_OLD

	CASE OPT_SETDEFAULT	! Set default value
		GL_35CHART2 = GL_35CHART

	CASE OPT_RESETDEFAULT	! Restore default value
		GL_35CHART = GL_35CHART2

	!***********************************************************
	! View header
	!***********************************************************
	CASE OPT_VIEW
		SELECT MLOOP

		!
		! Title (One line only)
		!
		CASE 1%
			MVALUE = "  Account            Description Cashflow"

		!
		! Positions of lines
		!
		CASE 2%
			MVALUE = "021"

		!
		! Convert current record into text
		!
		CASE 3%
			MVALUE = GL_35CHART::ACCOUNT + " " + &
				GL_35CHART::DESCR

		END SELECT

	%PAGE

	!***********************************************************
	! Find
	!***********************************************************
	CASE OPT_FIND
		SELECT MLOOP

		CASE 0%	! FIND according to Primary Key
			!	(Account number)
			!
			FIND #GL_35CHART.CH%, KEY#0 GE GL_35CHART::ACCOUNT, &
				REGARDLESS

		CASE 1%	! FIND according to First Alternate Key
			!	(Account Type)
			!
			FIND #GL_35CHART.CH%, KEY#1 GE GL_35CHART::ACCTYPE, &
				REGARDLESS

		CASE 2%	! FIND according to Second Alternate Key
			!	(Category)
			!
			FIND #GL_35CHART.CH%, KEY#2 GE GL_35CHART::CATEGORY, &
				REGARDLESS

		CASE 3%	! FIND according to Third Alternate Key
			!	(System & Category)
			!
			FIND #GL_35CHART.CH%, KEY#6 GE GL_35CHART::SYSTEM, &
				REGARDLESS
		END SELECT


	END SELECT

 ExitFunction:
	EXIT FUNCTION

	%PAGE

29000	!***************************************************************
	! Trap errors
	!***************************************************************
	SELECT ERR
	CASE 154%
		SLEEP 1%
		RESUME
	END SELECT

	SELECT ERL
	!
	! Unable to open Read/Write
	!
	CASE 750%
		RESUME 760 IF ERR = 10%
		GL_MAIN_35CHART = ERR
		RESUME 770

	!
	! Unable to open Read/Only
	!
	CASE 760%
		GL_MAIN_35CHART = ERR
		RESUME 770

	!
	! Unable to reset
	!
	CASE 790%
		RESUME 32767

	!
	! Record does not already exist
	!
	CASE 20300%
		RESUME 32767 IF ERR = 155%

	END SELECT

	ON ERROR GO BACK

32767	!***********************************************************
	! End of GL_MAIN_35CHART function
	!***********************************************************
	END FUNCTION
