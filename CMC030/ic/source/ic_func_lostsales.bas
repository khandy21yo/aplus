1	%TITLE "Enter Lost Sales Information"
	%SBTTL "IC_FUNC_LOSTSALES"
	%IDENT "V3.6a Calico"

	FUNCTION LONG IC_FUNC_LOSTSALES(SCOPE_STRUCT SCOPE, &
		PD_PRODUCT_CDD PD_PRODUCT, &
		UTL_LOCATION_CDD UTL_LOCATION, &
		STRING CURPERIOD)

	!
	! COPYRIGHT (C) 1996 BY
	!
	! Software Solutions, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Software Solutions, Inc.
	!
	! Software Solutions, Inc. assumes no responsibility for the use
	! or reliability of its software on equipment which is not
	! supported by Software Solutions, Inc.
	!
	!++
	!
	! Abstract:HELP
	!	.b
	!	.lm +5
	!	Screen to enter lost sales information from a query
	!	screen.
	!	.lm -5
	!
	! Index:
	!
	! Option:
	!
	! Compile:
	!
	!	$ BAS IC_SOURCE:IC_FUNC_LOSTSALES/LINE
	!	$ LIB FUNC_LIB:CMCFUN/REP IC_FUNC_LOSTSALES
	!	$ DELETE IC_FUNC_LOSTSALES.OBJ;*
	!
	! Author:
	!
	!	02/12/96 - Kevin Handy
	!
	! Modification History:
	!
	!	02/21/96 - Kevin Handy
	!		Change input from ###.## to ###. (Lose decimals)
	!
	!	02/28/96 - Kevin Handy
	!		Zero out begin balance when creating a new
	!		IC_35BALANCE record.
	!
	!	06/07/96 - Kevin Handy
	!		Clean up (Check)
	!
	!	08/25/97 - Kevin Handy
	!		Change 'val' to 'val%'
	!
	!	08/19/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!
	!	06/13/2000 - Kevin Handy
	!		Use WHEN ERROR IN
	!--

	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	%INCLUDE "SOURCE:[PD.OPEN]PD_PRODTYPE.HB"
	MAP (PD_PRODTYPE)	PD_PRODTYPE_CDD		PD_PRODTYPE

	%INCLUDE "SOURCE:[PD.OPEN]PD_CATEGORY.HB"
	MAP (PD_CATEGORY)	PD_CATEGORY_CDD		PD_CATEGORY

	%INCLUDE "SOURCE:[IC.OPEN]IC_BINMAP.HB"
	MAP (IC_BINMAP)		IC_BINMAP_CDD		IC_BINMAP

	%INCLUDE "SOURCE:[PC.OPEN]PC_PRCTYPE.HB"
	MAP (PC_PRCTYPE)	PC_PRCTYPE_CDD		PC_PRCTYPE

	%INCLUDE "SOURCE:[IC.OPEN]IC_TRANSACTION.HB"
	MAP (IC_TRANSACTION)	IC_TRANSACTION_CDD	IC_TRANSACTION
	DECLARE IC_TRANSACTION_CDD IC_TRANSACTION_POST

	%INCLUDE "SOURCE:[PD.OPEN]PD_PRODUCT.HB"

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_LOCATION.HB"

	%INCLUDE "SOURCE:[IC.OPEN]IC_35BALANCE.HB"
	MAP (IC_35BALANCE)	IC_35BALANCE_CDD	IC_35BALANCE

	%INCLUDE "SOURCE:[IC.OPEN]IC_35HISTORY.HB"
	MAP (IC_35HISTORY)	IC_35HISTORY_CDD	IC_35HISTORY

	!
	! External functions
	!
	EXTERNAL REAL    FUNCTION PC_READ_COST

	%PAGE

	ON ERROR GOTO 19000

	!
	! Change name for help
	!
	TEMP_PROGRAM$ = SCOPE::PRG_PROGRAM
	TEMP_ITEM$ = SCOPE::PRG_ITEM
	TEMP_IDENT$ = SCOPE::PRG_IDENT

	SCOPE::PRG_PROGRAM = "IC_FUNC_LOSTSALES"
	SCOPE::PRG_ITEM = "HELP"
	SCOPE::PRG_IDENT = "H"

	IC_FUNC_LOSTSALES = 0%

1000	!
	! Create a display window
	!
	SMG_STATUS% = SMG$CREATE_VIRTUAL_DISPLAY &
	( &
		9%, &
		60%, &
		SMG_QUERY%, &
		SMG$M_BORDER &
	)

	!
	! Label the display
	!
	SMG_STATUS% = SMG$LABEL_BORDER(SMG_QUERY%, &
		" Lost Sales Entry ")

	SMG_STATUS% = SMG$PUT_CHARS(SMG_QUERY%, &
		"Product #  " +  PD_PRODUCT::PRODUCT_NUM + " " + &
		PD_PRODUCT::DESCRIPTION, 2%, 2%)
	SMG_STATUS% = SMG$PUT_CHARS(SMG_QUERY%, &
		"Location   " + UTL_LOCATION::LOCATION, 3%, 2%)
	SMG_STATUS% = SMG$PUT_CHARS(SMG_QUERY%, &
		"Period     " + CURPERIOD, 4%, 2%)

 !	SMG_STATUS% = SMG$PUT_CHARS(SMG_QUERY%, "Salesman", 6%, 2%)
	SMG_STATUS% = SMG$PUT_CHARS(SMG_QUERY%, "Lost Sales", 7%, 2%)
 !	SMG_STATUS% = SMG$PUT_CHARS(SMG_QUERY%, "Confirm", 8%, 2%)

	SMG_STATUS% = SMG$PASTE_VIRTUAL_DISPLAY &
	( &
		SMG_QUERY%, &
		SCOPE::SMG_PBID, &
		10%, &
		10% &
	)

	!
	! Default values
	!
	IC_TRANSACTION_POST::PRODUCT		= PD_PRODUCT::PRODUCT_NUM
	IC_TRANSACTION_POST::LOCATION		= UTL_LOCATION::LOCATION
	IC_TRANSACTION_POST::TRANS_DATE		= DATE_TODAY
	IC_TRANSACTION_POST::PRIMARY_REF	= "LS"
	IC_TRANSACTION_POST::CROSS_REF		= ""
	IC_TRANSACTION_POST::SUBACCOUNT		= ""
	IC_TRANSACTION_POST::LOT		= ""
	IC_TRANSACTION_POST::STATIONMAN		= ""
	IC_TRANSACTION_POST::TYPE_A		= "LS"
	IC_TRANSACTION_POST::QUANTITY_A		= 0.0
	IC_TRANSACTION_POST::TYPE_B		= "SO"
	IC_TRANSACTION_POST::QUANTITY_B		= 0.0
	IC_TRANSACTION_POST::TRANSACCT		= ""
	IC_TRANSACTION_POST::POSTDATE		= DATE_TODAY
	IC_TRANSACTION_POST::POSTTIME		= TIME_NOW
	IC_TRANSACTION_POST::BATCH		= "LOSTSA"

	%PAGE

1100	!
	! Get the salesman initials
	!
 !	IC_TRANSACTION_POST::STATIONMAN = &
 !		ENTR_3STRING(SCOPE, SMG_QUERY%, "6;15", &
 !		"Salesman", IC_TRANSACTION_POST::STATIONMAN, 0%, "'E", "")
 !
 !	SELECT SCOPE::SCOPE_EXIT
 !
 !	CASE SMG$K_TRM_CTRLC, SMG$K_TRM_F10, SMG$K_TRM_CTRLZ
 !		GOTO ExitFunction
 !
 !	CASE SMG$K_TRM_UP
 !		GOTO 1100
 !
 !	END SELECT

1200	!
	! Get the lost sales quanity
	!
	IC_TRANSACTION_POST::QUANTITY_A = &
		ENTR_3NUMBER(SCOPE, SMG_QUERY%, "7;15", &
		"Lost Sale", IC_TRANSACTION_POST::QUANTITY_A, 0%, "###,###", "")

	SELECT SCOPE::SCOPE_EXIT

	CASE SMG$K_TRM_CTRLC, SMG$K_TRM_F10, SMG$K_TRM_CTRLZ
		GOTO ExitFunction

	CASE SMG$K_TRM_UP
		GOTO 1100

	END SELECT

1300	!
	! Get the lost sales quanity
	!
 !	CONFIRM$ = &
 !		ENTR_3YESNO(SCOPE, SMG_QUERY%, "8;15", &
 !		"Confirm", "N", 0%, "'E", "")
 !
 !	SELECT SCOPE::SCOPE_EXIT
 !
 !	CASE SMG$K_TRM_CTRLC, SMG$K_TRM_F10, SMG$K_TRM_CTRLZ
 !		GOTO ExitFunction
 !
 !	CASE SMG$K_TRM_UP
 !		GOTO 1200
 !
 !	END SELECT
 !
 !	GOTO ExitFunction IF CONFIRM$ <> "Y"

1900	!
	! Skip out if there is nothing to post
	!
	GOTO ExitFunction IF IC_TRANSACTION_POST::QUANTITY_A = 0.0

2000	!
	!
	IC_TRANSACTION_POST::QUANTITY_B = - IC_TRANSACTION_POST::QUANTITY_A
	IC_TRANSACTION_POST::COST		= &
		FUNC_ROUND(PC_READ_COST(PD_PRODUCT::PRODUCT_NUM, &
		UTL_LOCATION::LOCATION, &
		DATE_TODAY, "") * IC_TRANSACTION_POST::QUANTITY_A, 2%)
	IC_TRANSACTION_POST::PRICE		= 0.0
	CYCLE% = VAL%(RIGHT(CURPERIOD, 5%))

2100	!
	! Open IC transaction file
	!
	YYYYPP$ = CURPERIOD
	WHEN ERROR IN
		%INCLUDE "SOURCE:[IC.OPEN]IC_TRANSACTION.CRE"
	USE
		FILENAME$ = "IC_TRANSACTION"
		CONTINUE HelpError
	END WHEN

2200	!
	! Open balance file
	!
	WHEN ERROR IN
		%INCLUDE "SOURCE:[IC.OPEN]IC_35BALANCE.CRE"
	USE
		FILENAME$ = "IC_35BALANCE"
		CONTINUE HelpError
	END WHEN

2300	!
	! Open History file
	!
	YYYY$ = LEFT(CURPERIOD, 4%)
	WHEN ERROR IN
		%INCLUDE "SOURCE:[IC.OPEN]IC_35HISTORY.CRE"
	USE
		FILENAME$ = "IC_35HISTORY"
		CONTINUE HelpError
	END WHEN

3000	!
	! Add record to transaction file
	!
	IC_TRANSACTION = IC_TRANSACTION_POST
	WHEN ERROR IN
		PUT #IC_TRANSACTION.CH%
	USE
		FILENAME$ = "IC_TRANSACTION"
		CONTINUE HelpError
	END WHEN

3100	!
	! Add record_A to balance file
	!
	WHEN ERROR IN
		GET #IC_35BALANCE.CH%, KEY #0% EQ &
			IC_TRANSACTION_POST::PRODUCT + &
			IC_TRANSACTION_POST::LOCATION + &
			IC_TRANSACTION_POST::TYPE_A
	USE
		IF ERR = 154%	! Locked record
		THEN
			SLEEP 5%
			RETRY
		END IF

		CONTINUE 3150 IF ERR = 155%
		FILENAME$ = "IC_35BALANCE"
		CONTINUE HelpError
	END WHEN

3120	IC_35BALANCE::PBALANCE = IC_35BALANCE::PBALANCE + &
		IC_TRANSACTION_POST::QUANTITY_A

	WHEN ERROR IN
		UPDATE #IC_35BALANCE.CH%
	USE
		FILENAME$ = "IC_35BALANCE"
		CONTINUE HelpError
	END WHEN

	GOTO 3200

3150	IC_35BALANCE::PRODUCT	= IC_TRANSACTION_POST::PRODUCT
	IC_35BALANCE::LOCATION	= IC_TRANSACTION_POST::LOCATION
	IC_35BALANCE::TRANSTYPE	= IC_TRANSACTION_POST::TYPE_A
	IC_35BALANCE::BBALANCE	= 0.0
	IC_35BALANCE::PBALANCE	= IC_TRANSACTION_POST::QUANTITY_A
	IC_35BALANCE::RBALANCE	= 0.0

	WHEN ERROR IN
		PUT #IC_35BALANCE.CH%
	USE
		FILENAME$ = "IC_35BALANCE"
		CONTINUE HelpError
	END WHEN

3200	!
	! Add record_A to history file
	!
	WHEN ERROR IN
		GET #IC_35HISTORY.CH%, KEY #0% EQ &
			IC_TRANSACTION_POST::PRODUCT + &
			IC_TRANSACTION_POST::LOCATION + &
			IC_TRANSACTION_POST::TYPE_A + &
			IC_TRANSACTION_POST::CROSS_REF + &
			IC_TRANSACTION_POST::SUBACCOUNT
	USE
		IF ERR = 154%	! Locked record
		THEN
			SLEEP 5%
			RETRY
		END IF

		CONTINUE 3250 IF ERR = 155%
		FILENAME$ = "IC_35HISTORY"
		CONTINUE HelpError
	END WHEN

3220	IC_35HISTORY::PQUANTITY(CYCLE%) = IC_35HISTORY::PQUANTITY(CYCLE%) + &
		IC_TRANSACTION_POST::QUANTITY_A
	IC_35HISTORY::PRICEAMT(CYCLE%) = IC_35HISTORY::PRICEAMT(CYCLE%) + &
		IC_TRANSACTION_POST::PRICE
	IC_35HISTORY::COSTAMT(CYCLE%) = IC_35HISTORY::COSTAMT(CYCLE%) + &
		IC_TRANSACTION_POST::COST

	WHEN ERROR IN
		UPDATE #IC_35HISTORY.CH%
	USE
		FILENAME$ = "IC_35HISTORY"
		CONTINUE HelpError
	END WHEN

	GOTO 3300

3250	IC_35HISTORY::PRODUCT		= IC_TRANSACTION_POST::PRODUCT
	IC_35HISTORY::LOCATION		= IC_TRANSACTION_POST::LOCATION
	IC_35HISTORY::TRANSTYPE		= IC_TRANSACTION_POST::TYPE_A
	IC_35HISTORY::CROSSREF		= IC_TRANSACTION_POST::CROSS_REF
	IC_35HISTORY::SUBACCT		= IC_TRANSACTION_POST::SUBACCOUNT
	IC_35HISTORY::PQUANTITY(CYCLE%)	= IC_TRANSACTION_POST::QUANTITY_A
	IC_35HISTORY::PRICEAMT(CYCLE%)	= IC_TRANSACTION_POST::PRICE
	IC_35HISTORY::COSTAMT(CYCLE%)	= IC_TRANSACTION_POST::COST

	WHEN ERROR IN
		PUT #IC_35HISTORY.CH%
	USE
		FILENAME$ = "IC_35HISTORY"
		CONTINUE HelpError
	END WHEN

3300	!
	! Add record_B to balance file
	!
	WHEN ERROR IN
		GET #IC_35BALANCE.CH%, KEY #0% EQ &
			IC_TRANSACTION_POST::PRODUCT + &
			IC_TRANSACTION_POST::LOCATION + &
			IC_TRANSACTION_POST::TYPE_B
	USE
		IF ERR = 154%	! Locked record
		THEN
			SLEEP 5%
			RETRY
		END IF

		CONTINUE 3350 IF ERR = 155%
		FILENAME$ = "IC_35BALANCE"
		CONTINUE HelpError
	END WHEN

3320	IC_35BALANCE::PBALANCE = IC_35BALANCE::PBALANCE + &
		IC_TRANSACTION_POST::QUANTITY_B

	WHEN ERROR IN
		UPDATE #IC_35BALANCE.CH%
	USE
		FILENAME$ = "IC_35BALANCE"
		CONTINUE HelpError
	END WHEN

	GOTO 3400

3350	IC_35BALANCE::PRODUCT	= IC_TRANSACTION_POST::PRODUCT
	IC_35BALANCE::LOCATION	= IC_TRANSACTION_POST::LOCATION
	IC_35BALANCE::TRANSTYPE	= IC_TRANSACTION_POST::TYPE_B
	IC_35BALANCE::PBALANCE	= IC_TRANSACTION_POST::QUANTITY_B
	IC_35BALANCE::RBALANCE	= 0.0

	WHEN ERROR IN
		PUT #IC_35BALANCE.CH%
	USE
		FILENAME$ = "IC_35BALANCE"
		CONTINUE HelpError
	END WHEN

3400	!
	! Add record_B to history file
	!
	WHEN ERROR IN
		GET #IC_35HISTORY.CH%, KEY #0% EQ &
			IC_TRANSACTION_POST::PRODUCT + &
			IC_TRANSACTION_POST::LOCATION + &
			IC_TRANSACTION_POST::TYPE_B + &
			IC_TRANSACTION_POST::CROSS_REF + &
			IC_TRANSACTION_POST::SUBACCOUNT
	USE
		IF ERR = 154%	! Locked record
		THEN
			SLEEP 5%
			RETRY
		END IF

		CONTINUE 3450 IF ERR = 155%
		FILENAME$ = "IC_35HISTORY"
		CONTINUE HelpError
	END WHEN

	IC_35HISTORY::PQUANTITY(CYCLE%) = IC_35HISTORY::PQUANTITY(CYCLE%) + &
		IC_TRANSACTION_POST::QUANTITY_B
	IC_35HISTORY::PRICEAMT(CYCLE%) = IC_35HISTORY::PRICEAMT(CYCLE%) + &
		IC_TRANSACTION_POST::PRICE
	IC_35HISTORY::COSTAMT(CYCLE%) = IC_35HISTORY::COSTAMT(CYCLE%) + &
		IC_TRANSACTION_POST::COST

	WHEN ERROR IN
		UPDATE #IC_35HISTORY.CH%
	USE
		FILENAME$ = "IC_35HISTORY"
		CONTINUE HelpError
	END WHEN

	GOTO 3500

3450	IC_35HISTORY::PRODUCT	= IC_TRANSACTION_POST::PRODUCT
	IC_35HISTORY::LOCATION	= IC_TRANSACTION_POST::LOCATION
	IC_35HISTORY::TRANSTYPE	= IC_TRANSACTION_POST::TYPE_B
	IC_35HISTORY::CROSSREF	= IC_TRANSACTION_POST::CROSS_REF
	IC_35HISTORY::SUBACCT	= IC_TRANSACTION_POST::SUBACCOUNT
	IC_35HISTORY::PQUANTITY(CYCLE%)	= IC_TRANSACTION_POST::QUANTITY_B
	IC_35HISTORY::PRICEAMT(CYCLE%)	= IC_TRANSACTION_POST::PRICE
	IC_35HISTORY::COSTAMT(CYCLE%)	= IC_TRANSACTION_POST::COST

	WHEN ERROR IN
		PUT #IC_35HISTORY.CH%
	USE
		FILENAME$ = "IC_35HISTORY"
		CONTINUE HelpError
	END WHEN

3500	!
	! Done posting. now close everything down
	!

 ExitFunction:

	!
	! Close down any open channels
	!
	IF IC_35HISTORY.CH%
	THEN
		CLOSE #IC_35HISTORY.CH%
		CALL ASSG_FREECHANNEL(IC_35HISTORY.CH%)
	END IF

	IF IC_35BALANCE.CH%
	THEN
		CLOSE #IC_35BALANCE.CH%
		CALL ASSG_FREECHANNEL(IC_35BALANCE.CH%)
	END IF

	IF IC_TRANSACTION.CH%
	THEN
		CLOSE #IC_TRANSACTON.CH%
		CALL ASSG_FREECHANNEL(IC_TRANSACTION.CH%)
	END IF

	!
	! Change name for help back to what it once was
	!
	SCOPE::PRG_PROGRAM = TEMP_PROGRAM$
	SCOPE::PRG_ITEM = TEMP_ITEM$
	SCOPE::PRG_IDENT = TEMP_IDENT$

	SMG_STATUS% = SMG$POP_VIRTUAL_DISPLAY(SMG_QUERY%, SCOPE::SMG_PBID)

	GOTO 32767

	%PAGE

 HelpError:
	!******************************************************************
	! Help Message for an error
	!******************************************************************
	CALL HELP_34MESSAGE(SCOPE, NUM1$(ERL) + " " + ERT$(ERR), &
		"E", ERN$, FILENAME$, NUM1$(ERR))
	GOTO ExitFunction

19000	!******************************************************************
	! ERROR TRAPPING
	!******************************************************************

	!
	! Untrapped error
	!
	FILENAME$ = ""
	RESUME HelpError

32767	END FUNCTION
