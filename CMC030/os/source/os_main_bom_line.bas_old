1	%TITLE "Product Structure Maintenance"
	%SBTTL "OS_MAIN_BOM_LINE"
	%IDENT "V3.6a Calico"

	FUNCTION LONG OS_MAIN_BOM_LINE(CDD_WINDOW_CDD SMG_WINDOW, &
		LONG MOPTION, LONG MLOOP, LONG MFLAG, STRING MVALUE)

	!
	! COPYRIGHT (C) 1999 BY
	!
	! Software Solutions, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Software Solutions, Inc.
	!
	! Software Solutions, Inc. assumes no responsibility for the use
	! or reliability of its software on equipment which is not
	! supported by Software Solutions, Inc.
	!
	!++
	! Abstract:HELP
	!	.b
	!	.lm +5
	!	The ^*Structure\* program maintains the Product structure file in the Bill
	!	of Materials System.
	!	.lm -5
	!
	! Index:
	!	.x Product Structure Maintenance
	!	.x Maintenance>Product Structure
	!
	! Option:
	!
	!
	! Compile:
	!
	!	$ BAS OS_SOURCE:OS_MAIN_BOM_LINE/LINE
	!	$ LIB FUNC_LIB:CMCFUN/REP OS_MAIN_BOM_LINE
	!	$ DELETE OS_MAIN_BOM_LINE.OBJ;*
	!
	! Author:
	!
	!	06/03/99 - Kevin Handy
	!
	! Modification history:
	!
	!--

	!
	! Set up compiling options
	!
	OPTION SIZE = (REAL GFLOAT, INTEGER LONG)

	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	%INCLUDE "FUNC_INCLUDE:GL_WINDOW.INC"
	%INCLUDE "FUNC_INCLUDE:PD_WINDOW.INC"
	%INCLUDE "FUNC_INCLUDE:MAIN_WINDOW.COM"

	%INCLUDE "SOURCE:[CDD.OPEN]CDD_WINDOW.HB"

	%INCLUDE "SOURCE:[OS.OPEN]OS_BOM_LINE.HB"
	MAP (OS_BOM_LINE)	OS_BOM_LINE_CDD		OS_BOM_LINE
	MAP (OS_BOM_LINE_OLD)	OS_BOM_LINE_CDD		OS_BOM_LINE_OLD, &
							OS_BOM_LINE2, &
							OS_BOM_LINE3

	%INCLUDE "SOURCE:[PD.OPEN]PD_CATEGORY.HB"
	MAP (PD_CATEGORY)	PD_CATEGORY_CDD		PD_CATEGORY

	%INCLUDE "SOURCE:[PD.OPEN]PD_PRODUCT.HB"
	MAP (PD_PRODUCT)	PD_PRODUCT_CDD		PD_PRODUCT

	%INCLUDE "SOURCE:[GL.OPEN]GL_CHART.HB"
	MAP (GL_CHART)		GL_CHART_CDD		GL_CHART

	!
	! Common Areas
	!
	! These areas store information that is re-used between
	! calls to these functions.
	!
	COM (CH_OS_BOM_LINE) &
		OS_BOM_LINE.CH%, &
		OS_BOM_LINE.READONLY%

	!
	! External functions
	!
	EXTERNAL LONG    FUNCTION MAIN_WINDOW
	EXTERNAL LONG    FUNCTION FUNC_TESTENTRY

	%PAGE

	ON ERROR GOTO 29000

	SELECT MOPTION

	!
	! Initialization
	!
	! This option is used to initialize the window structure,
	! set up the default values for add, and open all files
	! necessary that have not already been opened.
	!
	CASE OPT_INIT

	!******************************************************************
	! Set up information
	!******************************************************************

		!
		! Define window
		!
		SMG_WINDOW::DESCR = "Product Components"
		SMG_WINDOW::CURREC = -2%
		SMG_WINDOW::NHELP = "OS_MAIN_BOM_LINE"
		SMG_WINDOW::HSIZE = 76%
		SMG_WINDOW::VSIZE = 11%
		SMG_WINDOW::HPOS  = 3%
		SMG_WINDOW::VPOS  = 8%
		SMG_WINDOW::FLAGS = 0%
		SMG_WINDOW::NITEMS= 5%

		SMG_WINDOW::NKEYS = 1%
		SMG_WINDOW::KNAME(0%) = "Item"
			SMG_WINDOW::KFIELD(0%, 0%) = 1%
			SMG_WINDOW::KFIELD(0%, 1%) = 1%

		SMG_WINDOW::HVIEW = 76%
		SMG_WINDOW::VVIEW = 11%
		SMG_WINDOW::VVPOS = 8%
		SMG_WINDOW::VHPOS = 3%

		CALL READ_DEFAULTS(SMG_WINDOW) &
			IF INSTR(1%, " QV", MVALUE) <= 1%

		COM (OS_MAIN_BOM_LINE_FRM) FRM$(5%)

700		!
		! Declare channels
		!
		IF OS_BOM_LINE.CH% > 0%
		THEN
			!
			! Already open, set flag to read-only if was
			! that way from last time.
			!
			SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%) &
				IF OS_BOM_LINE.READONLY%
			GOTO 790
		END IF

		!
		! Open main file (existing) for modification
		!
750		%INCLUDE "SOURCE:[OS.OPEN]OS_BOM_LINE.CRE"
		OS_BOM_LINE.READONLY% = 0%
		GOTO 790

760		!
		! If unable to open for modify, try to open with read
		! access only.
		!
		%INCLUDE "SOURCE:[OS.OPEN]OS_BOM_LINE.OPN"
		SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%)
		OS_BOM_LINE.READONLY% = -1%

		GOTO 790

770		!
		! File not open, so reset channel
		!
		CALL ASSG_FREECHANNEL(OS_BOM_LINE.CH%)

		EXIT FUNCTION

790		SMG_WINDOW::CHAN  = OS_BOM_LINE.CH%
		RESET #OS_BOM_LINE.CH%
		GET #OS_BOM_LINE.CH%, REGARDLESS

	!
	! Display the background
	!
	! This option is used to display the background information on the
	! screen.  It must first clear any junk on the screen, and then
	! write the background onto it.
	!
20100	CASE OPT_BACKGROUND

		SMG_STATUS% = SMG$BEGIN_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

		SMG_STATUS% = SMG$ERASE_DISPLAY(SMG_WINDOW::WNUMBER)

		DATA	03,10, "(01) Category", &
			04,10, "(02) Quantity", &
			05,10, "(03) Required", &
			06,10, "(04) Multiple", &
			07,10, "(05) Account", &
			0, 0, ""

		RESTORE

		READ XPOS%, YPOS%, XSTR$
		I% = 0%

		WHILE (XPOS% <> 0)
			I% = I% + 1%
			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				XSTR$, XPOS%, YPOS%) &
				IF (SMG_WINDOW::HFLAG(I%) AND 2%)=0%

			READ XPOS%, YPOS%, XSTR$
		NEXT

		SMG_STATUS% = SMG$END_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

	!
	! Enter/Display/Default
	!
	! This option is used to enter the data from the user, display data,
	! set defaults, and return the data back according to MFLAG.
	!
20200	CASE OPT_ENTRY

		TEMP$, TEMP1$ = TRM$(SCOPE::PRG_ITEM)
		TEMP$ = "View starting at" IF TEMP$ = "View"

		SCOPE::PRG_ITEM = "FLD" + FORMAT$(MLOOP, "<0>##")

 ReEnter:	SCOPE::SCOPE_EXIT = 0%

		SELECT MLOOP

		CASE 1%

	!++
	! Abstract:FLD001
	!	^*(01) Item _#\*
	!	.b
	!	.lm +5
	!	The contents in the ^*Item _#\* field will indicate the sequence
	!	number for components which go into a product. When adding a
	!	component relative to a product, the value in the Item _# field
	!	will automatically increment.  Item _#'s can be changed.
	!	.b
	!	Duplicate item numbers for the same product are not allowed.
	!	.lm -5
	!
	! Index:
	!	.x Item _#
	!
	!--

			OS_BOM_LINE::CATEGORY = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER,"3;26", TEMP$, &
				OS_BOM_LINE::CATEGORY, &
				MFLAG, "'E", MVALUE)


			IF (SCOPE::SCOPE_EXIT = SMG$K_TRM_F14)
			THEN
				IF (MAIN_WINDOW(PD_MAIN_CATEGORY.ID, "VX") = 1%)
				THEN
					OS_BOM_LINE::CATEGORY = &
						PD_CATEGORY::CODE
				END IF
				GOTO Reenter
			END IF

			IF SCOPE::SCOPE_EXIT = SMG$K_TRM_F17
			THEN
				V% = MAIN_WINDOW(PD_MAIN_CATEGORY.ID, "M")
				OS_BOM_LINE::CATEGORY = PD_CATEGORY::CODE
				GOTO ReEnter
			END IF

		CASE 2%

	!++
	! Abstract:FLD002
	!	^*(02) Component\*
	!	.b
	!	.lm +5
	!	The ^*Component\* field is provided to enter a code which
	!	identifies a particular component in a product.
	!	.b
	!	The description of the component as defined in the Product
	!	Description file will automatically appear. If the Component
	!	code is not valid, a message will appear on the screen: ^*Input
	!	undefined, enter anyway <Yes/No>: No.\* The invalid code may be
	!	entered by typing "Y" and pressing ^*<Do>\*.
	!	.b
	!	Pressing ^*<List Choices>\* while the cursor is located at this
	!	field causes a list of valid component numbers to be
	!	displayed.
	!	.lm -5
	!
	! Index:
	!	.x Component>Product Structure Maintenance
	!	.x Product Structure Maintenance>Component
	!
	!--
			OS_BOM_LINE::QUANTITY = ENTR_3NUMBER(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"04;26", TEMP$, &
				OS_BOM_LINE::QUANTITY, MFLAG, "#####.##", &
				MVALUE)

		CASE 3%

	!++
	! Abstract:FLD003
	!	^*(03) Quantity\*
	!	.b
	!	.lm +5
	!	The ^*Quantity\* field is provided to enter the quantity of a
	!	component used in a particular product. The quantity is expressed
	!	in a Unit of Measure which is defined in the Product
	!	Description file.
	!	.lm -5
	!
	! Index:
	!	.x Quantity>Product Structure Maintenance
	!	.x Product Structure Maintenance>Quantity
	!
	!--

			OS_BOM_LINE::REQUIRED = ENTR_3YESNO(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"05;26", TEMP$, &
				OS_BOM_LINE::REQUIRED, MFLAG, &
				"'E", &
				MVALUE)

		CASE 4%

	!++
	! Abstract:FLD004
	!	^*(04) Operation\*
	!	.b
	!	.lm +5
	!	The ^*Operation\* field provides the means to enter the designation
	!	for an operation in reference to a particular product where
	!	the component is first used.
	!	.lm -5
	!
	! Index:
	!	.x Operation>Product Structure Maintenance
	!	.x Product Structure Maintenance>Operation
	!
	!--
			OS_BOM_LINE::MULTIPLE = ENTR_3YESNO(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"06;26", TEMP$, &
				OS_BOM_LINE::MULTIPLE, MFLAG, "'E", &
				MVALUE)

		CASE 5%

	!++
	! Abstract:FLD005
	!	^*(05) Scrap (%)\*
	!	.b
	!	.lm +5
	!	The ^*Scrap (%)\* field provides the means to enter the percentage
	!	of scrap or shrinkage expected for a component.
	!	.lm -5
	!
	! Index:
	!	.x Scrap>Product Structure Maintenance
	!	.x Product Structure Maintenance>Scrap
	!
	!--
			OS_BOM_LINE::ACCOUNT = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"07;29", TEMP$, &
				OS_BOM_LINE::ACCOUNT, MFLAG, &
				"'E", &
				MVALUE)

			IF (SCOPE::SCOPE_EXIT = SMG$K_TRM_F14)
			THEN
				IF (MAIN_WINDOW(GL_MAIN_CHART.ID, "VX  ") = 1%)
				THEN
					OS_BOM_LINE::ACCOUNT = &
						GL_CHART::ACCT
				END IF
				GOTO ReEnter
			END IF

		END SELECT

		SCOPE::PRG_ITEM = TEMP1$

	!
	! Test values
	!
20300	CASE OPT_TESTENTRY

		OS_MAIN_BOM_LINE = 0%

		SELECT MLOOP

		CASE 1%
			IF OS_BOM_LINE::CATEGORY = ""
			THEN
				PD_CATEGORY::DESCRIPTION = ""
			ELSE
				PD_MAIN_PRODUCT = FUNC_TESTENTRY(SMG_WINDOW, &
					OS_BOM_LINE::CATEGORY, &
					PD_CATEGORY::DESCRIPTION, &
					"PD", MLOOP, "PROD", &
					"Product Category", PD_MAIN_CATEGORY.ID)
			END IF

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				PD_CATEGORY::DESCRIPTION, 3%, 50%, , SMG$M_BOLD)

		CASE 5%
			!
			! Is the input defined?
			!
			AR_MAIN_SJ = FUNC_TESTENTRY( SMG_WINDOW, &
				OS_BOM_LINE::ACCOUNT, GL_CHART::DESCR, &
				"OS", MLOOP, "ACCT", &
				"Account number", GL_MAIN_CHART.ID)

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				LEFT(GL_CHART::DESCR, 30%), &
				7%, 50%, , SMG$M_BOLD)

		END SELECT

	CASE OPT_DISPLAY
		!
		! Display description for category
		!
		PD_CATEGORY::DESCRIPTION = STRING$(LEN( &
			PD_CATEGORY::DESCRIPTION), ASCII("?")) &
			IF MAIN_WINDOW(PD_MAIN_CATEGORY.ID, "Q0" + &
				OS_BOM_LINE::CATEGORY) <> 1%

		PD_CATEGORY::DESCRIPTION = "" &
			IF OS_BOM_LINE::CATEGORY = ""

		SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
			PD_CATEGORY::DESCRIPTION, 3%, 50%, , SMG$M_BOLD)

		!
		! Is the input defined?
		!
		IF MAIN_WINDOW(GL_MAIN_CHART.ID, "Q0" + OS_BOM_LINE::ACCOUNT) <> 1%
		THEN
			GL_CHART::DESCR = "????????????????????"
		END IF

		SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
			LEFT(GL_CHART::DESCR,30%), &
			7%, 50%, , SMG$M_BOLD)

	!
	! Set OS_BOM_LINE_OLD value
	!
20500	CASE OPT_SETOLD
		OS_BOM_LINE_OLD = OS_BOM_LINE

	!
	! Restore OS_BOM_LINE_OLD value
	!
	CASE OPT_RESETOLD
		OS_BOM_LINE = OS_BOM_LINE_OLD

	!
	! Set default value
	!
	CASE OPT_SETDEFAULT
		OS_BOM_LINE2 = OS_BOM_LINE

	!
	! Restore default value
	!
	CASE OPT_RESETDEFAULT
		OS_BOM_LINE = OS_BOM_LINE2
		OS_BOM_LINE::PRODUCT = PD_PRODUCT::PRODUCT_NUM

	!
	! View header
	!
	CASE OPT_VIEW
		SELECT MLOOP

		!
		! Title (One line only)
		!
		CASE 1%
			MVALUE = "  Item Component#     Descr" + &
				"                "             + &
				"  Quantity Opr        Scrap"

		!
		! Positions of lines
		!
		CASE 2%
			MVALUE = "007,022,043,054,063"

		!
		! Convert current record into text
		!
		CASE 3%
			MVALUE = OS_BOM_LINE::CATEGORY + " " + &
				FORMAT$(OS_BOM_LINE::QUANTITY, "#####.## ") + &
				OS_BOM_LINE::REQUIRED + " " + &
				OS_BOM_LINE::MULTIPLE + " " + &
				OS_BOM_LINE::ACCOUNT
		END SELECT

	!
	! Find
	!
	CASE OPT_FIND

		SELECT MLOOP

		CASE 0%
			FIND #SMG_WINDOW::CHAN, &
				KEY#0% GE OS_BOM_LINE::PRODUCT + &
				OS_BOM_LINE::CATEGORY, &
				REGARDLESS
		END SELECT

	CASE OPT_SUBWIND

		SELECT MLOOP

		!
		! Find first record (if there is any)
		!
		CASE 1%

			!
			! Set init value
			!
			SMG_WINDOW::CURREC = -1%

			!
27110			!
			! Search for first record
			!
			FIND #SMG_WINDOW::CHAN, &
				KEY#0% EQ PD_PRODUCT::PRODUCT_NUM, &
				REGARDLESS

			!
			! Get a record
			!
			GET #SMG_WINDOW::CHAN
			SMG_WINDOW::CURREC = 0%

		!
		! Find starting record (if there is any)
		!
		CASE 2%
			!
			! Set init value
			!
			SMG_WINDOW::CURREC = -1%

27115			!
			! Search for starting record
			!
			SELECT MFLAG

			CASE 0%
				FIND #SMG_WINDOW::CHAN, &
					KEY #0% GE PD_PRODUCT::PRODUCT_NUM + &
					OS_BOM_LINE::CATEGORY, REGARDLESS

			END SELECT

			!
			! Get a record
			!
			SMG_WINDOW::CURREC = 0%

		!
		! Check if still right key
		!
		CASE 3%
			SMG_WINDOW::CURREC = -1%
			IF OS_BOM_LINE::PRODUCT = PD_PRODUCT::PRODUCT_NUM
			THEN
				SMG_WINDOW::CURREC = 0%
			END IF

		!
		! Set the new key
		!
		CASE 6%
			OS_BOM_LINE::PRODUCT = PD_PRODUCT::PRODUCT_NUM

		END SELECT

	END SELECT

28000	EXIT FUNCTION

29000	!****************************************************************
	! Trap errors
	!****************************************************************
	SELECT ERL

	!
	! Unable to open Read/Write
	!
	CASE 750%
		RESUME 760 IF ERR = 10%
		OS_MAIN_BOM_LINE = ERR
		RESUME 770

	!
	! Unable to open Read/Only
	!
	CASE 760%
		OS_MAIN_BOM_LINE = ERR
		RESUME 770

	!
	! Unable to reset
	!
	CASE 790%
		RESUME 32767

	!
	! Record does not already exist
	!
	CASE 20300%
		RESUME 32767 IF ERR = 155%

	!
	! Error while searching for the first record
	!
	CASE 27110%
		RESUME 28000

	!
	! Can't find record
	!
	CASE 27115%
		RESUME 28000

	END SELECT

	ON ERROR GO BACK

32767	END FUNCTION
