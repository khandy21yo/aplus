1	%TITLE "PW Journal Report"
	%SBTTL "PW_RPRT_PW"
	%IDENT "V3.6a Calico"

	!
	! COPYRIGHT (C) 2000 BY
	!
	! Software Solutions, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Software Solutions, Inc.
	!
	! Software Solutions, Inc. assumes no responsibility for the use
	! or reliability of its software on equipment which is not
	! supported by Software Solutions, Inc.
	!
	!++
	! ID:AR001
	!
	! Abstract:HELP
	!	.b
	!	.lm +5
	!	The ^*Print Sales Journal\* routine will provide a report
	!	containing the following information:
	!	.table 3,25
	!	.te
	!	Invoice _#	Customer
	!	.te
	!	Type	Date
	!	.te
	!	Receipt _#	Check _#
	!	.te
	!	Deposit _#	Account _#
	!	.te
	!	Sub-Acct _#	Description
	!	.te
	!	Amount	Gross Margin
	!	.end table
	!	.lm -5
	!
	! Index:
	!	.x Print>Sales Journal
	!	.x Sales Journal>Report
	!	.x Report>Sales Journal
	!
	! Option:
	!
	!
	! Compile:
	!
	!	$ BAS PW_SOURCE:PW_RPRT_PW.BAS/LINE
	!	$ LINK/EXE=PW_EXE: PW_RPRT_PW, FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE PW_RPRT_PW.OBJ;*
	!
	! Author:
	!
	!	02/26/2000 - Kevin Handy
	!
	! Modification history:
	!
	!--
	%PAGE

	!
	! Set up compiling options
	!
	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	!
	! CDD inclusions and related memory allocations
	!
	%INCLUDE "SOURCE:[AR.OPEN]AR_35CUSTOM.HB"
	MAP (AR_35CUSTOM)	AR_35CUSTOM_CDD		AR_35CUSTOM

	%INCLUDE "SOURCE:[PW.OPEN]PW_JH.HB"
	MAP (PW_JH)		PW_JH_CDD		PW_JH

	%INCLUDE "SOURCE:[PW.OPEN]PW_JL.HB"
	MAP (PW_JL)		PW_JL_CDD		PW_JL

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_REPORTX.HB"
	DECLARE			UTL_REPORTX_CDD		UTL_REPORTX

	%INCLUDE "SOURCE:[AP.OPEN]AP_VENDOR.HB"
	MAP (AP_VENDOR)		AP_VENDOR_CDD		AP_VENDOR

	!
	! External functions
	!

	%PAGE

	!
	! Set up error trapping
	!
	ON ERROR GOTO 19000

 Init:	!
	! Initilize report
	!
	CALL OUTP_INITFROMFILE(UTL_REPORTX, 132%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	BATCH_NO$ = EDIT$(UTL_REPORTX::OPTDEF(0%), 132%)

	!++
	! Abstract:FLD01
	!	^*(01) Batch to Print\*
	!	.b
	!	.lm +5
	!	The ^*Batch to Print\* field refers to a particular batch number
	!	which is to be printed or displayed.
	!	.b
	!	Only one batch at a time may be printed or displayed.
	!	.b
	!	An entry is required in this field.
	!	.lm -5
	!
	! Index:
	!	.x Batch to Print>Print Sales Journal
	!	.x Print Sales Journal>Batch to Print
	!
	!--

	FROM.ITEM$ = EDIT$(UTL_REPORTX::OPTDEF(1%), 132%)

	!++
	! Abstract:FLD02
	!	^*(02) From Invoice\*
	!	.b
	!	.lm +5
	!	The value entered in the ^*From Invoice\* field causes printing
	!	or displaying of the report to begin with a specified invoice number.
	!	.b
	!	A blank will cause the report to start with the first invoice
	!	number in the file.
	!	.lm -5
	!
	! Index:
	!	.x From Invoice>Print Sales Journal
	!	.x Print Sales Journal>From Invoice
	!
	!--

	TO.ITEM$ = EDIT$(UTL_REPORTX::OPTDEF(2%), 132%)

	!++
	! Abstract:FLD03
	!	^*(02) To Invoice\*
	!	.b
	!	.lm +5
	!	The value entered in the ^*To Invoice\* field causes printing
	!	or displaying of the report to end with a specified invoice number.
	!	.b
	!	A blank will cause the report to end with the last invoice
	!	number in the file.
	!	.lm -5
	!
	! Index:
	!	.x To Invoice>Print Sales Journal
	!	.x Print Sales Journal>To Invoice
	!
	!--


300	!
	WHEN ERROR IN
		%INCLUDE "SOURCE:[PW.OPEN]PW_JH.OPN"
	USE
		FILENAME$ = "PW_JH"
		CONTINUE HelpError
	END WHEN

310	!
	! Open PW_JL file
	!
	WHEN ERROR IN
		%INCLUDE "SOURCE:[PW.OPEN]PW_JL.OPN"
	USE
		FILENAME$ = "PW_JL"
		CONTINUE HelpError
	END WHEN

330	!
	! Open Customer file
	!
	WHEN ERROR IN
		%INCLUDE "SOURCE:[AR.OPEN]AR_35CUSTOM.OPN"
	USE
		FILENAME$ = "AR_35CUSTOM"
		CONTINUE HelpError
	END WHEN

340	%INCLUDE "SOURCE:[AP.OPEN]AP_VENDOR.OPN"

 ReportTitle:
	!
	! Title
	!
	TITLE$(1%) = "PW Journal File List"
	TITLE$(2%) = "List of Sales - Batch #" + BATCH_NO$
	TITLE$(3%) = ""


	TITLE$(4%) = "Ordnum  Invnum   Invdate   Orddate   Customer "+ &
		SPACE$(19%) + "PO #     Sold by  Carrier         Terms     FOB"
	TITLE$(5%) = "."

	%PAGE

17000	!******************************************************************
	! OUTPUT REPORT
	!******************************************************************

	WHEN ERROR IN
		IF FROM.ITEM$ = ""
		THEN
			RESET #PW_JH.CH%
		ELSE
			FIND #PW_JH.CH%, KEY #0% GE FROM.ITEM$, REGARDLESS
		END IF
	USE
		CONTINUE ExitTotal
	END WHEN

	!
	! Declare some variables
	!
	GROSS.TOTAL = 0.0
	INVOICE.TOTAL = 0.0
	DIST.TOTAL = 0.0

	SALE.DIST = 0.0
	CASH.DIST = 0.0
	DEBIT.DIST = 0.0
	SERV.DIST = 0.0
	CREDIT.DIST = 0.0

 GetNextRec:
17020	!
	! Main loop starts here
	!
	GOTO ExitProgram IF UTL_REPORTX::STAT

	!
	! Get next record
	!
	WHEN ERROR IN
		GET #PW_JH.CH%, REGARDLESS
	USE
		CONTINUE ExitTotal
	END WHEN

	!
	! Check current record
	!
	GOTO ExitTotal IF (PW_JH::INVNUM > TO.ITEM$) AND TO.ITEM$ <> ""

17100	!
	! Look up customer name
	!
	WHEN ERROR IN
		GET #AR_35CUSTOM.CH%, KEY #0% GE PW_JH::SOLDTO, REGARDLESS
	USE
		AR_35CUSTOM::CUSNAM = STRING$(LEN(AR_35CUSTOM::CUSNAM), 63%)
		CONTINUE 17120 IF ERR = 155%
		FILENAME$ = "AR_35CUSTOM"
		CONTINUE HelpError
	END WHEN

17120	!
	! Print the Sales Journal line
	!
	TEXT$ = PW_JH::ORDNUM + " " + &
		PW_JH::INVNUM + " " + &
		PRNT_DATE(PW_JH::INVDAT, 6%) + " " + &
		PRNT_DATE(PW_JH::SHPDAT, 6%) + " " + &
		PW_JH::SOLDTO + " " + &
		LEFT(AR_35CUSTOM::CUSNAM, 20%) + " " + &
		PW_JH::CUSPO + " " + &
		PW_JH::SOLDBY + " " + &
		PW_JH::CARNAM + " " + &
		PW_JH::TERMS + " " + &
		PW_JH::FOBFLG

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 4%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	LAST_WINDOW$ = ""

	!
	! Print out line items
	!
	GOSUB Print_Lines
	GOTO ExitProgram IF UTL_REPORTX::STAT

17200	!
	! Try for next record
	!
	GOTO GetNextRec

 ExitTotal:
	!
	! Handle end of report
	!
	%PAGE

 ExitProgram:
	CALL OUTP_FINISH(UTL_REPORTX)

	!
	! Exit to next program or menu
	!
	IF TRM$(UTL_REPORTX::NEXTRUN) = ""
	THEN
		CALL SUBR_3EXITPROGRAM(SCOPE, "", "")
	ELSE
		CALL SUBR_3EXITPROGRAM(SCOPE, "RUN " + UTL_REPORTX::NEXTRUN, "")
	END IF

	%PAGE

 Print_Lines:
17740	!****************************************************************
	!*  Subroutine for printing out Line Items			*
	!****************************************************************
	!
	WHEN ERROR IN
		FIND #PW_JL.CH%, KEY #0% GE PW_JH::ORDNUM, REGARDLESS
	USE
		CONTINUE LastLine
	END WHEN

 Get_Next_Line:
17750	!
	! Loop starts here
	!
	GOTO LastLine IF UTL_REPORTX::STAT

	!
	! Get next line item
	!
	WHEN ERROR IN
		GET #PW_JL.CH%, REGARDLESS
	USE
		CONTINUE LastLine
	END WHEN

	!
	! Check current line item
	!
	GOTO LastLine IF PW_JL::ORDNUM <> PW_JH::ORDNUM

	SELECT PW_JL::WINDOW
	CASE "1"
		IF LAST_WINDOW$ <> PW_JL::WINDOW
		THEN
			TEXT$ = '  *Payables* Type  Vendor      Name     ' + &
				'                Itm                   Amount'

			CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
			GOTO LastLine IF UTL_REPORTX::STAT
		END IF

		WHEN ERROR IN
			GET #AP_VENDOR.CH%, &
				KEY #0% EQ PW_JL::VENNUM, &
				REGARDLESS
		USE
			AP_VENDOR::VENNAM = "?????????????????????????"
		END WHEN

		!
		! Print the line item line
		!
		TEXT$ = "    " + &
			PW_JL::JLINE + "     " + &
			PW_JL::PRTYPE + "    " + &
			PW_JL::VENNUM + " " + &
			LEFT(AP_VENDOR::VENNAM, 25%) + " " +  &
			PW_JL::PRONUM + " "

		IF PW_JL::EXT <> 0.0
		THEN
			TEXT$ = TEXT$ + FORMAT$(PW_JL::EXT, '   ###,###.##')
		END IF

		CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
		GOTO LastLine IF UTL_REPORTX::STAT

	CASE "2"

		IF LAST_WINDOW$ <> PW_JL::WINDOW
		THEN
			TEXT$ = '  *Sales* Pronum         Description' + &
				'               ' + &
				'Sto  Lotnum     Account             ' + &
				'Quantity      Price Pt   Pound     Amount' &

			CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
			GOTO LastLine IF UTL_REPORTX::STAT
		END IF
		!
		! Print the line item line
		!
		TEXT$ = "    " + &
			PW_JL::JLINE + "  " + &
			PW_JL::PRONUM + " " + &
			LEFT(PW_JL::DESCRIPTION, 25%) + " " + &
			PW_JL::STONUM + " " + &
			PW_JL::LOTNUM + " " + &
			PW_JL::ACCNUM + " " + &
			FORMAT$(PW_JL::QTY, "##,###.##") + " " + &
			FORMAT$(PW_JL::PRICE, "##,###.###") + " " + &
			PW_JL::PRTYPE + " " + &
			FORMAT$(PW_JL::POUNDS, "###,###") + " " + &
			FORMAT$(PW_JL::EXT, "###,###.##")

		CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
		GOTO LastLine IF UTL_REPORTX::STAT
	END SELECT

	LAST_WINDOW$ = PW_JL::WINDOW

	!
	! Try for next Line
	!
	GOTO Get_Next_Line

 LastLine:
	RETURN

 HelpError:
	!******************************************************************
	! Help Message for an error
	!******************************************************************
	CALL HELP_34MESSAGE(SCOPE, NUM1$(ERL) + " " + ERT$(ERR), &
		"E", ERN$, FILENAME$, NUM1$(ERR))
	UTL_REPORTX::STAT = -1%
	GOTO ExitProgram

	%Page

19000	!******************************************************************
	! ERROR TRAPPING
	!******************************************************************

	!
	! Untrapped error
	!
	FILENAME$ = ""
	RESUME HelpError

32767	END
