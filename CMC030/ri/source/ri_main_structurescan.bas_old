1	%TITLE "Maintain Product Standard Structure"
	%SBTTL "RI_MAIN_STRUCTURESCAN"
	%IDENT "V3.6a Calico"

	FUNCTION LONG RI_MAIN_STRUCTURESCAN(CDD_WINDOW_CDD SMG_WINDOW, &
		LONG MOPTION, LONG MLOOP, LONG MFLAG, STRING MVALUE)

	!
	! COPYRIGHT (C) 1987, 1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! Abstract:HELP
	!	.p
	!	The ^*Product Ingredients Scan\* screen provides the means to access
	!	routines where ingredients for particular product are
	!	entered and maintained.
	!
	! Index:
	!	.x Product Ingredients Scan
	!	.x Scan>Product Ingredients
	!
	! Option:
	!
	! Compile:
	!
	!	$ BAS RI_SOURCE:RI_MAIN_STRUCTURESCAN/LINE
	!	$ LIB FUNC_LIB:CMCFUN/REP RI_MAIN_STRUCTURESCAN
	!	$ DELETE RI_MAIN_STRUCTURESCAN.OBJ;*
	!
	! Author:
	!
	!	06/28/88 - Aaron Redd
	!
	! Modification history:
	!
	!	05/11/92 - Dan Perkins
	!		Use FUNC_TESTENTRY to test input.
	!
	!	06/12/92 - Kevin Handy
	!		Clean up (check)
	!
	!	04/22/93 - Kevin Handy
	!		Clean up (check)
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	10/28/96 - Kevin Handy
	!		Clean up (Check)
	!
	!	06/02/97 - Kevin Handy
	!		Use integer for #key
	!
	!	08/22/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!
	!	03/10/99 - Kevin Handy
	!		Fix FIND bug
	!--
	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	%INCLUDE "FUNC_INCLUDE:PD_WINDOW.INC"
	%INCLUDE "FUNC_INCLUDE:MAIN_WINDOW.COM"

	%INCLUDE "SOURCE:[CDD.OPEN]CDD_WINDOW.HB"

	%INCLUDE "SOURCE:[RI.OPEN]RI_RELATION.HB"
	MAP (RI_RELATION)	RI_RELATION_CDD		RI_RELATION
	MAP (RI_RELATION_OLD)	RI_RELATION_CDD		RI_RELATION_OLD, &
							RI_RELATION2, &
							RI_RELATION3

	%INCLUDE "SOURCE:[PD.OPEN]PD_PRODUCT.HB"
	MAP (PD_PRODUCT)	PD_PRODUCT_CDD		PD_PRODUCT

	!
	! Common Areas
	!
	! These areas store information that is re-used between
	! calls to these functions.
	!
	COM (CH_RI_RELATION) &
		RI_RELATION.CH%, &
		RI_RELATION.READONLY%

	!
	! External functions
	!
	EXTERNAL LONG    FUNCTION MAIN_WINDOW
	EXTERNAL LONG    FUNCTION FUNC_TESTENTRY

	%PAGE

	ON ERROR GOTO 29000

	RI_MAIN_STRUCTURESCAN = 0%

	SELECT MOPTION

	!
	! Initialization
	!
	! This option is used to initialize the window structure,
	! set up the default values for add, and open all files
	! necessary that have not already been opened.
	!
	CASE OPT_INIT

		!*************************************************************
		! Set up information
		!*************************************************************
		!
		! Define SMG_WINDOW
		!
		SMG_WINDOW::DESCR = "Product Ingredients"
		SMG_WINDOW::CURREC = -2%
		SMG_WINDOW::NHELP = "RI_MAIN_STRUCTURESCAN"
		SMG_WINDOW::HSIZE = 68%
		SMG_WINDOW::VSIZE = 14%
		SMG_WINDOW::HPOS  = 8%
		SMG_WINDOW::VPOS  = 4%
		SMG_WINDOW::FLAGS = 0%
		SMG_WINDOW::NITEMS= 6%

		SMG_WINDOW::NKEYS = 2%
		SMG_WINDOW::KNAME(0%) = "Product_number"
			SMG_WINDOW::KFIELD(0%, 0%) = 2%
			SMG_WINDOW::KFIELD(0%, 1%) = 1%
			SMG_WINDOW::KFIELD(0%, 2%) = 2%
		SMG_WINDOW::KNAME(1%) = "Ingredient"
			SMG_WINDOW::KFIELD(1%, 0%) = 2%
			SMG_WINDOW::KFIELD(1%, 1%) = 3%
			SMG_WINDOW::KFIELD(1%, 2%) = 1%

		SMG_WINDOW::HVIEW = 68%
		SMG_WINDOW::VVIEW = 14%
		SMG_WINDOW::VHPOS = 8%
		SMG_WINDOW::VVPOS = 4%

		CALL READ_DEFAULTS(SMG_WINDOW) &
			IF INSTR(1%, " QV", MVALUE) <= 1%
700		!
		! Declare channels
		!
		IF RI_RELATION.CH% > 0%
		THEN
			!
			! Already open, set flag to read-only if was
			! that way from last time.
			!
			SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%) &
				IF RI_RELATION.READONLY%
			GOTO 790
		END IF

		!
		! Open main file (existing) for modification
		!
750		%INCLUDE "SOURCE:[RI.OPEN]RI_RELATION.CRE"
		RI_RELATION.READONLY% = 0%
		GOTO 790

760		!
		! If unable to open for modify, try to open with read
		! access only.
		!
		%INCLUDE "SOURCE:[RI.OPEN]RI_RELATION.OPN"
		SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%)
		RI_RELATION.READONLY% = -1%

		GOTO 790

770		!
		! File not open, so reset channel
		!
		CALL ASSG_FREECHANNEL(RI_RELATION.CH%)

		EXIT FUNCTION

790		SMG_WINDOW::CHAN  = RI_RELATION.CH%
		RESET #RI_RELATION.CH%
		GET #RI_RELATION.CH%, REGARDLESS

	!
	! Display the background
	!
	! This option is used to display the background information on the
	! screen.  It must first clear any junk on the screen, and then
	! write the background onto it.
	!
20100	CASE OPT_BACKGROUND

		SMG_STATUS% = SMG$BEGIN_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

		SMG_STATUS% = SMG$ERASE_DISPLAY(SMG_WINDOW::WNUMBER)

		DATA	03,10, "(01) Product #", &
			04,10, "(02) Item #", &
			05,10, "(03) Ingredient #", &
			06,10, "(04) Quantity", &
			07,10, "(05) Operation", &
			08,10, "(06) Scrap (%)", &
			0, 0, ""

		RESTORE

		READ XPOS%, YPOS%, XSTR$
		I%=0%
		WHILE (XPOS% <> 0)
			I% = I% + 1%
			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				XSTR$, XPOS%, YPOS%) &
				IF (SMG_WINDOW::HFLAG(I%) AND 2%)=0%
		READ XPOS%, YPOS%, XSTR$
		NEXT

		SMG_STATUS% = SMG$END_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

	!
	! Enter/Display/Default
	!
	! This option is used to enter the data from the user, display data,
	! set defaults, and return the data back according to MFLAG.
	!
20200	CASE OPT_ENTRY

		TEMP$, TEMP1$ = TRM$(SCOPE::PRG_ITEM)
		TEMP$ = "View starting at" IF TEMP$ = "View"

		SCOPE::PRG_ITEM = "FLD" + FORMAT$(MLOOP, "<0>##")
 ReEnter:	SCOPE::SCOPE_EXIT = 0%

		SELECT MLOOP

		CASE 1%

	!++
	! Abstract:FLD001
	!	^*(01) Product _#\*
	!	.p
	!	The ^*Product _#\* field in the Product Ingredients Record screen
	!	provides a means to enter an assigned number which identifies a
	!	specific product.
	!	.p
	!	The field will accommodate up to fourteen (14) alphanumeric
	!	characters.
	!	.p
	!	Pressing ^*<List Choices>\* while the cursor is located at
	!	this field will cause a list of valid Product _# codes to be
	!	displayed.
	!
	! Index:
	!	.x Product Number>Product Ingredients Scan
	!	.x Product Ingredients Scan>Product Number
	!	.x Number>Product
	!
	!--

			RI_RELATION::PRODUCT = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, &
				"3;26",	TEMP$, RI_RELATION::PRODUCT, &
				MFLAG, "'E", MVALUE)

			IF (SCOPE::SCOPE_EXIT = SMG$K_TRM_F14)
			THEN
				IF MAIN_WINDOW(PD_MAIN_PRODUCT.ID, "VX")=1%
				THEN
					RI_RELATION::PRODUCT = &
						PD_PRODUCT::PRODUCT_NUM
				END IF
				GOTO Reenter
			END IF

		CASE 2%

	!++
	! Abstract:FLD002
	!	^*(02) Item _#\*
	!	.p
	!	The contents in the ^*Item _#\* field will indicate the sequence
	!	number for ingredients which go into a product. When adding
	!	an ingredient relative to a product, the value in the item _#
	!	field will automatically increment. Item _#'s can be changed.
	!	.p
	!	Duplicate item numbers for the same product are not allowed.
	!
	! Index:
	!	.x Item Number>Product Ingredient Scan
	!	.x Product Ingredient Scan>Item Number
	!	.x Number>Item
	!
	!--


			IF TEMP$ = "Add"
			THEN
				GOSUB 28500 IF (MFLAG AND 1%) = 0%
			END IF

			ITEMNUM = ENTR_3NUMBER(SCOPE, SMG_WINDOW::WNUMBER, &
				"4;26", TEMP$, &
				VAL(EDIT$(RI_RELATION::ITEMNUM,-1%)), &
				MFLAG, "<0>###", MVALUE)

			RI_RELATION::ITEMNUM = FORMAT$(ITEMNUM,"<0>###")

		CASE 3%

	!++
	! Abstract:FLD003
	!	^*(03) Ingredient\*
	!	.p
	!	The ^*Ingredient\* field is provided to enter a code which
	!	identifies a particular ingredient in a product.
	!	.p
	!	The ingredient as previously defined in the Product
	!	Description file will automatically appear. If the Ingredient
	!	code is not valid, a message will appear on the screen: ^*Input
	!	undefined, enter anyway <Yes/No>: No\*. The invalid code may be
	!	entered by typing "Y" and pressing ^*<Do>\*
	!	.p
	!	Pressing ^*<List Choices>\*, while the cursor is located at this
	!	field, will cause a list of valid Ingredient _#'s to be displayed.
	!
	! Index:
	!	.x Ingredient>Product Ingredients Scan
	!	.x Product Ingredients Scan>Ingredient
	!
	!--


			RI_RELATION::INGREDIENT = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, "05;26", TEMP$, &
				RI_RELATION::INGREDIENT, MFLAG, "'E", &
				MVALUE)

			IF (SCOPE::SCOPE_EXIT = SMG$K_TRM_F14)
			THEN
				IF (MAIN_WINDOW(PD_MAIN_PRODUCT.ID, "VX  ") = 1%)
				THEN
					RI_RELATION::INGREDIENT = &
						PD_PRODUCT::PRODUCT_NUM
				END IF
				GOTO Reenter
			END IF

		CASE 4%

	!++
	! Abstract:FLD004
	!	^*(04) Quantity\*
	!	.p
	!	The ^*Quantity\* field is provided to enter the quantity
	!	of an ingredient used in a particular product. The quantity
	!	is expressed in a Unit of Measure which is defined
	!	in the Product Description file.
	!
	! Index:
	!	.x Quantity>Product Ingredient Scan
	!	.x Product Ingredient Scan>Quantity
	!
	!--


			RI_RELATION::QUANTITY = ENTR_3NUMBER(SCOPE, &
				SMG_WINDOW::WNUMBER, "06;26", TEMP$, &
				RI_RELATION::QUANTITY, MFLAG, "##,###.###", &
				MVALUE)

		CASE 5%

	!++
	! Abstract:FLD005
	!	^*(05) Operation\*
	!	.p
	!	The ^*Operation\* field is provided to enter the designation
	!	for an operation in reference to a particular product where the
	!	ingredient is first used.
	!
	! Index:
	!	.x Operation>Product Ingredient Scan
	!	.x Product Ingredient Scan>Operation
	!
	!--

			RI_RELATION::OPERATION = ENTR_3STRING(SCOPE, &
				SMG_WINDOW::WNUMBER, "07;26", TEMP$, &
				RI_RELATION::OPERATION, MFLAG, "'E", &
				MVALUE)

		CASE 6%

	!++
	! Abstract:FLD006
	!	^*(06) Scrap (%)\*
	!	.p
	!	The ^*Scrap (%)\* field provides the means to enter the percentage
	!	of scrap or shrinkage expected of an ingredient.
	!
	! Index:
	!	.x Scrap>Product Ingredient Scan
	!	.x Product Ingredient Scan>Scrap
	!
	!--


			RI_RELATION::SCRAP = ENTR_3NUMBER(SCOPE, &
				SMG_WINDOW::WNUMBER, "08;26", TEMP$, &
				RI_RELATION::SCRAP * 0.01, MFLAG, "###.##", &
				MVALUE) * 100%


		END SELECT

		SCOPE::PRG_ITEM = TEMP1$

	!
	! Test values
	!
20300	CASE OPT_TESTENTRY

		RI_MAIN_STRUCTURESCAN = 0%

		SELECT MLOOP

		CASE 1%
			!
			! Is the input defined?
			!
			RI_MAIN_STRUCTURESCAN = FUNC_TESTENTRY( SMG_WINDOW, &
				RI_RELATION::PRODUCT, &
				PD_PRODUCT::DESCRIPTION, &
				"RI", MLOOP, "PRG", &
				"Product", PD_MAIN_PRODUCT.ID)

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				LEFT(PD_PRODUCT::DESCRIPTION, 37%), &
				3%,41%, ,SMG$M_BOLD)

		CASE 2%
			IF RI_RELATION::ITEMNUM = ""
			THEN
				RI_MAIN_STRUCTURESCAN = 1%
			ELSE
				IF (MVALUE = "ADD")
				THEN
					GET #SMG_WINDOW::CHAN, &
						KEY#0% EQ RI_RELATION::PRODUCT + &
						RI_RELATION::ITEMNUM, &
						REGARDLESS

					RI_MAIN_STRUCTURESCAN = 2%
					CALL ENTR_3MESSAGE(SCOPE, &
						"Record Already Exists", 0%)
				END IF
			END IF

		CASE 3%
			!
			! Is the input defined?
			!
			PD_PRODUCT::UOM = &
				STRING$(LEN(PD_PRODUCT::UOM), ASCII("?"))

			RI_MAIN_STRUCTURESCAN = FUNC_TESTENTRY( SMG_WINDOW, &
				RI_RELATION::INGREDIENT, &
				PD_PRODUCT::DESCRIPTION, &
				"RI", MLOOP, "PRG", &
				"Product", PD_MAIN_PRODUCT.ID)

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				LEFT(PD_PRODUCT::DESCRIPTION, 37%), &
				5%,41%, ,SMG$M_BOLD)

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				PD_PRODUCT::UOM,6%,41%, ,SMG$M_BOLD)

		END SELECT

	CASE OPT_DISPLAY

		IF (SMG_WINDOW::HFLAG(1%) AND 2%)=0%
		THEN
			PD_PRODUCT::DESCRIPTION = &
				STRING$(LEN(PD_PRODUCT::DESCRIPTION),ASCII("?")) &
				IF MAIN_WINDOW(PD_MAIN_PRODUCT.ID,"Q0"+RI_RELATION::PRODUCT) <> 1%

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				LEFT(PD_PRODUCT::DESCRIPTION,37%), &
				3%,41%, ,SMG$M_BOLD)
		END IF

		IF (SMG_WINDOW::HFLAG(3%) AND 2%)=0%
		THEN
			IF MAIN_WINDOW(PD_MAIN_PRODUCT.ID,"Q0"+ &
					RI_RELATION::INGREDIENT) <> 1%
			THEN
				PD_PRODUCT::DESCRIPTION = &
					STRING$(LEN(PD_PRODUCT::DESCRIPTION),ASCII("?"))
				PD_PRODUCT::UOM = &
					STRING$(LEN(PD_PRODUCT::UOM),ASCII("?"))
			END IF

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				LEFT(PD_PRODUCT::DESCRIPTION,37%), &
				5%,41%, ,SMG$M_BOLD)

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				PD_PRODUCT::UOM,6%,41%, ,SMG$M_BOLD)

		END IF

	!
	! Set RI_RELATION_OLD value
	!
20500	CASE OPT_SETOLD
		RI_RELATION_OLD = RI_RELATION

	!
	! Restore RI_RELATION_OLD value
	!
	CASE OPT_RESETOLD
		RI_RELATION = RI_RELATION_OLD

	!
	! Set default value
	!
	CASE OPT_SETDEFAULT
		RI_RELATION2 = RI_RELATION

	!
	! Restore default value
	!
	CASE OPT_RESETDEFAULT
		RI_RELATION = RI_RELATION2

	!
	! View header
	!
	CASE OPT_VIEW
		SELECT MLOOP

		!
		! Title (One line only)
		!
		CASE 1%
			MVALUE = "  Product #      Item Ingredient#       " + &
				"Quantity Operation  Scrap"

		!
		! Positions of lines
		!
		CASE 2%
			MVALUE = "017,022,037,049,059"

		!
		! Convert current record into text
		!
		CASE 3%
			MVALUE = RI_RELATION::PRODUCT + " " + &
				RI_RELATION::ITEMNUM + " " + &
				RI_RELATION::INGREDIENT + " " + &
				FORMAT$(RI_RELATION::QUANTITY, &
					"###,###.###")+ " "+ &
				RI_RELATION::OPERATION + "  " + &
				FORMAT$(0.01 * RI_RELATION::SCRAP, "###.##")

		END SELECT

	!
	! Find
	!
	CASE OPT_FIND
		SELECT MLOOP
		CASE 0%
			FIND #SMG_WINDOW::CHAN, &
				KEY#0% GE RI_RELATION::PRODUCT + &
				RI_RELATION::ITEMNUM, &
				REGARDLESS

		CASE 1%
			FIND #SMG_WINDOW::CHAN, &
				KEY#1% GE RI_RELATION::INGREDIENT + &
				RI_RELATION::PRODUCT, &
				REGARDLESS

		END SELECT

	END SELECT

28000	EXIT FUNCTION

28500	!
	! Find the next item number
	!
	ITEM% = 0%
	WORK_ITEMNUM$ = ""
	WORK_PRODUCT$ = RI_RELATION::PRODUCT
	RI_RELATION3 = RI_RELATION

	FIND #RI_RELATION.CH%, KEY#0% EQ &
		RI_RELATION::PRODUCT + "", REGARDLESS

28510	WHILE ITEM% < 9999% - 5%
		ITEM% = ITEM% + 5%
		FIND  #RI_RELATION.CH%, KEY#0% GE &
			WORK_PRODUCT$ + FORMAT$(ITEM%, "<0>###"), REGARDLESS
		GET #RI_RELATION.CH%, REGARDLESS
		GOTO 28515 IF WORK_PRODUCT$ <> RI_RELATION::PRODUCT
	NEXT

28515	ITEM% = ITEM% - 5%
	FIND  #RI_RELATION.CH%, KEY#0% GE &
		WORK_PRODUCT$ + FORMAT$(ITEM%,"<0>###"),REGARDLESS

	GET #RI_RELATION.CH%, REGARDLESS

28520	IF WORK_PRODUCT$ = RI_RELATION::PRODUCT
	THEN
		WORK_ITEMNUM$ = RI_RELATION::ITEMNUM
		GET #RI_RELATION.CH%, REGARDLESS
		GOTO 28520
	END IF

28530	RI_RELATION = RI_RELATION3
	RI_RELATION::ITEMNUM = FORMAT$(VAL(WORK_ITEMNUM$)+1%,"<0>###")

	RETURN

29000	!
	! Trap errors
	!
	SELECT ERL
	!
	! Unable to open Read/Write
	!
	CASE 750%
		RESUME 760 IF ERR = 10%
		RI_MAIN_STRUCTURESCAN = ERR
		RESUME 770

	!
	! Unable to open Read/Only
	!
	CASE 760%
		RI_MAIN_STRUCTURESCAN = ERR
		RESUME 770

	!
	! Unable to reset
	!
	CASE 790%
		RESUME 32767

	!
	! Record does not already exist
	!
	CASE 20300%
		RESUME 32767 IF ERR = 155%

	!
	! No record exists
	!
	CASE 28500%
		RESUME 28530 IF ERR = 155%

	!
	! Can't find record
	!
	CASE 28510%
		RESUME 28515 IF ERR = 155%

	!
	! End of file
	!
	CASE 28520%
		RESUME 28530 IF ERR = 11%

	END SELECT

	ON ERROR GO BACK

32767	END FUNCTION
