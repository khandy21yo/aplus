1	%TITLE "Forecasting Sales Analysis"
	%SBTTL "RM_RPRT_ANALYSIS01"
	%IDENT "V3.6a Calico"

	!
	! COPYRIGHT (C) 1986, 1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! Abstract:HELP
	!	.p
	!	This program prints out a forecasting analysis for sale
	!		based on half hour sales history
	!
	! Index:
	!
	! Option:
	!
	! Compile:
	!
	!	$ BAS RM_SOURCE:RM_RPRT_ANALYSIS01/LINE
	!	$ LINK/EXE=RM_EXE: RM_RPRT_ANALYSIS01, -
	!		FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE RM_RPRT_ANALYSIS01.OBJ;*
	!
	! Author:
	!
	!	10/15/87 - Frank F. Starman
	!
	! Modification History:
	!
	!	06/21/90 - Aaron Redd
	!		Added line layout information so that the report could
	!		be sent to either a spreadsheet or a DIF file.
	!
	!	04/23/93 - Kevin Handy
	!		Clean up (Check)
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	09/13/96 - Kevin Handy
	!		Reformat source code.
	!
	!	06/03/97 - Kevin Handy
	!		Use integer for #key
	!
	!	08/22/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!--
	%PAGE

	!
	! Set up compiling options
	!
	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_REPORTX.HB"
	DECLARE			UTL_REPORTX_CDD	UTL_REPORTX

	%INCLUDE "SOURCE:[RM.OPEN]RM_HISTORY.HB"
	MAP	(RM_HISTORY)	RM_HISTORY_CDD	RM_HISTORY

	!
	! Declare variables and constants
	!
	DECLARE	STRING	LYT_LINE

	!
	! Dimension arrays and/or tables
	!
	DIM	REAL	FOUR.TOTAL(6%, 300%)

	%PAGE

	!
	! Set up error trapping
	!
	ON ERROR GOTO 19000

 Init:
	!
	! Initilize report
	!
	CALL OUTP_INITFROMFILE(UTL_REPORTX, 132%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	FROM.ITEM$ = EDIT$(UTL_REPORTX::OPTDEF(0%), 132%)
	TO.ITEM$ = EDIT$(UTL_REPORTX::OPTDEF(1%), 132%)
	WLDCRD$ = EDIT$(UTL_REPORTX::OPTDEF(2%), -1%)
	PAGE$ = EDIT$(UTL_REPORTX::OPTDEF(4%), 132%)
	TO.DATE$ = DATE_STOREDATE(EDIT$(UTL_REPORTX::OPTDEF(5%), 132%))

	DAY% = -1%


300	%INCLUDE "SOURCE:[RM.OPEN]RM_HISTORY.OPN"

	%PAGE

 ReportTitle:
	!
	! Title
	!
	TITLE$(1%) = "MEAN  ABSOLUTE  DEVIATION  ANALYSIS"
	TITLE$(2%) = "Restaurant Management System"
	TITLE$(3%) = ""

	!
	! Heading
	!
	TITLE$(4%) = "Store Date    4Ave  TAve  3Ave  5Ave Exp09 Dbl09 " + &
		"Exp08 Dbl08 Exp07 Dbl07 "
	TITLE$(5%) = "."

	!
	! Line layouts
	!
	LYT_LINE = "$StoreLocation:004,DActionDate:011,V4Ave:018," + &
		"VTAve:024,V3Ave:030,V5Ave:036,VExp09:042,VDbl09:048," + &
		"VExp08:054,VDbl08:060,VExp07:066,VDbl07:072"

	%PAGE

17000	!******************************************************************
	! OUTPUT REPORT
	!******************************************************************
	IF FROM.ITEM$ = ""
	THEN
		RESET #RM_HISTORY.CH%, KEY#1%
	ELSE
		FIND #RM_HISTORY.CH%, KEY#1% GE FROM.ITEM$,REGARDLESS
	END IF

 GetNextRec:
17020	!
	! Main loop starts here
	!
	GOTO ExitProgram IF UTL_REPORTX::STAT

	!
	! Get next record
	!
	GET #RM_HISTORY.CH%, REGARDLESS

	!
	! Check current record
	!
	GOTO ExitTotal IF (RM_HISTORY::LOCATION > TO.ITEM$) AND TO.ITEM$ <> ""

	GOTO GetNextRec &
		IF COMP_STRING(EDIT$(RM_HISTORY::LOCATION,-1%), WLDCRD$) = 0% &
		AND WLDCRD$ <> ""

	GOTO GetNextRec IF RM_HISTORY::CATEGORY <> PAGE$

	GOTO GetNextRec &
		IF RM_HISTORY::ACTION_DATE  > TO.DATE$ AND TO.DATE$ <> ""

17300	!
	! Average forecasting
	!
	DAY% = DAY% + 1%
	WEEK% = INT(DAY%/7%)
	WEEK.DAY% = DAY% - WEEK%*7%

	TOTAL = 0.
	TOTAL = TOTAL + RM_HISTORY::AMOUNT_QTY(I%) &
		FOR I%=0% TO 47%

	!
	! Day average
	!
	!AVERAGE = CTD.TOTAL/DAY% IF DAY%<>0%

	!
	! Four week day average
	!
	FOUR.WEEK = 0.
	FOR I%=WEEK%-1% TO ABS(WEEK%-4%) STEP -1%
		FOUR.WEEK = FOUR.WEEK + FOUR.TOTAL(WEEK.DAY%,I%)
	NEXT I%

	FOUR.AVERAGE = FOUR.WEEK/4%

	!
	! Five week day average
	!
	FIVE.WEEK = 0.
	FOR I%=WEEK%-1% TO ABS(WEEK%-5%) STEP -1%
		FIVE.WEEK = FIVE.WEEK + FOUR.TOTAL(WEEK.DAY%,I%)
	NEXT I%

	FIVE.AVERAGE = FIVE.WEEK/5%

	!
	! Three week day average
	!
	THREE.WEEK = 0.
	FOR I%=WEEK%-1% TO ABS(WEEK%-3%) STEP -1%
		THREE.WEEK = THREE.WEEK + FOUR.TOTAL(WEEK.DAY%,I%)
	NEXT I%

	THREE.AVERAGE = THREE.WEEK/3%

	!
	! Week day average
	!
	DAY.AVERAGE = DAY.TOTAL(WEEK.DAY%)/WEEK% IF WEEK%<>0%

	!
	! Exponential smoothing
	!

	FOR J%=7% TO 9%
		ALFA = 0.1 * J%
		EXP.SMOOTH(J%) = ALFA * DEMAND(WEEK.DAY%)+ &
			(1.-ALFA) * EXPONENT(WEEK.DAY%,J%)
		DBL.SMOOTH(J%) = ALFA * EXP.SMOOTH(J%) + &
			(1.-ALFA) * DBL(WEEK.DAY%,J%)
	NEXT J%

	IF WEEK%>4%
	THEN
		FOUR.AVE(WEEK.DAY%) = FOUR.AVE(WEEK.DAY%) + &
			ABS(FOUR.AVERAGE - TOTAL)
		FIVE.AVE(WEEK.DAY%) = FIVE.AVE(WEEK.DAY%) + &
			ABS(FIVE.AVERAGE - TOTAL)
		THREE.AVE(WEEK.DAY%) = THREE.AVE(WEEK.DAY%) + &
			ABS(THREE.AVERAGE - TOTAL)
		DAY.AVE(WEEK.DAY%) = DAY.AVE(WEEK.DAY%) + &
			ABS(DAY.AVERAGE - TOTAL)
		FOR J%=7% TO 9%
			EXP.SM(WEEK.DAY%,J%) = EXP.SM(WEEK.DAY%,J%) + &
				ABS(EXP.SMOOTH(J%) - TOTAL)
			DBL.SM(WEEK.DAY%,J%) = DBL.SM(WEEK.DAY%,J%) + &
				ABS(DBL.SMOOTH(J%) - TOTAL)
		NEXT J%
	END IF

 !	CTD.TOTAL = CTD.TOTAL + TOTAL

	FOUR.TOTAL(WEEK.DAY%,WEEK%) = TOTAL
	DAY.TOTAL(WEEK.DAY%) = DAY.TOTAL(WEEK.DAY%) + TOTAL

	DEMAND(WEEK.DAY%) = TOTAL
	FOR J%=7% TO 9%
		EXPONENT(WEEK.DAY%,J%) = EXP.SM(WEEK.DAY%,J%)
		DBL(WEEK.DAY%,J%) = DBL.SM(WEEK.DAY%,J%)

	NEXT J%
	!
	! Print out one line
	!
	IF WEEK%>4%
	THEN
		DIV% = WEEK% - 4%
		TEXT$ = RM_HISTORY::LOCATION+"  "+ &
			LEFT(PRNT_DATE(RM_HISTORY::ACTION_DATE,8%),5%)+" "+ &
			FORMAT$(FOUR.AVE(WEEK.DAY%)/DIV%,"######")+ &
			FORMAT$(DAY.AVE(WEEK.DAY%)/DIV%,"######")+ &
			FORMAT$(THREE.AVE(WEEK.DAY%)/DIV%,"######")+ &
			FORMAT$(FIVE.AVE(WEEK.DAY%)/DIV%,"######")+ &
			FORMAT$(EXP.SM(WEEK.DAY%,9%)/DIV%,"######")+ &
			FORMAT$(DBL.SM(WEEK.DAY%,9%)/DIV%,"######")+ &
			FORMAT$(EXP.SM(WEEK.DAY%,8%)/DIV%,"######")+ &
			FORMAT$(DBL.SM(WEEK.DAY%,8%)/DIV%,"######")+ &
			FORMAT$(EXP.SM(WEEK.DAY%,7%)/DIV%,"######")+ &
			FORMAT$(DBL.SM(WEEK.DAY%,7%)/DIV%,"######")

		CALL OUTP_LINE(LYT_LINE, UTL_REPORTX, TITLE$(), TEXT$, 0%)
		CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 0%) &
			IF WEEK.DAY%=6%
	END IF

	GOTO ExitProgram IF UTL_REPORTX::STAT

17350	!
	! Try for next record
	!
	GOTO GetNextRec

 ExitTotal:
17400	!
	! Handle end of report
	!

 ExitProgram:
	CALL OUTP_FINISH(UTL_REPORTX)

	!
	! Exit to next program or menu
	!
	IF TRM$(UTL_REPORTX::NEXTRUN) = ""
	THEN
		CALL SUBR_3EXITPROGRAM(SCOPE, "", "")
	ELSE
		CALL SUBR_3EXITPROGRAM(SCOPE, "RUN " + UTL_REPORTX::NEXTRUN, "")
	END IF

	%PAGE

 HelpError:
	!******************************************************************
	! Help Message for an error
	!******************************************************************
	CALL HELP_34MESSAGE(SCOPE, NUM1$(ERL) + " " + ERT$(ERR), &
		"E", ERN$, FILENAME$, NUM1$(ERR))
	UTL_REPORTX::STAT = -1%
	GOTO ExitProgram

	%Page

19000	!******************************************************************
	! ERROR TRAPPING
	!******************************************************************

	SELECT ERR
	CASE 154%	! Locked record
		SLEEP 5%
		RESUME
	END SELECT

	FILENAME$ = ""
	SELECT ERL

	CASE 300%
		FILENAME$ = "RM_HISTORY"

	CASE 17000%
		CALL ENTR_3MESSAGE(SCOPE, &
			"Unable to find beginning record!", 0%)
		RESUME ExitProgram

	CASE 17020%	! End of file
		RESUME ExitTotal IF ERR = 11%
		FILENAME$ = "RM_HISTORY"

	END SELECT

	!
	! Untrapped error
	!
	RESUME HelpError

32767	END
