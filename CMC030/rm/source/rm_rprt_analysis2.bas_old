1	%TITLE "Forecasting Sales Analysis"
	%SBTTL "RM_RPRT_ANALYSIS2"
	%IDENT "V3.6a Calico"

	!
	! COPYRIGHT (C) 1986, 1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! ID:RM011
	!
	! Abstract:HELP
	!	.p
	!	This program prints out a forecasting analysis for sale
	!		based on half hour sales history
	!
	! Index:
	!
	! Option:
	!
	! Compile:
	!
	!	$ BAS RM_SOURCE:RM_RPRT_ANALYSIS2/LINE
	!	$ LINK/EXECUTABLE=RM_EXE: RM_RPRT_ANALYSIS2, FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE RM_RPRT_ANALYSIS2.OBJ;*
	!
	! Author:
	!
	!	10/15/87 - Frank F. Starman
	!
	! Modification History:
	!
	!	04/23/93 - Kevin Handy
	!		Clean up (Check)
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	09/13/96 - Kevin Handy
	!		Reformat source code.
	!
	!	08/22/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!--
	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_REPORTX.HB"
	DECLARE			UTL_REPORTX_CDD	UTL_REPORTX

	%INCLUDE "SOURCE:[RM.OPEN]RM_HISTORY.HB"
	MAP	(RM_HISTORY)	RM_HISTORY_CDD	RM_HISTORY

	DIM REAL FOUR.TOTAL(6%,300%)

	%PAGE

	ON ERROR GOTO 19000

	!
 Init:	! Initilize report
	!
	CALL OUTP_INITFROMFILE(UTL_REPORTX, 132%)

	GOTO ExitProgram IF UTL_REPORTX::STAT

	WLDCRD$ = EDIT$(UTL_REPORTX::OPTDEF(0%), -1%)
	MTH$(1%) = EDIT$(UTL_REPORTX::OPTDEF(1%), 132%)
	MTH$(2%) = EDIT$(UTL_REPORTX::OPTDEF(2%), 132%)
	MTH$(3%) = EDIT$(UTL_REPORTX::OPTDEF(3%), 132%)
	MTH$(4%) = EDIT$(UTL_REPORTX::OPTDEF(4%), 132%)
	TO.DATE$ = DATE_STOREDATE(EDIT$(UTL_REPORTX::OPTDEF(5%), 132%))
	ALFA(1%) = VAL(EDIT$(UTL_REPORTX::OPTDEF(6%), 132%))
	ALFA(2%) = VAL(EDIT$(UTL_REPORTX::OPTDEF(7%), 132%))
	ALFA(3%) = VAL(EDIT$(UTL_REPORTX::OPTDEF(8%), 132%))
	ALFA(4%) = VAL(EDIT$(UTL_REPORTX::OPTDEF(9%), 132%))

	METHOD$(0%) = "       "
	METHOD$(1%) = "   4Ave"
	METHOD$(2%) = "WeekDay"
	METHOD$(3%) = "ExpSmth"
	METHOD$(4%) = "DblSmth"

	LINE.HEADER$ = LINE.HEADER$ + &
		METHOD$(VAL(MTH$(I%))) + FORMAT$(ALFA(I%),"(<0>.#)")+ &
		" Variance " &
		FOR I%=1% TO 4%

	DAY% = -1%

300	%INCLUDE "SOURCE:[RM.OPEN]RM_HISTORY.OPN"

 ReportTitle:
	!
	! Title
	!
	TITLE$(1%) = "FORECASTING  SALES  ANALYSIS"
	TITLE$(2%) = "Restaurant Management System"
	TITLE$(3%) = ""

	!
	! Heading
	!
	TITLE$(4%) = "Store Date       ActualSale "+LINE.HEADER$

	TITLE$(5%) = "."

	%PAGE

17000	!******************************************************************
	! OUTPUT REPORT
	!******************************************************************

	RESET #RM_HISTORY.CH%, KEY#1

 GetNextRec:
17020	!
	! Main loop starts here
	!
	GOTO ExitProgram IF UTL_REPORTX::STAT

	!
	! Get next record
	!
	GET #RM_HISTORY.CH%, REGARDLESS

	!
	! Check current record
	!
	GOTO GetNextRec IF COMP_STRING(EDIT$(RM_HISTORY::LOCATION,-1%), WLDCRD$) = 0% &
		AND WLDCRD$ <> ""

	GOTO GetNextRec IF RM_HISTORY::CATEGORY <> "02"

	GOTO GetNextRec IF RM_HISTORY::ACTION_DATE  > TO.DATE$ AND TO.DATE$ <> ""

17300	!
	! Average forecasting
	!

	DAY% = DAY% + 1%
	WEEK% = INT(DAY%/7%)
	WEEK.DAY% = DAY% - WEEK%*7%

	TOTAL = 0.
	TOTAL = TOTAL + RM_HISTORY::AMOUNT_QTY(I%) &
			FOR I%=0% TO 47%

	!
	! Day average
	!
	!AVERAGE = CTD.TOTAL/DAY% IF DAY%<>0%

	FOR METHOD% = 1% TO 4%

		SELECT MTH$(METHOD%)

		CASE "01"
			!
			! Four week day average
			!
			COLUMN(METHOD%) = 0.
			FOR I% = WEEK%-1% TO ABS(WEEK%-4%) STEP -1%
				COLUMN(METHOD%) = COLUMN(METHOD%) + &
					FOUR.TOTAL(WEEK.DAY%,I%)
			NEXT I%

			COLUMN(METHOD%) = COLUMN(METHOD%)/4%

		CASE "02"
			!
			! Week day average
			!
			COLUMN(METHOD%) = DAY.TOTAL(WEEK.DAY%)/WEEK% IF WEEK%<>0%

		CASE "03"
			!
			! Exponential smoothing
			!

			ALFA = ALFA(METHOD%)
			COLUMN(METHOD%) = ALFA * DEMAND(WEEK.DAY%)+ &
				(1.-ALFA) * EXPONENT(WEEK.DAY%)

			EXPONENT(WEEK.DAY%) = COLUMN(METHOD%)

		CASE "04"
			!
			! Double Exponential smoothing
			!

			ALFA = ALFA(METHOD%)
			COLUMN(METHOD%) = ALFA * DEMAND(WEEK.DAY%)+ &
				(1.-ALFA) * EXPONENT(WEEK.DAY%)

			COLUMN(METHOD%)= ALFA * COLUMN(METHOD%)+ &
				(1.-ALFA) * DBL(WEEK.DAY%)

			DBL(WEEK.DAY%) = COLUMN(METHOD%)

		END SELECT

	NEXT METHOD%

 !	CTD.TOTAL = CTD.TOTAL + TOTAL

	FOUR.TOTAL(WEEK.DAY%,WEEK%) = TOTAL
	DAY.TOTAL(WEEK.DAY%) = DAY.TOTAL(WEEK.DAY%) + TOTAL

	DEMAND(WEEK.DAY%) = TOTAL

	ASTER$(I%) = " " FOR I%=1% TO 4%
	TEST.VAR = 100000.

	FOR I%=1% TO 4%
		IF TEST.VAR > ABS(TOTAL-COLUMN(I%))
		THEN
			IF COLUMN(I%)<>0.
			THEN
				IND%=I%
				TEST.VAR = ABS(TOTAL-COLUMN(I%))
			END IF
		END IF
	NEXT I%

	ASTER$(IND%) = "*"
	!
	! Print out one line
	!
	TEXT$ = RM_HISTORY::LOCATION + "  " + &
		PRNT_DATE (RM_HISTORY::ACTION_DATE,8%) + " " + &
		FORMAT$(TOTAL,"   ###,###")+"   "+ &
		FORMAT$(COLUMN(1%),"   ###,###")+" "+ASTER$(1%)+ &
		FORMAT$(COLUMN(1%)-TOTAL," ###,###")+"  "+ &
		FORMAT$(COLUMN(2%),"   ###,###")+" "+ASTER$(2%)+ &
		FORMAT$(COLUMN(2%)-TOTAL," ###,###")+"  "+ &
		FORMAT$(COLUMN(3%),"   ###,###")+" "+ASTER$(3%)+ &
		FORMAT$(COLUMN(3%)-TOTAL," ###,###")+"  "+ &
		FORMAT$(COLUMN(4%),"   ###,###")+" "+ASTER$(4%)+ &
		FORMAT$(COLUMN(4%)-TOTAL," ###,###")


	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(),"", 0%) &
		IF WEEK.DAY%=0%

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)

	GOTO ExitProgram IF UTL_REPORTX::STAT

17350	!
	! Try for next record
	!
	GOTO GetNextRec

 ExitTotal:
17400	!
	! Handle end of report
	!

 ExitProgram:
	CALL OUTP_FINISH(UTL_REPORTX)

	!
	! Exit to next program or menu
	!
	IF TRM$(UTL_REPORTX::NEXTRUN) = ""
	THEN
		CALL SUBR_3EXITPROGRAM(SCOPE, "", "")
	ELSE
		CALL SUBR_3EXITPROGRAM(SCOPE, "RUN " + UTL_REPORTX::NEXTRUN, "")
	END IF

	%PAGE

 HelpError:
	!******************************************************************
	! Help Message for an error
	!******************************************************************
	CALL HELP_34MESSAGE(SCOPE, NUM1$(ERL) + " " + ERT$(ERR), &
		"E", ERN$, FILENAME$, NUM1$(ERR))
	UTL_REPORTX::STAT = -1%
	GOTO ExitProgram

	%Page

19000	!******************************************************************
	! ERROR TRAPPING
	!******************************************************************

	SELECT ERR
	CASE 154%	! Locked record
		SLEEP 5%
		RESUME
	END SELECT

	FILENAME$ = ""
	SELECT ERL

	CASE 300%
		FILENAME$ = "RM_HISTORY"

	CASE 17000%
		CALL ENTR_3MESSAGE(SCOPE, "Unable to find beginning record!", 0%)
		RESUME ExitProgram

	CASE 17020%	! End of file
		RESUME ExitTotal IF ERR = 11%
		FILENAME$ = "RM_HISTORY"

	END SELECT

	!
	! Untrapped error
	!
	RESUME HelpError

32767	END
