1	%TITLE "Restaurant Worksheet in Packs"
	%SBTTL "RM_RPRT_CASESHEET"
	%IDENT "V3.6a Calico"

	!
	! COPYRIGHT (C) 1986, 1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! ID:RM006
	!
	! Abstract:HELP
	!	.p
	!	The ^*Worksheet in Packs\*  program prints out a worksheet in packs for
	!	purchase, sales, etc in the Restaurant Management System.  This worksheet
	!	contains the following fields:
	!	.b
	!	.lm 15
	!	.list 0,"*"
	!	.le
	!	Product Number
	!	.le
	!	Description
	!	.le
	!	Type
	!	.le
	!	Category
	!	.le
	!	Unit of Measure
	!	.le
	!	Pack Factor
	!	.le
	!	Cost
	!	.le
	!	Day of Week with corresponding Date
	!	.els
	!
	! Index:
	!	.x Worksheet>In Packs
	!
	! Option:
	!
	! Compile:
	!
	!	$ BAS RM_SOURCE:RM_RPRT_CASESHEET/LINE
	!	$ LINK/EXE=RM_EXE: RM_RPRT_CASESHEET,-
	!		FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE RM_RPRT_CASESHEET.OBJ;*
	!
	! Author:
	!
	!	08/31/87 - Frank F. Starman
	!
	! Modification History:
	!
	!	10/20/87 - Frank F. Starman
	!		Add the Transaction flag file
	!
	!	06/29/88 - Frank F. Starman
	!		Change user rep settings
	!
	!	02/26/92 - Kevin Handy
	!		Modified to remove references to PD_PACK file
	!		after Frank deleted it so programs couldn't compile.
	!
	!	04/28/93 - Kevin Handy
	!		Clean up (Check)
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	09/13/96 - Kevin Handy
	!		Reformat source code.
	!
	!	06/03/97 - Kevin Handy
	!		Use integer for #key
	!
	!	08/22/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!--
	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_REPORTX.HB"
	DECLARE		UTL_REPORTX_CDD		UTL_REPORTX

	%INCLUDE "SOURCE:[PD.OPEN]PD_PRODUCT.HB"
	MAP	(PD_PRODUCT)	PD_PRODUCT_CDD		PD_PRODUCT

	%INCLUDE "SOURCE:[PD.OPEN]PD_PRODTYPE.HB"
	MAP	(PD_PRODTYPE)	PD_PRODTYPE_CDD		PD_PRODTYPE

	%INCLUDE "SOURCE:[PD.OPEN]PD_CATEGORY.HB"
	MAP	(PD_CATEGORY)	PD_CATEGORY_CDD		PD_CATEGORY

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_LOCATION.HB"
	MAP	(UTL_LOCATION)	UTL_LOCATION_CDD	UTL_LOCATION

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_TRANSTYPE.HB"
	MAP	(UTL_TRANSTYPE)	UTL_TRANSTYPE_CDD	UTL_TRANSTYPE

	%INCLUDE "SOURCE:[RM.OPEN]RM_TRANSFLAG.HB"
	MAP	(RM_TRANSFLAG)	RM_TRANSFLAG_CDD	RM_TRANSFLAG

	%PAGE

	ON ERROR GOTO 19000


	!
 Init:	! Initilize report
	!
	CALL OUTP_INITFROMFILE(UTL_REPORTX, 132%)

	GOTO ExitProgram IF UTL_REPORTX::STAT

	SORT.BY$ = EDIT$(UTL_REPORTX::OPTDEF(0%), 132%)
	FROM.ITEM$ = EDIT$(UTL_REPORTX::OPTDEF(1%), 132%)
	TO.ITEM$ = EDIT$(UTL_REPORTX::OPTDEF(2%), 132%)
	WLDCRD$ = EDIT$(UTL_REPORTX::OPTDEF(3%), -1%)
	LOCATION$ = EDIT$(UTL_REPORTX::OPTDEF(4%), 132%)
	SCAN.BY$ = EDIT$(UTL_REPORTX::OPTDEF(5%), 132%)
	SCAN$ = EDIT$(UTL_REPORTX::OPTDEF(6%), -1%)
	TODATE$ = DATE_STOREDATE(EDIT$(UTL_REPORTX::OPTDEF(7%), 132%))
	TRANS.TYPE$ = EDIT$(UTL_REPORTX::OPTDEF(8%), 132%)
	PRICE.TYPE$ = EDIT$(UTL_REPORTX::OPTDEF(9%), 132%)

	SELECT SORT.BY$
	CASE "C"
		SORT.KEY% = 2%
		ADD.TITLE$ = "BY  CATEGORY"
	CASE "D"
		SORT.KEY% = 3%
		ADD.TITLE$ = "BY  DESCRIPTION"
	CASE "P"
		SORT.KEY% = 0%
		ADD.TITLE$ = "BY  PRODUCT  NUMBER"
	CASE "T"
		SORT.KEY% = 1%
		ADD.TITLE$ = "BY  PRODUCT  TYPE"
	END SELECT

	DAY.WEEK$(1%) = "MON   "
	DAY.WEEK$(2%) = "TUE   "
	DAY.WEEK$(3%) = "WED   "
	DAY.WEEK$(4%) = "THU   "
	DAY.WEEK$(5%) = "FRI   "
	DAY.WEEK$(6%) = "SAT   "
	DAY.WEEK$(7%) = "SUN   "

	HEADER.LINE1$ = ""
	HEADER.LINE2$ = "    Price NewPrc "
	HEADER.LINE2$ = "     Cost NewPrc " IF PRICE.TYPE$=""

	FOR I%=0% TO 6%
		DAY.CODE%     = DATE_DAYCODE(TODATE$)+I%
		TEST.DATE$   = DATE_INVDCODE(DAY.CODE%)
		HEADER.LINE1$ = HEADER.LINE1$ + &
			LEFT(PRNT_DATE(TEST.DATE$,6%),5%)+" "
		HEADER.LINE2$=HEADER.LINE2$+DAY.WEEK$(DATE_DAYOFWEEK(DAY.CODE%))
	NEXT I%

300	%INCLUDE "SOURCE:[PD.OPEN]PD_PRODUCT.OPN"

310	%INCLUDE "SOURCE:[PD.OPEN]PD_PRODTYPE.OPN"

320	%INCLUDE "SOURCE:[PD.OPEN]PD_CATEGORY.OPN"

330	%INCLUDE "SOURCE:[UTL.OPEN]UTL_LOCATION.OPN"

340	UTL_TRANSTYPE::DESCRIPTION = &
		STRING$(LEN(UTL_TRANSTYPE::DESCRIPTION),ASCII("?"))
	%INCLUDE "SOURCE:[UTL.OPEN]UTL_TRANSTYPE.OPN"
	GET #UTL_TRANSTYPE.CH%, KEY#0% EQ TRANS.TYPE$, REGARDLESS

350	%INCLUDE "SOURCE:[RM.OPEN]RM_TRANSFLAG.OPN"

360 !	%INCLUDE "SOURCE:[PD.OPEN]PD_PACK.OPN"

 ReportTitle:
	!
	! Title
	!
	TITLE$(1%) = TRM$(UTL_TRANSTYPE::DESCRIPTION)+ &
		"  WORKSHEET  IN  PACKS  "+ADD.TITLE$
	TITLE$(3%) = "Restaurant Management System"
	TITLE$(4%) = ""

	!
	! Heading
	!
	TITLE$(5%) = SPACE$(132%-LEN(HEADER.LINE1$))+HEADER.LINE1$
	TITLE$(6%) = "Product#       Description              "+ &
		"  Tp Cat  Pack Form UOM    PackF "+ &
		HEADER.LINE2$
	TITLE$(7%) = "."

	%PAGE

17000	!******************************************************************
	! OUTPUT REPORT
	!******************************************************************

	RESET #UTL_LOCATION.CH%

 NextLocation:
	GET #UTL_LOCATION.CH%, REGARDLESS

	GOTO NextLocation IF LOCATION$ <> "" AND &
		COMP_STRING(EDIT$(UTL_LOCATION::LOCATION,-1%), LOCATION$) = 0%

	TITLE$(2%) = "  AT LOCATION "+TRM$(UTL_LOCATION::LOCATION) + " "+ &
		TRM$(UTL_LOCATION::LOCNAME)

17010	IF FROM.ITEM$ = ""
	THEN
		RESET #PD_PRODUCT.CH%, KEY#SORT.KEY%
	ELSE
		FIND #PD_PRODUCT.CH%, KEY#SORT.KEY% GE FROM.ITEM$,REGARDLESS
	END IF

 GetNextRec:
17020	!
	! Main loop starts here
	!
	GOTO ExitProgram IF UTL_REPORTX::STAT

	!
	! Get next record
	!
	GET #PD_PRODUCT.CH%, REGARDLESS

	!
	! Check current record
	!
	GOTO GetNextRec IF PD_PRODUCT::SSTATUS <> "A"

	SELECT SORT.BY$

	CASE "C"
		GOTO NextLocation IF (PD_PRODUCT::CATEGORY > TO.ITEM$) AND &
			TO.ITEM$ <> ""

		GOTO GetNextRec IF WLDCRD$ <> "" AND &
			COMP_STRING(EDIT$(PD_PRODUCT::CATEGORY,-1%), &
			WLDCRD$) = 0%

	CASE "D"
		GOTO NextLocation IF (PD_PRODUCT::DESCRIPTION > TO.ITEM$) AND &
			TO.ITEM$ <> ""

		GOTO GetNextRec IF WLDCRD$ <> "" AND &
			COMP_STRING(EDIT$(PD_PRODUCT::DESCRIPTION,-1%), &
			WLDCRD$) = 0%

	CASE "P"
		GOTO NextLocation IF (PD_PRODUCT::PRODUCT_NUM > TO.ITEM$) AND &
			TO.ITEM$ <> ""

		GOTO GetNextRec IF WLDCRD$ <> "" AND &
			COMP_STRING(EDIT$(PD_PRODUCT::PRODUCT_NUM,-1%), &
			WLDCRD$) = 0%

	CASE "T"
		GOTO NextLocation IF (PD_PRODUCT::PROD_TYPE> TO.ITEM$) AND &
			TO.ITEM$ <> ""

		GOTO GetNextRec IF WLDCRD$ <> "" AND &
			COMP_STRING(EDIT$(PD_PRODUCT::PROD_TYPE,-1%), &
			WLDCRD$) = 0%

	END SELECT

	SELECT SCAN.BY$

	CASE "C"
		GOTO GetNextRec IF SCAN$ <> "" AND &
			COMP_STRING(EDIT$(PD_PRODUCT::CATEGORY,-1%), SCAN$) = 0%

	CASE "D"
		GOTO GetNextRec IF SCAN$ <> "" AND &
			COMP_STRING(EDIT$(PD_PRODUCT::DESCRIPTION,-1%), &
			SCAN$) = 0%

	CASE "P"
		GOTO GetNextRec IF SCAN$ <> "" AND &
			COMP_STRING(EDIT$(PD_PRODUCT::PRODUCT_NUM,-1%), &
			SCAN$) = 0%

	CASE "T"
		GOTO GetNextRec IF SCAN$ <> "" AND &
			COMP_STRING(EDIT$(PD_PRODUCT::PROD_TYPE,-1%),SCAN$) = 0%

	END SELECT

	! Check transaction flag
	!
17200	FIND #RM_TRANSFLAG.CH%, KEY#0% EQ PD_PRODUCT::PRODUCT_NUM+ &
		TRANS.TYPE$,REGARDLESS
	GOTO GetNextRec

17300	!
	! Print out one line
	!
	TEXT$ = PD_PRODUCT::PRODUCT_NUM + " " + &
		LEFT(PD_PRODUCT::DESCRIPTION,26%) + " " + &
		PD_PRODUCT::PROD_TYPE + " " + &
		PD_PRODUCT::CATEGORY + " " + &
		"______!"+ &
		"_____!"+ &
		"_____!"+ &
		"_____!"+ &
		"_____!"+ &
		"_____!"+ &
		"_____!"+ &
		"_____!" &

	LIN% = 0%
	IF LAST.LOCATION$ <> UTL_LOCATION::LOCATION
	THEN
		IF UTL_REPORTX::PAGENO
		THEN
			LIN% = 999%
		END IF
		LAST.LOCATION$ = UTL_LOCATION::LOCATION
	END IF

	SELECT SORT.BY$
	CASE "C"
		IF TEST_PRINT$ <> PD_PRODUCT::CATEGORY
		THEN
			CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), " ", -1%) &
				IF TEST_PRINT$ <>""

			GOSUB 18150
			TEXT1$ =   "     "+PD_PRODUCT::CATEGORY + " "+ &
				PD_CATEGORY::DESCRIPTION
			CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT1$, LIN%)
			LIN% = 0%
			CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 0%)

			TEST_PRINT$ = PD_PRODUCT::CATEGORY
		END IF

	CASE "T"
		IF TEST_PRINT$ <> PD_PRODUCT::PROD_TYPE
		THEN
			CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), " ", 2%) &
				IF TEST_PRINT$ <>""

			GOSUB 18100
			TEXT1$ =   "     "+PD_PRODUCT::PROD_TYPE+" "+ &
				PD_PRODTYPE::DESCRIPTION
			CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT1$, LIN%)
			LIN% = 0%
			CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 0%)

			TEST_PRINT$ = PD_PRODUCT::PROD_TYPE
		END IF

	END SELECT

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, LIN%)

17350	!
	! Try for next record
	!
	GOTO GetNextRec

 ExitTotal:
17400	!
	! Handle end of report
	!

 ExitProgram:
	CALL OUTP_FINISH(UTL_REPORTX)

	!
	! Exit to next program or menu
	!
	IF TRM$(UTL_REPORTX::NEXTRUN) = ""
	THEN
		CALL SUBR_3EXITPROGRAM(SCOPE, "", "")
	ELSE
		CALL SUBR_3EXITPROGRAM(SCOPE, "RUN " + UTL_REPORTX::NEXTRUN, "")
	END IF

	%PAGE

18100	!
	! Read product type description
	!
	PD_PRODTYPE::DESCRIPTION = &
		STRING$(LEN(PD_PRODTYPE::DESCRIPTION),ASCII("?"))
	GET #PD_PRODTYPE.CH%, KEY#0% EQ PD_PRODUCT::PROD_TYPE, REGARDLESS

 Ret18100:
	RETURN

18150	!
	! Read product category description
	!
	PD_CATEGORY::DESCRIPTION = &
		STRING$(LEN(PD_CATEGORY::DESCRIPTION),ASCII("?"))
	GET #PD_CATEGORY.CH%, KEY#0% EQ PD_PRODUCT::CATEGORY, REGARDLESS

 Ret18150:
	RETURN

 HelpError:
	!******************************************************************
	! Help Message for an error
	!******************************************************************
	CALL HELP_34MESSAGE(SCOPE, NUM1$(ERL) + " " + ERT$(ERR), &
		"E", ERN$, FILENAME$, NUM1$(ERR))
	UTL_REPORTX::STAT = -1%
	GOTO ExitProgram

	%Page

19000	!******************************************************************
	! ERROR TRAPPING
	!******************************************************************

	SELECT ERR
	CASE 154%	! Locked record
		SLEEP 5%
		RESUME
	END SELECT

	FILENAME$ = ""
	SELECT ERL
	CASE 300%
		FILENAME$ = "PD_PRODUCT"

	CASE 310%
		RESUME 320 IF ERR = 5%
		FILENAME$ = "PD_PRODTYPE"

	CASE 320%
		RESUME 330 IF ERR = 5%
		FILENAME$ = "PD_CATEGORY"

	CASE 330%
		FILENAME$ = "UTL_LOCATION"

	CASE 340%
		RESUME 350 IF ERR = 5% OR ERR = 155%
		FILENAME$ = "UTL_TRANSTYPE"

	CASE 350%
		RESUME 360 IF ERR = 5%
		FILENAME$ = "IC_TRANSFLAG"

	CASE 17000%
		RESUME ExitTotal IF ERR = 11%
		FILENAME$ = "UTL_LOCATION"

	CASE 17010%
		FILENAME$ = "PD_PRODUCT"

	CASE 17020%	! End of file
		RESUME NextLocation IF ERR = 11%
		FILENAME$ = "PD_PRODUCT"

	CASE 17200%	! Print this product
		RESUME 17300 IF ERR = 155% OR ERR = 9%
		FILENAME$ = "RM_TRANSFLAG"

	CASE 18100%	! Undefined Type
		RESUME Ret18100 IF ERR = 155% or ERR = 9%
		FILENAME$ = "PD_PRODTYPE"

	CASE 18150%	! Undefined Category
		RESUME Ret18150 IF ERR = 155% or ERR = 9%
		FILENAME$ = "PD_CATEGORY"

	END SELECT

	!
	! Untrapped error
	!
	RESUME HelpError

32767	END
	!+-+-+
	!++
	! Abstract:FLD01
	!	^*(01) Sort (C,D,P,T)\*
	!	.p
	!	The ^*Sort\* field provides the means to print the report in the selected
	!	order.  Valid settings are:
	!	.lm 15
	!	.b
	!	.list 0,"*"
	!	.le
	!	C = Category
	!	.le
	!	D = Description
	!	.le
	!	P = Product
	!	.le
	!	T = Type
	!	.els
	!	.lm -10
	!	A setting is required in this field.
	!
	! Index:
	!	.x Sort
	!
	!--
	!+-+-+
	!++
	! Abstract:FLD02
	!	^*(02) From Item\*
	!	.p
	!	The value entered in the ^*From Item\* field causes the report to begin with the
	!	selected item.
	!	.p
	!	A blank setting causes the report to begin with the first item in the file.
	!
	! Index:
	!	.x From Item
	!	.x Item>From
	!
	!--
	!+-+-+
	!++
	! Abstract:FLD03
	!	^*(03) To Item\*
	!	.p
	!	The value entered in the ^*To Item\* field causes the report to end with the
	!	selected item.
	!	.p
	!	A blank setting causes the report to print to the end of the file.
	!
	! Index:
	!	.x To Item
	!	.x Item>To
	!
	!--
	!+-+-+
	!++
	! Abstract:FLD04
	!	^*(04) Wildcard\*
	!	.p
	!	The ^*Wildcard\* field provides the means to select designated items to be
	!	printed by entering a "Wildcard" value in this field.
	!
	! Index:
	!	.x Wildcard
	!
	!--
	!+-+-+
	!++
	! Abstract:FLD05
	!	^*(05) Locations\*
	!	.p
	!	The ^*Locations\* field provides the means to enter the locations which will
	!	be printed on this worksheet.  Wildcarding techniques may be used.
	!
	!
	! Index:
	!	.x Locations
	!
	!--
	!+-+-+
	!++
	! Abstract:FLD06
	!	^*(06) Scan (C,D,P,T)\*
	!	.p
	!	The ^*Scan\* field provides the means to print the report containing only
	!	specified  items from within the sort order.  Valid settings are:
	!	.lm 15
	!	.b
	!	.list 0,"*"
	!	.le
	!	C = Category
	!	.le
	!	D = Description
	!	.le
	!	P = Product
	!	.le
	!	T = Type
	!	.els
	!	.lm -10
	!
	! Index:
	!	.x Scan
	!
	!--
	!+-+-+
	!++
	! Abstract:FLD07
	!	^*(07) Wildcard\*
	!	.p
	!	The ^*Wildcard\* field provides the means to select designated items to be
	!	printed by entering a "Wildcard" value in this field.
	!
	! Index:
	!	.x Wildcard
	!
	!--
	!+-+-+
	!++
	! Abstract:FLD08
	!	^*(08) From Date\*
	!	.p
	!	The value entered in the ^*From Date\* field causes the worksheet to begin with
	!	the selected date.
	!	.p
	!	A blank setting causes the worksheet to begin with the first date in the file.
	!
	! Index:
	!	.x From Date
	!	.x Date>From
	!
	!--
	!+-+-+
	!++
	! Abstract:FLD09
	!	^*(09) Transaction Type\*
	!	.p
	!	The ^*Transaction Type\* field provides the means to enter the transaction
	!	type which will be printed on the worksheet.
	!
	! Index:
	!	.x Transaction Type
	!	.x Type>Transaction
	!
	!--
	!+-+-+
	!++
	! Abstract:FLD10
	!	^*(10) Price Type\*
	!	.p
	!	The ^*Price Type\* field provides the means to enter the price type which
	!	will be printed on the report.  A valid type must be entered.
	!
	! Index:
	!	.x Price Type
	!	.x Type>Price
	!
	!--
