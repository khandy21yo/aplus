1	%TITLE "Sales and Labor Worksheet"
	%SBTTL "RM_RPRT_SCHEDULE"
	%IDENT "V3.6a Calico"

	!
	! COPYRIGHT (C) 1986, 1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! ID:RM009
	!
	! Abstract:HELP
	!	.p
	!	The ^*Sales and Labor Worksheet\* program provides the means to print out a
	!	Sales and Labor worksheet. Contained in this worksheet is the following
	!	information:
	!	.b
	!	.lm 15
	!	.list 0,"*"
	!	.le
	!	Location
	!	.le
	!	Time
	!	.le
	!	Actual Sales
	!	.le
	!	Projected Sales
	!	.le
	!	Actual Labor
	!	.le
	!	Projected Labor
	!	.le
	!	Labor Dollars
	!	.le
	!	Labor Percentage
	!	.le
	!	From/To Name
	!	.els
	!
	! Index:
	!	.x Sales and Labor Worksheet
	!	.x Worksheet>Sales and Labor
	!
	! Option:
	!
	! Compile:
	!
	!	$ BAS RM_SOURCE:RM_RPRT_SCHEDULE/LINE
	!	$ LINK/EXE=RM_EXE: RM_RPRT_SCHEDULE, FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE RM_RPRT_SCHEDULE.OBJ;*
	!
	! Author:
	!
	!	10/18/87 - Frank F. Starman
	!
	! Modification History:
	!
	!	10/07/90 - Frank F. Starman
	!		Replace formulas for direct labor with tables from BK.
	!
	!	04/23/93 - Kevin Handy
	!		Clean up (Check)
	!
	!	10/04/93 - Kevin Handy
	!		Changed "=>" to ">=".
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	09/13/96 - Kevin Handy
	!		Reformat source code.
	!
	!	06/03/97 - Kevin Handy
	!		Use integer for #key
	!
	!	08/22/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!--
	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_REPORTX.HB"
	DECLARE			UTL_REPORTX_CDD		UTL_REPORTX

	%INCLUDE "SOURCE:[RM.OPEN]RM_HISTORY.HB"
	MAP	(RM_HISTORY)	RM_HISTORY_CDD		RM_HISTORY

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_LOCATION.HB"
	MAP	(UTL_LOCATION)	UTL_LOCATION_CDD	UTL_LOCATION

	DECLARE	STRING	TEST_TIME, &
			TEST_DATE

	DECLARE	LONG	TO_DATE1

	DIM	REAL	SALES(96%,1%)
	DIM     WORD    LABOR(96%)

	%PAGE

	ON ERROR GOTO 19000

	!
 Init:	! Initilize report
	!
	CALL OUTP_INITFROMFILE(UTL_REPORTX, 202%)

	GOTO ExitProgram IF UTL_REPORTX::STAT

	FROM.ITEM$ = EDIT$(UTL_REPORTX::OPTDEF(0%), 132%)
	TO.ITEM$ = EDIT$(UTL_REPORTX::OPTDEF(1%), 132%)
	WLDCRD$ = EDIT$(UTL_REPORTX::OPTDEF(2%), -1%)
	TODATE$ = DATE_STOREDATE(EDIT$(UTL_REPORTX::OPTDEF(4%), 132%))
	RATE = VAL(EDIT$(UTL_REPORTX::OPTDEF(5%), 132%))

	DAY.WEEK$(1%) = "M o n d a y      "
	DAY.WEEK$(2%) = "T u e s d a y    "
	DAY.WEEK$(3%) = "W e d n e s d a y"
	DAY.WEEK$(4%) = "T h u r s d a y  "
	DAY.WEEK$(5%) = "F r i d a y      "
	DAY.WEEK$(6%) = "S a t u r d a y  "
	DAY.WEEK$(7%) = "S u n d a y      "

	TO_DATE1= DATE_DAYCODE(TODATE$)

300	%INCLUDE "SOURCE:[RM.OPEN]RM_HISTORY.OPN"

310	%INCLUDE "SOURCE:[UTL.OPEN]UTL_LOCATION.OPN"

 ReportTitle:
	!
	! Title
	!
	TITLE$(1%) = "SALES  AND  LABOR  WORKSHEET"
	TITLE$(2%) = "Restaurant management system"
	TITLE$(3%) = ""

	!
	! Heading
	!
	TITLE$(5%) = " "

	%PAGE

17000	!******************************************************************
	! OUTPUT REPORT
	!******************************************************************

	IF FROM.ITEM$ = ""
	THEN
		RESET #UTL_LOCATION.CH%
	ELSE
		FIND #UTL_LOCATION.CH%, KEY#0% GE FROM.ITEM$, REGARDLESS
	END IF

 GetNextRec:
17020	!
	! Main loop starts here
	!
	GOTO ExitProgram IF UTL_REPORTX::STAT

	!
	! Get next record
	!
	GET #UTL_LOCATION.CH%, REGARDLESS

	GOTO GetNextRec IF WLDCRD$ <>"" AND &
		COMP_STRING(EDIT$(UTL_LOCATION::LOCATION,-1%), WLDCRD$) = 0%

	GOTO ExitTotal IF (UTL_LOCATION::LOCATION > TO.ITEM$) AND &
		TO.ITEM$ <> ""

 WeekDay:
	TEST_DATE = DATE_INVDCODE(TO_DATE1)
	HEADER.LINE1$ = PRNT_DATE(TEST_DATE,8%) + " " + &
		DAY.WEEK$(DATE_DAYOFWEEK(TO_DATE1))
	HEADER.LINE1$ = HEADER.LINE1$ + "     AveRate:"+ &
		FORMAT$(RATE,"###.##") + SPACE$(15%)

	TITLE$(4%) = LEFT("==== "+UTL_LOCATION::LOCATION+" "+ &
		EDIT$(UTL_LOCATION::LOCNAME,128%)+" "+ &
		STRING$(139%,61%),139%)+" "+HEADER.LINE1$

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 999%)

	!
	! Set initial values
	!
	LINE.TOP% = 96%
	LINE.BOT% = -1%

	FOR I%=0% TO 95%
		LABOR(I%)   = 0%
		SALES(I%,J%) = 0. FOR J%=0% TO 1%
	NEXT I%

	!
	! Select forecasting method
	! Projected sales

	FOR WEEK% = 1% TO 4%
		!
		! Get Next Date
		!
		TEST_DATE = DATE_INVDCODE(TO_DATE1 - 7%*WEEK%)

17025		FIND #RM_HISTORY.CH%, KEY#0% EQ "02"+UTL_LOCATION::LOCATION+ &
			TEST_DATE, REGARDLESS

		GET #RM_HISTORY.CH%, REGARDLESS

		DIFFTIM$ = TIME_ADD(RM_HISTORY::TIME_TO,"-", &
				PRNT_TIME(RM_HISTORY::TIME_FROM,1%))
		HOURS%   = VAL%(LEFT(DIFFTIM$,2%))
		MINUT%   = VAL%(MID(DIFFTIM$,4%,2%))
		HALF.HOURS% = 2% * HOURS% + SGN(MINUT%) + &
			INT(MINUT%/31%)
		HALF.HOURS% = 48% IF HOURS%=0%

		DIFFTIM$ = TIME_ADD(RM_HISTORY::TIME_FROM,"-","00:00:00")
		HOURS%   = VAL%(LEFT(DIFFTIM$,2%))
		MINUT%   = VAL%(MID(DIFFTIM$,4%,2%))
		FROM.HOURS% = 2% * HOURS% + SGN(MINUT%) + &
			INT(MINUT%/31%)

		I%=0%

		FOR LIN% = FROM.HOURS% TO FROM.HOURS%+HALF.HOURS%-1%
			SALES(LIN%,0%) = SALES(LIN%,0%)+ &
				RM_HISTORY::AMOUNT_QTY(I%)
			SALES(LIN%,1%) = SALES(LIN%,1%)+ 1.
			I%=I%+1%
		NEXT LIN%

		LINE.TOP% = FROM.HOURS% &
			IF LINE.TOP%>FROM.HOURS%
		LINE.BOT% = LIN% &
			IF LINE.BOT%<LIN%

17030	NEXT WEEK%

	FOR LIN%=LINE.TOP% TO LINE.BOT%
		SALES(LIN%,0%) = SALES(LIN%,0%)/SALES(LIN%,1%) &
			IF SALES(LIN%,1%)<>0.
	NEXT LIN%

	IF RATE <> 0.
	THEN
		!
		! Select forecasting method
		! Projected labor
		!

		BREAK.POINT% = 0%
		FOR LIN%=LINE.TOP% TO LINE.BOT%

			IF BREAK.POINT% = 0%
			THEN
				TEST_TIME = TIME_ADD("00:00:00","+", &
					FORMAT$(30%*(LIN%+1%),":####:"))
				BREAK.POINT%= -1% IF TEST_TIME >= "11:30:00"
			END IF

			IF BREAK.POINT% = 0%
			THEN
				LABOR(LIN%) = FNCREW%("BREAKFAST", &
					SALES(LIN%,0%))
			ELSE
				LABOR(LIN%) = FNCREW%("REGULAR",SALES(LIN%,0%))
			END IF

		NEXT LIN%
	END IF

17300	!
	! This is hard coded because JET wants it
	!
	LINE.TOP% = 12% IF LINE.TOP%>12%
	LINE.BOT% = 53% !IF LINE.BOT%<53%

	BREAK.SALES,DAY.SALES,PR.SALES,BREAK.LABOR,DAY.LABOR,PR.LABOR = 0.
	TEXT$ = "T i m e                  "
	FROM.LIN% = LINE.TOP%
	BREK%,DAY% = 0%

	FOR LIN%=LINE.TOP% TO LINE.BOT% STEP 2%

		TEST_TIME = TIME_ADD("00:00:00","+",FORMAT$(30%*LIN%,":####:"))
		TEXT$ = TEXT$ +	LEFT(TEST_TIME,2%)+"      "

		IF TEST_TIME >= "11:00:00" AND "11:59:00" >=TEST_TIME
		THEN
			BREK% = LIN%
			BREK% = LIN%-1% IF TEST_TIME<="11:30:00"
		END IF

		IF TEST_TIME >= "16:00:00" AND "16:59:00">=TEST_TIME
		THEN
			DAY% = LIN%
			DAY% = LIN%-1% IF TEST_TIME<="16:30:00"
		END IF

	NEXT LIN%

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)

	GOSUB 18000

	TEXT$ = "  From/To  N a m e       "

	FOR LIN%=LINE.TOP% TO LINE.BOT% STEP 2%
		TEXT$ = TEXT$ +	LEFT(TIME_ADD("00:00:00","+", &
			FORMAT$(30%*LIN%,":####:")),2%)+"      "
	NEXT LIN%
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)

	FOR I%=1% TO 35%
		TEXT$ = FORMAT$(I%,"<0>#")+"_______________________"
		TEXT$ = TEXT$ + "| . " FOR LIN%=FROM.LIN% TO LINE.BOT%
		TEXT$ = TEXT$ + "|_"+ FORMAT$(I%,"<0>#")

		CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
	NEXT I%

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 0%)

	FOR LIN%=LINE.TOP% TO LINE.BOT%

		IF LIN% <= BREK%
		THEN
			BREAK.SALES= BREAK.SALES + FUNC_ROUND(SALES(LIN%,0%),1%)
			BREAK.LABOR= BREAK.LABOR + LABOR(LIN%)
		END IF

		IF BREK% < LIN% AND LIN% <= DAY%
		THEN
			DAY.SALES = DAY.SALES + FUNC_ROUND(SALES(LIN%,0%),1%)
			DAY.LABOR = DAY.LABOR + LABOR(LIN%)
		END IF

	NEXT LIN%
	NIGHT.SALES = PR.SALES - BREAK.SALES - DAY.SALES
	NIGHT.LABOR = PR.LABOR - BREAK.LABOR - DAY.LABOR

	TEXT$ = "S u m m a r y             ProjSales   ProjLabor  "+ &
		"ActSales    ActLabor    "+ &
		"Labor$      Labor %          N o t e s:"
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, -1%)

	TEXT$ = "       OPEN-10:59        "+ &
		FORMAT$(BREAK.SALES,"   #######  ")+ &
		FORMAT$(BREAK.LABOR,"   ####.##  ")+ &
		"__________  __________  "+ &
		"__________  __________"
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, -2%)

	TEXT$ = "       11:00-15:29       "+ &
		FORMAT$(DAY.SALES,"   #######  ")+ &
		FORMAT$(DAY.LABOR,"   ####.##  ")+ &
		"__________  __________  "+ &
		"__________  __________"

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, -3%)

	TEXT$ = "       16:00-CLOS        "+ &
		FORMAT$(NIGHT.SALES,"   #######  ")+ &
		FORMAT$(NIGHT.LABOR,"   ####.##  ")+ &
		"__________  __________  "+ &
		"__________  __________"


	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, -4%)

	TEXT$ = "       Total             "+ &
		FORMAT$(PR.SALES,"   #######  ")+ &
		FORMAT$(PR.LABOR,"   ####.##  ")+ &
		"__________  __________  "+ &
		"__________  __________"


	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, -5%)

	GOTO ExitProgram IF UTL_REPORTX::STAT

	TO_DATE1 = TO_DATE1 + 1.
	H%=H%+1%
	GOTO WeekDay IF H%<7%

17350	!
	! Try for next record
	!
	GOTO GetNextRec

 ExitTotal:
17400	!
	! Handle end of report
	!

 ExitProgram:
	CALL OUTP_FINISH(UTL_REPORTX)

	!
	! Exit to next program or menu
	!
	IF TRM$(UTL_REPORTX::NEXTRUN) = ""
	THEN
		CALL SUBR_3EXITPROGRAM(SCOPE, "", "")
	ELSE
		CALL SUBR_3EXITPROGRAM(SCOPE, "RUN " + UTL_REPORTX::NEXTRUN, "")
	END IF

	%PAGE

18000	TEXT$ = "       Actual Sales      "
	FOR LIN%=FROM.LIN% TO LINE.BOT%
		TEXT$ = TEXT$ + "|___"
	NEXT LIN%
	TEXT$ = TEXT$ + "|"
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)

	TEXT$ = "       Projected Sales    "
	FOR LIN%=FROM.LIN% TO LINE.BOT%
		TEXT$ = TEXT$ + FORMAT$(FUNC_ROUND(SALES(LIN%,0%),0%),"####")
		PR.SALES= PR.SALES + FUNC_ROUND(SALES(LIN%,0%),1%)
	NEXT LIN%
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)

	TEXT$ = "       Actual Labor      "
	FOR LIN%=FROM.LIN% TO LINE.BOT%
		TEXT$ = TEXT$ + "|___"
	NEXT LIN%
	TEXT$ = TEXT$ + "|"
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)

	TEXT$ = "       Projected Labor  "
	FOR LIN%=FROM.LIN% TO LINE.BOT%
		TEXT$ = TEXT$ + FORMAT$(LABOR(LIN%),"  ##")
		PR.LABOR= PR.LABOR + LABOR(LIN%)
	NEXT LIN%
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)

	TEXT$ = "       Labor Dollars     "
	FOR LIN%=FROM.LIN% TO LINE.BOT%
		TEXT$ = TEXT$ + "|___"
	NEXT LIN%
	TEXT$ = TEXT$ + "|"
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)

	TEXT$ = "       Labor Percentage  "
	FOR LIN%=FROM.LIN% TO LINE.BOT%
		TEXT$ = TEXT$ + "|___"
	NEXT LIN%
	TEXT$ = TEXT$ + "|"
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)

	RETURN

	DEF FNCREW%(RANGE$,DOLL)

		IF RANGE$="BREAKFAST"
		THEN
			SELECT DOLL
			CASE < 39
				FNCREW% = 3%
			CASE < 55
				FNCREW% = 4%
			CASE < 78
				FNCREW% = 5%
			CASE < 95
				FNCREW% = 6%
			CASE < 107
				FNCREW% = 7%
			CASE < 142
				FNCREW% = 8%
			CASE < 155
				FNCREW% = 9%
			CASE < 190
				FNCREW% = 10%
			CASE ELSE
				FNCREW% = 11%
			END SELECT
		ELSE
			SELECT DOLL
			CASE < 48
				FNCREW% = 3%
			CASE < 91
				FNCREW% = 4%
			CASE < 127
				FNCREW% = 5%
			CASE < 133
				FNCREW% = 6%
			CASE < 158
				FNCREW% = 7%
			CASE < 162
				FNCREW% = 8%
			CASE < 204
				FNCREW% = 9%
			CASE < 232
				FNCREW% = 10%
			CASE < 299
				FNCREW% = 11%
			CASE < 310
				FNCREW% = 12%
			CASE < 316
				FNCREW% = 13%
			CASE < 358
				FNCREW% = 14%
			CASE < 379
				FNCREW% = 15%
			CASE < 409
				FNCREW% = 16%
			CASE < 474
				FNCREW% = 17%
			CASE < 505
				FNCREW% = 18%
			CASE < 554
				FNCREW% = 19%
			CASE < 586
				FNCREW% = 20%
			CASE ELSE
				FNCREW% = 21%
			END SELECT
		END IF

	FNEND

 HelpError:
	!******************************************************************
	! Help Message for an error
	!******************************************************************
	CALL HELP_34MESSAGE(SCOPE, NUM1$(ERL) + " " + ERT$(ERR), &
		"E", ERN$, FILENAME$, NUM1$(ERR))
	UTL_REPORTX::STAT = -1%
	GOTO ExitProgram

	%Page

19000	!******************************************************************
	! ERROR TRAPPING
	!******************************************************************

	SELECT ERR
	CASE 154%	! Locked record
		SLEEP 5%
		RESUME
	END SELECT

	FILENAME$ = ""
	SELECT ERL
	CASE 300%
		FILENAME$ = "RM_HISTORY"

	CASE 310%
		FILENAME$ = "UTL_LOCATION"

	CASE 17000%
		CALL ENTR_3MESSAGE(SCOPE, &
			"Unable to find beginning record!", 0%)
		RESUME ExitProgram

	CASE 17020%	! End of file
		RESUME ExitTotal IF ERR = 11%
		FILENAME$ = "UTL_LOCATION"

	CASE 17025%	! Can't find record
		RESUME 17030 IF ERR = 155%
		FILENAME$ = "RM_HISTORY"

	END SELECT

	!
	! Untrapped error
	!
	RESUME HelpError

32767	END
	!+-+-+
	!++
	! Abstract:FLD01
	!	^*(01) From Location\*
	!	.p
	!	The value entered in the ^*From Location\* field causes the worksheet to begin
	!	with the selected location.
	!	.p
	!	A blank setting causes the worksheet to begin with the first location in the
	!	file.
	!
	! Index:
	!	.x From Location
	!	.x Location>From
	!
	!--
	!+-+-+
	!++
	! Abstract:FLD02
	!	^*(02) To Location\*
	!	.p
	!	The value entered in the ^*To Location\* field causes the worksheet to end with
	!	the selected location.
	!	.p
	!	A blank setting causes the worksheet to print to the end of the file.
	!
	! Index:
	!	.x To Location
	!	.x Location>To
	!
	!--
	!+-+-+
	!++
	! Abstract:FLD03
	!	^*(03) Wildcard\*
	!	.p
	!	The ^*Wildcard\* field provides the means to select designated items to be
	!	printed by entering a "Wildcard" value in this field.
	!
	! Index:
	!	.x Wildcard
	!
	!--
	!+-+-+
	!++
	! Abstract:FLD05
	!	^*(05) Date\*
	!	.p
	!	The ^*Date\* field provides the means to enter the date for which the report
	!	will be printed.  The format for entry is MMDDYYYY or MMDDYY.
	!
	! Index:
	!	.x Date
	!
	!--
	!+-+-+
	!++
	! Abstract:FLD06
	!	^*(06) Rate\*
	!	.p
	!	The ^*Rate\* field contains the average hourly rate which is payed to employees
	!	for selected locations.
	!
	! Index:
	!	.x Rate
	!
	!--
