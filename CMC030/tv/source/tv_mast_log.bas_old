1	%TITLE "TV_MAST_LOG - TV Traffic Program Maintenance"
	%SBTTL "TV system"
	%IDENT "V3.6a Calico"

	!
	! COPYRIGHT (C) 1987, 1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	!
	! Abstract:
	!
	!	This program maintains the TV Traffic Program file.
	!
	! Index:
	!
	!	PROGRAM
	!
	! Input:
	!
	!
	! Output:
	!
	!
	! Example:
	!
	!
	! Environment:
	!
	!	VAX/VMS BASIC+2 V4.4
	!
	! Compile:
	!
	!	$ BAS TV_SOURCE:TV_MAST_LOG
	!	$ LINK/EXECUTABLE=TV_EXE:*.EXE TV_MAST_LOG, -
	!		FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE TV_MAST_LOG.OBJ;*
	!
	! Author:
	!
	!	11/11/87 - B. Craig Larsen
	!
	! Modification history:
	!
	!	11/20/87 - Kevin Handy
	!		Massive layout changes. Convert breaks to
	!		journal.
	!
	!	12/08/87 - Kevin Handy
	!		Convert logs into daily files.
	!
	!	12/30/87 - Frantisek Starman
	!		Added BREAK_TYPE table
	!
	!	02/02/88 - Kevin Handy
	!		Added journal for spots
	!
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	08/22/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!--
	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	%INCLUDE "FUNC_INCLUDE:TV_WINDOW.INC"

	!
	! Maps
	!
	MAP (SCHED_DATE) SCHED_DATE$ = 8%

	!
	! External functions
	!
	EXTERNAL LONG   FUNCTION MAIN_WINDOW

	%PAGE

	!*******************************************************************
	! Initilize maintainence
	!*******************************************************************

	CALL READ_INITIALIZE

	!
	! Set up for help
	!
	SCOPE::PRG_IDENT = "PROG"
	SCOPE::PRG_PROGRAM = "TV_MAST_LOG"
	SCOPE::PRG_ITEM = ""

	!
	! Ask for year
	!
	SMG_STATUS% = SMG$CREATE_VIRTUAL_DISPLAY &
	( &
		20%, &
		80%, &
		SMG_SCREEN_DATA% &
	)

	SMG_STATUS% = SMG$PUT_CHARS(SMG_SCREEN_DATA%, "Log date:", 11%, 30%)

	SMG_STATUS% = SMG$PASTE_VIRTUAL_DISPLAY &
	( &
		SMG_SCREEN_DATA%, &
		SCOPE::SMG_PBID, &
		1%, &
		1% &
	)

	!
	! Try entering the data
	!
	SCHED_DATE$ = DATE_TODAY

320	SCOPE::PRG_ITEM = "SCHED_DATE"

	SCHED_DATE$ = ENTR_3DATE(SCOPE, &
		SMG_SCREEN_DATA%, "11;43", "Schedule date", &
		SCHED_DATE$, 0%, "", "")

	!
	! Check input keys
	!
	SELECT SCOPE::SCOPE_EXIT
		!
		! Exit keys
		!
		CASE 3%, SMG$K_TRM_F10, SMG$K_TRM_CTRLZ
			GOTO ExitProgram

		!
		! Good keys
		!
		CASE 0%, 10%, 12%, 13%, SMG$K_TRM_DO

		!
		! Bad keys
		!
		CASE ELSE
			CALL ENTR_3BADKEY(SCOPE, SCOPE::SCOPE_EXIT)
			GOTO 320
	END SELECT

400	SMG_STATUS% = SMG$DELETE_VIRTUAL_DISPLAY(SMG_SCREEN_DATA%)

	!*******************************************************************
	! Handle main program
	!*******************************************************************

	V% = MAIN_WINDOW(TV_MAIN_LOG_PROGRAM.ID, "")

	!******************************************************************
	! End of the program
	!******************************************************************

 ExitProgram:
	CALL SUBR_3EXITPROGRAM(SCOPE, "", "")

19990	END



20000	FUNCTION LONG MAINT_GROUP(CDD_WINDOW_CDD SMG_WINDOW, &
		LONG MOPTION, LONG MLOOP, LONG MFLAG, STRING MVALUE)

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	%INCLUDE "FUNC_INCLUDE:TV_WINDOW.INC"
	%INCLUDE "SOURCE:[CDD.OPEN]CDD_WINDOW.HB"

	EXTERNAL LONG FUNCTION TV_MAIN_LOG_PROGRAM
	EXTERNAL LONG FUNCTION TV_MAIN_LOG_SOURCE
	EXTERNAL LONG FUNCTION TV_MAIN_LOG_TYPE
	EXTERNAL LONG FUNCTION TV_MAIN_LOG_BREAK
	EXTERNAL LONG FUNCTION TV_MAIN_BREAK_TYPE
	EXTERNAL LONG FUNCTION TV_MAIN_CUSTOM
	EXTERNAL LONG FUNCTION TV_MAIN_LOGSPOTS
	EXTERNAL LONG FUNCTION TV_MAIN_CUSCONF
	EXTERNAL LONG FUNCTION TV_MAIN_SPOTS_FLAG
	EXTERNAL LONG FUNCTION TV_MAIN_LOG_CLASS

	%PAGE

	!
	! Process the proper window
	!
	SELECT SMG_WINDOW::IDENT
	CASE TV_MAIN_CUSTOM.ID
		MAINT_GROUP = TV_MAIN_CUSTOM(SMG_WINDOW, &
			MOPTION, MLOOP, MFLAG, MVALUE)

	CASE TV_MAIN_CUSCONF.ID
		MAINT_GROUP = TV_MAIN_CUSCONF(SMG_WINDOW, &
			MOPTION, MLOOP, MFLAG, MVALUE)

	CASE TV_MAIN_LOGSPOTS.ID
		MAINT_GROUP = TV_MAIN_LOGSPOTS(SMG_WINDOW, &
			MOPTION, MLOOP, MFLAG, MVALUE)

	CASE TV_MAIN_SPOTS_FLAG.ID
		MAINT_GROUP = TV_MAIN_SPOTS_FLAG(SMG_WINDOW, &
			MOPTION, MLOOP, MFLAG, MVALUE)

	CASE TV_MAIN_LOG_CLASS.ID
		MAINT_GROUP = TV_MAIN_LOG_CLASS( SMG_WINDOW, &
			MOPTION, MLOOP, MFLAG, MVALUE )

	CASE TV_MAIN_LOG_PROGRAM.ID
		MAINT_GROUP = TV_MAIN_LOG_PROGRAM(SMG_WINDOW, &
			MOPTION, MLOOP, MFLAG, MVALUE)

	CASE TV_MAIN_LOG_TYPE.ID
		MAINT_GROUP = TV_MAIN_LOG_TYPE(SMG_WINDOW, &
			MOPTION, MLOOP, MFLAG, MVALUE)

	CASE TV_MAIN_LOG_SOURCE.ID
		MAINT_GROUP = TV_MAIN_LOG_SOURCE(SMG_WINDOW, &
			MOPTION, MLOOP, MFLAG, MVALUE)

	CASE TV_MAIN_BREAK_TYPE.ID
		MAINT_GROUP = TV_MAIN_BREAK_TYPE(SMG_WINDOW, &
			MOPTION, MLOOP, MFLAG, MVALUE)

	CASE TV_MAIN_LOG_BREAK.ID
		MAINT_GROUP = TV_MAIN_LOG_BREAK(SMG_WINDOW, &
			MOPTION, MLOOP, MFLAG, MVALUE)

	END SELECT

32767	END FUNCTION
