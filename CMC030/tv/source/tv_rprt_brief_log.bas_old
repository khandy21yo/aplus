1	%TITLE "TV_RPRT_BRIEF_LOG - TV Traffic Program Report"
	%SBTTL "TV System"
	%IDENT "V3.6a Calico"

	!
	! COPYRIGHT (C) 1987, 1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	!
	! Abstract:
	!
	!	This program prints the Program/Break files.
	!
	! Index:
	!
	!
	! Input:
	!
	!
	! Output:
	!
	!
	! Example:
	!
	!
	! Environment:
	!
	!	VAX/VMS BASIC+2 V4.4
	!
	! Author:
	!
	!	12/07/87 - Kevin handy
	!
	! Compile:
	!
	!	$ BAS TV_SOURCE:TV_RPRT_BRIEF_LOG
	!	$ LINK/EXECUTABLE=TV_EXE:*.EXE TV_RPRT_BRIEF_LOG, -
	!		FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE TV_RPRT_BRIEF_LOG.OBJ;*
	!
	! Modification history:
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	08/22/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!--
	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE


 !	%INCLUDE %FROM %CDD "CDD$TOP.UTL.UTL_REPORTX"
	%INCLUDE "SOURCE:[UTL.OPEN]UTL_REPORTX.HB"
	DECLARE UTL_REPORTX_CDD	UTL_REPORTX

 !	%INCLUDE %FROM %CDD "CDD$TOP.TV.TV_LOG_PROGRAM"
	%INCLUDE "SOURCE:[TV.OPEN]TV_LOG_PROGRAM.HB"
	MAP	(TV_LOG_PROGRAM)	TV_LOG_PROGRAM_CDD	TV_LOG_PROGRAM

 !	%INCLUDE %FROM %CDD "CDD$TOP.TV.TV_LOG_BREAK"
	%INCLUDE "SOURCE:[TV.OPEN]TV_LOG_BREAK.HB"
	MAP	(TV_LOG_BREAK)		TV_LOG_BREAK_CDD	TV_LOG_BREAK

 !	%INCLUDE %FROM %CDD "CDD$TOP.TV.TV_LOGSPOTS"
	%INCLUDE "SOURCE:[TV.OPEN]TV_LOGSPOTS.HB"
	MAP	(TV_LOGSPOTS)		TV_LOGSPOTS_CDD		TV_LOGSPOTS

 !	%INCLUDE %FROM %CDD "CDD$TOP.TV.TV_BREAK_TYPE"
	%INCLUDE "SOURCE:[TV.OPEN]TV_BREAK_TYPE.HB"
	MAP	(TV_BREAK_TYPE)		TV_BREAK_TYPE_CDD	TV_BREAK_TYPE

	!
	! External functions
	!
	EXTERNAL STRING  FUNCTION PRNT_TIME
	EXTERNAL LONG    FUNCTION DATE_DAYCODE
	EXTERNAL LONG    FUNCTION DATE_DAYOFWEEK
	EXTERNAL LONG    FUNCTION TIME_CODE
	EXTERNAL STRING  FUNCTION TIME_INVCODE
	EXTERNAL STRING  FUNCTION DATE_STOREDATE
	EXTERNAL STRING  FUNCTION TIME_STORETIME
	EXTERNAL STRING  FUNCTION PRNT_FANCYDATE

	%PAGE

	ON ERROR GOTO 19000

 Init:	!
	! Initilize report
	!
	CALL OUTP_INITFROMFILE(UTL_REPORTX, 132%)

	GOTO ExitProgram IF UTL_REPORTX::STAT

	!
	! Set up from user input
	!
	FROM.ITEM$ = EDIT$(UTL_REPORTX::OPTDEF(0%), 132%)
	TO.ITEM$ = EDIT$(UTL_REPORTX::OPTDEF(1%), 132%)
	SORTBY$ = EDIT$(UTL_REPORTX::OPTDEF(2%), -1%)
	SCHED_DATE$ = DATE_STOREDATE(TRM$(UTL_REPORTX::OPTDEF(3%)))

	SELECT SORTBY$
	!
	! By date
	!
	CASE "TI"
		K_NUM% = 1%
		K_STYLE$ = "Time"
		FROM.ITEM$ = TIME_STORETIME(FROM.ITEM$, "H")
		TO.ITEM$ = TIME_STORETIME(TO.ITEM$, "H")

	!
	! By program number
	!
	CASE ELSE
		K_NUM% = 0%
		K_STYLE$ = "Program Number"
	END SELECT

300	!
	! Open TV_LOG_PROGRAM file
	!
	%INCLUDE "SOURCE:[TV.OPEN]TV_LOG_PROGRAM.OPN"

310	!
	! Open TV_LOG_BREAK file
	!
	%INCLUDE "SOURCE:[TV.OPEN]TV_LOG_BREAK.OPN"

320	!
	! Open TV_LOGSPOTS file
	!
	%INCLUDE "SOURCE:[TV.OPEN]TV_LOGSPOTS.OPN"

330	!
	! Open break type file
	!
	%INCLUDE "SOURCE:[TV.OPEN]TV_BREAK_TYPE.OPN"

1000	!
	! Set up title
	!
 ReportTitle:
	EC$(0%) = "8"
	EC$(1%) = "Monday"
	EC$(2%) = "Tuesday"
	EC$(3%) = "Wednesday"
	EC$(4%) = "Thursday"
	EC$(5%) = "Friday"
	EC$(6%) = "Saturday"
	EC$(7%) = "Sunday"

	!
	! Title
	!
	TITLE$(1%) = "Brief Log for " + PRNT_FANCYDATE(SCHED_DATE$) + " (" + &
		EC$(DATE_DAYOFWEEK(DATE_DAYCODE(SCHED_DATE$))) + ")"
	TITLE$(2%) = "TV Traffic System"
	TITLE$(3%) = "Printed by " + K_STYLE$
	TITLE$(4%) = ""

	!
	! Heading
	!
	TITLE$(5%) = ""

	%PAGE

17000	!******************************************************************
	! OUTPUT REPORT
	!******************************************************************

	IF FROM.ITEM$ = ""
	THEN
		RESET #TV_LOG_PROGRAM.CH%, KEY#K_NUM%
	ELSE
		FIND #TV_LOG_PROGRAM.CH%, KEY#K_NUM% GE FROM.ITEM$, REGARDLESS
	END IF

	!
	! Initialize totals
	!
	TOTAL_PROGRAMS% = 0%
	TOTAL_BREAKS% = 0%
	TOTAL_BREAKS_LENGTH% = 0%
	TOTAL_SPOTS% = 0%
	TOTAL_SPOTS_LENGTH% = 0%
	TOTAL_DOLLARS = 0.0

 GetNextRec:
17020	!
	! Main loop starts here
	!
	GOTO ExitProgram IF UTL_REPORTX::STAT

	!
	! Get next record
	!
	GET #TV_LOG_PROGRAM.CH%, REGARDLESS

	!
	! Check current record
	!
	SELECT SORTBY$
	!
	! By time
	!
	CASE "TI"
		GOTO ExitTotal IF (TV_LOG_PROGRAM::START_TIME > TO.ITEM$) AND &
			TO.ITEM$ <> ""
	!
	! By program number
	!
	CASE ELSE
		GOTO ExitTotal IF (TV_LOG_PROGRAM::PRGNUM > TO.ITEM$) AND &
			TO.ITEM$ <> ""
	END SELECT

	!
	! Print out one line
	!
	TEXT$ = "Program    Run Time " + &
		"Title                          So   Ty   " + &
		"Length   Comment"

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 8%)
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	TEXT$ = TV_LOG_PROGRAM::PRGNUM + " " + &
		PRNT_TIME(TV_LOG_PROGRAM::START_TIME, 0%) + " " + &
		LEFT$(TV_LOG_PROGRAM::TITLE, 30%) + " " + &
		TV_LOG_PROGRAM::SOURCE + " " + &
		TV_LOG_PROGRAM::PTYPE + " " + &
		PRNT_TIME(TV_LOG_PROGRAM::LENGTH, 0%) + " " + &
		LEFT$(TV_LOG_PROGRAM::COMMENT, 30%)

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	TOTAL_PROGRAMS% = TOTAL_PROGRAMS% + 1%

17030	!*******************************************************************
	! Handle Displaying breaks
	!*******************************************************************

	FIND #TV_LOG_BREAK.CH%, KEY#0% GE TV_LOG_PROGRAM::PRGNUM, &
		REGARDLESS

17040	GET #TV_LOG_BREAK.CH%, REGARDLESS

17050	!
	! Find out what type of break this is if possible
	!
	GET #TV_BREAK_TYPE.CH%, KEY#0 EQ TV_LOG_BREAK::BRKTYPE, REGARDLESS

17060	IF TV_LOG_BREAK::PRGNUM = TV_LOG_PROGRAM::PRGNUM
	THEN
		!
		! Print a title for the breaks if not done yet.
		!
		TEXT$ = "      Break    " + &
			"Desciption                     Ty " + &
			"Length   Prior Match    Comment"

		CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 0%)
		CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 6%)
		GOTO ExitProgram IF UTL_REPORTX::STAT

		TEXT$ = "      " + &
			PRNT_TIME(TV_LOG_BREAK::SCH_TIME, 0%) + " " + &
			LEFT$(TV_LOG_BREAK::DESCR, 30%) + " " + &
			TV_LOG_BREAK::BRKTYPE + " " + &
			PRNT_TIME(TV_LOG_BREAK::LENGTH, 0%) + &
			FORMAT$(TV_LOG_BREAK::PRIORITY, " ##### ") + &
			TV_LOG_BREAK::MATCH + " " + &
			LEFT$(TV_LOG_BREAK::COMMENT, 30%)

		CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
		GOTO ExitProgram IF UTL_REPORTX::STAT

		TOTAL_BREAKS% = TOTAL_BREAKS% + 1%
		TOTAL_BREAKS_LENGTH% = TOTAL_BREAKS_LENGTH% + &
			TIME_CODE(TV_LOG_BREAK::LENGTH)

		GOSUB GetSpots

		GOTO 17040
	END IF

17080	!
	! Try for next record
	!
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", -6%)
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), STRING$(132%, ASCII("=")), -6%)
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", -6%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	GOTO GetNextRec

 GetSpots:
17100	!*******************************************************************
	! Handle Displaying breaks
	!*******************************************************************

	TOTAL_AVAILS% = TIME_CODE(TV_LOG_BREAK::LENGTH)

	SPOTS_FLAG% = -1%

	FIND #TV_LOGSPOTS.CH%, &
		KEY#1% GE TV_LOG_BREAK::SCH_TIME, &
		REGARDLESS

	!
	! Print a title for the breaks if not done yet.
	!
	TEXT$ = "            Spot     Customer   Form No. " + &
		"Sked  Length       Rate Fl Code Cart      Cut  Description"

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 4%)
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT


17110	GET #TV_LOGSPOTS.CH%, REGARDLESS

	IF (TV_LOGSPOTS::SCH_TIME = TV_LOG_BREAK::SCH_TIME)
	THEN
		TEXT$ = "            " + &
			PRNT_TIME(TV_LOGSPOTS::SCH_TIME, 0%) + " " + &
			TV_LOGSPOTS::CUSNUM + " " + &
			TV_LOGSPOTS::FRMNUM + "  " + &
			TV_LOGSPOTS::SKEDNUM + "  " + &
			PRNT_TIME(TV_LOGSPOTS::LENGTH, 0%) + " " + &
			FORMAT$(TV_LOGSPOTS::RATE, "$$####.##") + " " + &
			TV_LOGSPOTS::SPOTS_FLAG + "  " + &
			TV_LOGSPOTS::SPOTS_CODE + "   " + &
			TV_LOGSPOTS::CARTNUM + " " + &
			TV_LOGSPOTS::CUTNUM + " " + &
			TV_LOGSPOTS::DESCR

		CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
		GOTO ExitProgram IF UTL_REPORTX::STAT

		TOTAL_AVAILS% = TOTAL_AVAILS% - TIME_CODE(TV_LOGSPOTS::LENGTH)
		TOTAL_SPOTS% = TOTAL_SPOTS% + 1%
		TOTAL_SPOTS_LENGTH% = TOTAL_SPOTS_LENGTH% + &
			TIME_CODE(TV_LOGSPOTS::LENGTH)
		TOTAL_DOLLARS = TOTAL_DOLLARS + TV_LOGSPOTS::RATE

		GOTO 17110
	END IF

17180	IF (TOTAL_AVAILS% <> 0%) AND &
		(INSTR(1%, "023", TV_BREAK_TYPE::BFLAG) <> 0%)
	THEN
		IF TOTAL_AVAILS% > 0%
		THEN
			TEMP$ = " ** Time remaining **     "
		ELSE
			TEMP$ = " ** Overfull break **     "
			TOTAL_AVAILS% = -TOTAL_AVAILS%
		END IF

		TEXT$ = "            " + &
			PRNT_TIME(TV_LOG_BREAK::SCH_TIME, 0%) + &
			TEMP$ + &
			PRNT_TIME(TIME_INVCODE(TOTAL_AVAILS%), 0%)

		CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
	END IF

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	RETURN

 ExitTotal:
	!
	! Handle end of report
	!
	TEXT$ = "Total Programs      " + FORMAT$(TOTAL_PROGRAMS%, "#####")
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 10%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	TEXT$ = "Total Breaks        " + FORMAT$(TOTAL_BREAKS%, "#####") + &
		"  " + PRNT_TIME(TIME_INVCODE(TOTAL_BREAKS_LENGTH%), 0%)
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)

	TEXT$ = "Total Spots         " + FORMAT$(TOTAL_SPOTS%, "#####") + &
		"  " + PRNT_TIME(TIME_INVCODE(TOTAL_SPOTS_LENGTH%), 0%) + &
		"  " + FORMAT$(TOTAL_DOLLARS, "$$######.##")
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)

	TEXT$ = "Total Avails               " + &
		PRNT_TIME(TIME_INVCODE(TOTAL_BREAKS_LENGTH% - TOTAL_SPOTS_LENGTH%), 0%)
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)


 ExitProgram:
	CALL OUTP_FINISH(UTL_REPORTX)

	!
	! Exit to next program or menu
	!
	IF TRM$(UTL_REPORTX::NEXTRUN) = ""
	THEN
		CALL SUBR_3EXITPROGRAM(SCOPE, "", "")
	ELSE
		CALL SUBR_3EXITPROGRAM(SCOPE, "RUN " + UTL_REPORTX::NEXTRUN, "")
	END IF

	%PAGE

 HelpError:
	!******************************************************************
	! Help Message for an error
	!******************************************************************
	CALL HELP_3MESSAGE(SCOPE, ERN$ + " " + NUM1$(ERL) + " " + ERT$(ERR), &
		"ERR", PROGRAM$, "ERROR" + NUM1$(ERR))
	UTL_REPORTX::STAT = -1%
	GOTO ExitProgram

	%Page

19000	!******************************************************************
	! ERROR TRAPPING
	!******************************************************************

	SELECT ERR
	!
	! Record locked
	!
	CASE 154%
		SLEEP 1%
		RESUME
	END SELECT

	SELECT ERL
	CASE 300%, 17000%
		PROGRAM$ = "TV_LOG_PROGRAM"
		RESUME HelpError

	CASE 320%
		RESUME 330 IF ERR = 5%

	!
	! End of LOG_PROGRAM file
	!
	CASE 17020%
		RESUME ExitTotal IF ERR = 11%

	!
	! Ran out of breaks
	!
	CASE 17030%, 17040%
		RESUME 17080

	!
	! Unable to determine break type
	!
	CASE 17050%
		TV_BREAK_TYPE::BTYPE = TV_LOG_BREAK::BRKTYPE
		TV_BREAK_TYPE::DESCR = ""
		TV_BREAK_TYPE::BFLAG = "0"
		RESUME 17060

	!
	! Ran out of spots
	!
	CASE 17100%, 17110%
		RESUME 17180

	END SELECT

	!
	! Untrapped error
	!
	PROGRAM$ = SCOPE::PRG_PROGRAM
	RESUME HelpError

32767	END
