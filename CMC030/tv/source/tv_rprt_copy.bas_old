1	%TITLE "TV_RPRT_COPY - TV Traffic Copy Master File"
	%SBTTL "TV System"
	%IDENT "V3.6a Calico"

	!
	! COPYRIGHT (C) 1987, 1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	!
	! Abstract:
	!
	!	This program prints the Copy file.
	!
	! Index:
	!
	!
	! Input:
	!
	!
	! Output:
	!
	!
	! Example:
	!
	!
	! Environment:
	!
	!	VAX/VMS BASIC+2 V4.4
	!
	! Author:
	!
	!	12/29/87 - Kevin Handy
	!
	! Compile:
	!
	!	$ BAS TV_SOURCE:TV_RPRT_COPY
	!	$ LINK/EXECUTABLE=TV_EXE:*.EXE TV_RPRT_COPY, -
	!		FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE TV_RPRT_COPY.OBJ;*
	!
	! Modification history:
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	08/22/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!--
	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE


	%INCLUDE "SOURCE:[UTL.OPEN]UTL_REPORTX.HB"
	DECLARE		UTL_REPORTX_CDD		UTL_REPORTX

	%INCLUDE "SOURCE:[TV.OPEN]TV_COPY_INSTR.HB"
	MAP	(TV_COPY_INSTR)		TV_COPY_INSTR_CDD	TV_COPY_INSTR

	%INCLUDE "SOURCE:[TV.OPEN]TV_COPY_SPOTS.HB"
	MAP	(TV_COPY_SPOTS)		TV_COPY_SPOTS_CDD	TV_COPY_SPOTS

	!
	! External functions
	!
	EXTERNAL STRING  FUNCTION PRNT_DATE
	EXTERNAL STRING  FUNCTION PRNT_TIME

	%PAGE

	ON ERROR GOTO 19000

 Init:	!
	! Initilize report
	!
	CALL OUTP_INITFROMFILE(UTL_REPORTX, 80%)

	GOTO ExitProgram IF UTL_REPORTX::STAT

	!
	! Set up from user input
	!
	FROM.ITEM$	= EDIT$(UTL_REPORTX::OPTDEF(0%), 132%)
	TO.ITEM$	= EDIT$(UTL_REPORTX::OPTDEF(1%), 132%)

300	!
	! Open TV_COPY_INSTR file
	!
	%INCLUDE "SOURCE:[TV.OPEN]TV_COPY_INSTR.OPN"

	%INCLUDE "SOURCE:[TV.OPEN]TV_COPY_SPOTS.OPN"

 ReportTitle:
	!
	! Title
	!
	TITLE$(1%) = "Copy File List"
	TITLE$(2%) = "TV Traffic System"
	TITLE$(3%) = ""

	TITLE$(4%) = "Order   Seq    From       To       " + &
		"Length    From      To    Rotation"
	TITLE$(5%) = ""

	%PAGE

17000	!******************************************************************
	! OUTPUT REPORT
	!******************************************************************

	IF FROM.ITEM$ = ""
	THEN
		RESET #TV_COPY_INSTR.CH%
	ELSE
		FIND #TV_COPY_INSTR.CH%, KEY #0% GE FROM.ITEM$, REGARDLESS
	END IF

 GetNextRec:
17020	!
	! Main loop starts here
	!
	GOTO ExitProgram IF UTL_REPORTX::STAT

	!
	! Get next record
	!
	GET #TV_COPY_INSTR.CH%, REGARDLESS

	!
	! Check current record
	!
	GOTO ExitTotal IF (TV_COPY_INSTR::FRMNUM > TO.ITEM$) AND &
		TO.ITEM$ <> ""

	!
	! Print out one line
	!
	TEXT$ = TV_COPY_INSTR::FRMNUM + " " + &
		TV_COPY_INSTR::SEQNUM + " " + &
		PRNT_DATE(TV_COPY_INSTR::FROM_DATE, 8%) + "-" + &
		PRNT_DATE(TV_COPY_INSTR::TO_DATE, 8%) + " " + &
		PRNT_TIME(TV_COPY_INSTR::LENGTH, 0%) + " " + &
		PRNT_TIME(TV_COPY_INSTR::FROM_TIME, 0%) + "-" + &
		PRNT_TIME(TV_COPY_INSTR::TO_TIME, 0%) + " " + &
		TV_COPY_INSTR::SPOT_ROTATION

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	!
	! An extra blank line
	!
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

17100	!
	! Try for any spots
	!
	FIND #TV_COPY_SPOTS.CH%, &
		KEY #0% GE TV_COPY_INSTR::FRMNUM + TV_COPY_INSTR::SEQNUM
	TITLE_FLAG% = -1%

17110	!
	! Read in one spot
	!
	GET #TV_COPY_SPOTS.CH%

	!
	! If it matches the header, print it out and try for next one.
	!
	IF (TV_COPY_INSTR::FRMNUM = TV_COPY_SPOTS::FRMNUM) AND &
		(TV_COPY_INSTR::SEQNUM = TV_COPY_SPOTS::SEQNUM)
	THEN
		IF TITLE_FLAG%
		THEN
			TITLE_FLAG% = 0%

			TEXT$ = "       Number Cart no.  " + &
				"Agency cart no.      Descr"

			CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
			GOTO ExitProgram IF UTL_REPORTX::STAT
		END IF

		TEXT$ = "           " + &
			TV_COPY_SPOTS::SPOT_NUM + " " + &
			TV_COPY_SPOTS::CART_NUM + " " + &
			TV_COPY_SPOTS::AGENCY_CART + " " + &
			TV_COPY_SPOTS::DESCR

		CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
		GOTO ExitProgram IF UTL_REPORTX::STAT

		GOTO 17110
	END IF

17200	!
	! Try for next record
	!
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	GOTO GetNextRec

 ExitTotal:
	!
	! Handle end of report
	!

 ExitProgram:
	CALL OUTP_FINISH(UTL_REPORTX)

	!
	! Exit to next program or menu
	!
	IF TRM$(UTL_REPORTX::NEXTRUN) = ""
	THEN
		CALL SUBR_3EXITPROGRAM(SCOPE, "", "")
	ELSE
		CALL SUBR_3EXITPROGRAM(SCOPE, "RUN " + UTL_REPORTX::NEXTRUN, "")
	END IF

	%PAGE

 HelpError:
	!******************************************************************
	! Help Message for an error
	!******************************************************************
	CALL HELP_3MESSAGE(SCOPE, ERN$ + " " + NUM1$(ERL) + " " + ERT$(ERR), &
		"ERR", PROGRAM$, "ERROR" + NUM1$(ERR))
	UTL_REPORTX::STAT = -1%
	GOTO ExitProgram

	%Page

19000	!******************************************************************
	! ERROR TRAPPING
	!******************************************************************

	SELECT ERR
	CASE 154%	! Locked record
		SLEEP 1%
		RESUME
	END SELECT

	SELECT ERL
	CASE 300%, 17000%
		PROGRAM$ = "TV_COPY_INSTR"
		RESUME HelpError

	CASE 17020%	! End of file
		RESUME ExitTotal IF ERR = 11%

	!
	! End of copy_spots
	!
	CASE 17100%, 17110%
		RESUME 17200

	END SELECT

	!
	! Untrapped error
	!
	PROGRAM$ = SCOPE::PRG_PROGRAM
	RESUME HelpError

32767	END
