1	%TITLE "TV_RPRT_PROGRAM - TV Traffic Program Report"
	%SBTTL "TV System"
	%IDENT "V3.6a Calico"

	!
	! COPYRIGHT (C) 1987, 1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	!
	! Abstract:
	!
	!	This program prints the Program/Break files.
	!
	! Index:
	!
	!
	! Input:
	!
	!
	! Output:
	!
	!
	! Example:
	!
	!
	! Environment:
	!
	!	VAX/VMS BASIC+2 V4.4
	!
	! Author:
	!
	!	12/11/87 - Kevin Handy
	!
	! Compile:
	!
	!	$ BAS TV_SOURCE:TV_RPRT_PROGRAM
	!	$ LINK/EXECUTABLE=TV_EXE:*.EXE TV_RPRT_PROGRAM, -
	!		FUNC_LIB:CMCLINK/OPTION
	!	$ DELETE TV_RPRT_PROGRAM.OBJ;*
	!
	! Modification history:
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	08/22/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!--
	%PAGE

	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE


 !	%INCLUDE %FROM %CDD "CDD$TOP.UTL.UTL_REPORTX"
	%INCLUDE "SOURCE:[UTL.OPEN]UTL_REPORTX.HB"
	DECLARE		UTL_REPORTX_CDD UTL_REPORTX

 !	%INCLUDE %FROM %CDD "CDD$TOP.TV.TV_PROGRAM"
	%INCLUDE "SOURCE:[TV.OPEN]TV_PROGRAM.HB"
	MAP	(TV_PROGRAM)	TV_PROGRAM_CDD	TV_PROGRAM

 !	%INCLUDE %FROM %CDD "CDD$TOP.TV.TV_BREAK"
	%INCLUDE "SOURCE:[TV.OPEN]TV_BREAK.HB"
	MAP	(TV_BREAK)	TV_BREAK_CDD	TV_BREAK

	!
	! External functions
	!
	EXTERNAL STRING  FUNCTION PRNT_DATE
	EXTERNAL STRING  FUNCTION PRNT_TIME

	%PAGE

	ON ERROR GOTO 19000

 Init:	!
	! Initilize report
	!
	CALL OUTP_INITFROMFILE(UTL_REPORTX, 132%)

	GOTO ExitProgram IF UTL_REPORTX::STAT

	!
	! Set up from user input
	!
	FROM.ITEM$ = EDIT$(UTL_REPORTX::OPTDEF(0%), 132%)
	TO.ITEM$ = EDIT$(UTL_REPORTX::OPTDEF(1%), 132%)

300	!
	! Open TV_PROGRAM file
	!
	%INCLUDE "SOURCE:[TV.OPEN]TV_PROGRAM.OPN"

310	!
	! Open TV_LOG_BREAL file
	!
	%INCLUDE "SOURCE:[TV.OPEN]TV_BREAK.OPN"

 ReportTitle:
	!
	! Title
	!
	TITLE$(1%) = "Program File List"
	TITLE$(2%) = "TV Traffic System"
	TITLE$(3%) = ""

	!
	! Heading
	!
	TITLE$(4%) = ""

	EC$(0%) = "8"
	EC$(1%) = "Monday"	\ EC1$(1%) = "Mo"
	EC$(2%) = "Tuesday"	\ EC1$(2%) = "Tu"
	EC$(3%) = "Wednesday"	\ EC1$(3%) = "We"
	EC$(4%) = "Thursday"	\ EC1$(4%) = "Th"
	EC$(5%) = "Friday"	\ EC1$(5%) = "Fr"
	EC$(6%) = "Saturday"	\ EC1$(6%) = "Sa"
	EC$(7%) = "Sunday"	\ EC1$(7%) = "Su"

	%PAGE

17000	!******************************************************************
	! OUTPUT REPORT
	!******************************************************************

	IF FROM.ITEM$ = ""
	THEN
		RESET #TV_PROGRAM.CH%
	ELSE
		FIND #TV_PROGRAM.CH%, KEY#0% GE FROM.ITEM$, REGARDLESS
	END IF

 GetNextRec:
17020	!
	! Main loop starts here
	!
	GOTO ExitProgram IF UTL_REPORTX::STAT

	!
	! Get next record
	!
	GET #TV_PROGRAM.CH%, REGARDLESS

	!
	! Check current record
	!
	GOTO ExitTotal IF (TV_PROGRAM::PRGNUM > TO.ITEM$) AND &
		TO.ITEM$ <> ""

	!
	! Print out one line
	!
	TEXT$ = "Program      Start date End date  " + &
		"Title                          So Ty " + &
		"Length   Cutaway    Comment"

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 6%)
	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 5%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

	TEXT$ = TV_PROGRAM::PRGNUM + " " + &
		PRNT_DATE(TV_PROGRAM::FROM_DATE, 8%) + " " + &
		PRNT_DATE(TV_PROGRAM::TO_DATE, 8%) + " " + &
		LEFT$(TV_PROGRAM::TITLE, 30%) + " " + &
		TV_PROGRAM::SOURCE + " " + &
		TV_PROGRAM::PTYPE + " " + &
		PRNT_TIME(TV_PROGRAM::LENGTH, 0%) + " " + &
		TV_PROGRAM::CUTAWAY + " " + &
		LEFT$(TV_PROGRAM::COMMENT, 30%)

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)

	!
	! Display run times
	!
	TEMP$ = "  Start times: "
	FOR LOOP% = 0% TO 6%
		IF (TV_PROGRAM::START_TIME(LOOP%) = "") OR &
			(TV_PROGRAM::START_TIME(LOOP%) = "000000")
		THEN
			TEMP$ = TEMP$ + "             "
		ELSE
			TEMP$ = TEMP$ + EC1$(LOOP% + 1%) + " " + &
				PRNT_TIME(TV_PROGRAM::START_TIME(LOOP%), 0%) + "  "
		END IF
	NEXT LOOP%

	CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEMP$, 0%)
	GOTO ExitProgram IF UTL_REPORTX::STAT

17030	!*******************************************************************
	! Handle Displaying breaks
	!*******************************************************************

	FIND #TV_BREAK.CH%, KEY#0 GE TV_PROGRAM::PRGNUM, &
		REGARDLESS

	BREAK_FLAG% = -1%

17040	GET #TV_BREAK.CH%, REGARDLESS

	IF TV_BREAK::PRGNUM = TV_PROGRAM::PRGNUM
	THEN
		!
		! Print a title for the breaks if not done yet.
		!
		IF BREAK_FLAG%
		THEN
			TEXT$ = "    Break    " + &
				"Desciption                     Ty " + &
				"Length   Prior Match    Comment"

			CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), "", 0%)
			CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
			GOTO ExitProgram IF UTL_REPORTX::STAT
			BREAK_FLAG% = 0%
		END IF

		TEXT$ = "    " + &
			PRNT_TIME(TV_BREAK::RUN_TIME, 0%) + " " + &
			LEFT$(TV_BREAK::DESCR, 30%) + " " + &
			TV_BREAK::BRKTYPE + " " + &
			PRNT_TIME(TV_BREAK::LENGTH, 0%) + &
			FORMAT$(TV_BREAK::PRIORITY, " ##### ") + &
			TV_BREAK::MATCH + " " + &
			LEFT$(TV_BREAK::COMMENT, 30%)

		CALL OUTP_LINE("", UTL_REPORTX, TITLE$(), TEXT$, 0%)
		GOTO ExitProgram IF UTL_REPORTX::STAT

		GOTO 17040
	END IF

17080	!
	! Try for next record
	!
	GOTO GetNextRec

 ExitTotal:
	!
	! Handle end of report
	!

 ExitProgram:
	CALL OUTP_FINISH(UTL_REPORTX)

	!
	! Exit to next program or menu
	!
	IF TRM$(UTL_REPORTX::NEXTRUN) = ""
	THEN
		CALL SUBR_3EXITPROGRAM(SCOPE, "", "")
	ELSE
		CALL SUBR_3EXITPROGRAM(SCOPE, "RUN " + UTL_REPORTX::NEXTRUN, "")
	END IF

	%PAGE

 HelpError:
	!******************************************************************
	! Help Message for an error
	!******************************************************************
	CALL HELP_3MESSAGE(SCOPE, ERN$ + " " + NUM1$(ERL) + " " + ERT$(ERR), &
		"ERR", PROGRAM$, "ERROR" + NUM1$(ERR))
	UTL_REPORTX::STAT = -1%
	GOTO ExitProgram

	%Page

19000	!******************************************************************
	! ERROR TRAPPING
	!******************************************************************

	SELECT ERR
	!
	! Record locked
	!
	CASE 154%
		SLEEP 1%
		RESUME
	END SELECT

	SELECT ERL
	CASE 300%, 17000%
		PROGRAM$ = "TV_PROGRAM"
		RESUME HelpError

	!
	! End of LOG_PROGRAM file
	!
	CASE 17020%
		RESUME ExitTotal IF ERR = 11%

	!
	! Ran out of breaks
	!
	CASE 17030%, 17040%
		RESUME 17080

	END SELECT

	!
	! Untrapped error
	!
	PROGRAM$ = SCOPE::PRG_PROGRAM
	RESUME HelpError

32767	END
