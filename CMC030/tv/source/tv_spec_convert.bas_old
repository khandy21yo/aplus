10	OPTION SIZE = (INTEGER LONG, REAL GFLOAT)

	ON ERROR GOTO 19000

	!
	! Include files
	!
	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE


 !	%INCLUDE %FROM %CDD "CDD$TOP.AR.AR_CUSTOM"
	%INCLUDE "SOURCE:[AR.OPEN]AR_CUSTOM.HB"
	MAP	(AR_CUSTOM)		AR_CUSTOM_CDD		AR_CUSTOM

 !	%INCLUDE %FROM %CDD "CDD$TOP.TV.TV_COMMER"
	%INCLUDE "SOURCE:[TV.OPEN]TV_COMMER.HB"
	MAP	(TV_COMMER)		TV_COMMER_CDD		TV_COMMER

 !	%INCLUDE %FROM %CDD "CDD$TOP.TV.TV_COMMER_SKED_INSTR"
	%INCLUDE "SOURCE:[TV.OPEN]TV_COMMER_SKED_INSTR.HB"
	MAP	(TV_COMMER_SKED_INSTR)	TV_COMMER_SKED_INSTR_CDD TV_COMMER_SKED_INSTR

 !	%INCLUDE %FROM %CDD "CDD$TOP.TV.TV_PROGRAM"
	%INCLUDE "SOURCE:[TV.OPEN]TV_PROGRAM.HB"
	MAP	(TV_PROGRAM)		TV_PROGRAM_CDD		TV_PROGRAM

 !	%INCLUDE %FROM %CDD "CDD$TOP.TV.TV_BREAK"
	%INCLUDE "SOURCE:[TV.OPEN]TV_BREAK.HB"
	MAP	(TV_BREAK)		TV_BREAK_CDD		TV_BREAK

 !	%INCLUDE %FROM %CDD "CDD$TOP.TV.TV_COPY_INSTR"
	%INCLUDE "SOURCE:[TV.OPEN]TV_COPY_INSTR.HB"
	MAP	(TV_COPY_INSTR)		TV_COPY_INSTR_CDD	TV_COPY_INSTR

 !	%INCLUDE %FROM %CDD "CDD$TOP.TV.TV_COPY_SPOTS"
	%INCLUDE "SOURCE:[TV.OPEN]TV_COPY_SPOTS.HB"
	MAP	(TV_COPY_SPOTS)		TV_COPY_SPOTS_CDD	TV_COPY_SPOTS

 !	%INCLUDE %FROM %CDD "CDD$TOP.TV.TV_FILL"
	%INCLUDE "SOURCE:[TV.OPEN]TV_FILL.HB"
	MAP	(TV_FILL)		TV_FILL_CDD		TV_FILL

	EXTERNAL STRING  FUNCTION FIND_STRING
	EXTERNAL STRING  FUNCTION TIME_STORETIME
	EXTERNAL STRING  FUNCTION DATE_STOREDATE

	!
	! Declare channels
	!
	CALL ASSG_CHANNEL(TVSYS.CH%, STAT%)

	!
	! Open the keyboard
	!
	CALL READ_INITIALIZE

100	!
	! Open UTL_DEVICE file and read information
	!
	CALL READ_DEVICE("TVSYS.ASC", TVSYS_ASC.DEV$, STAT%)

200	! RESUME LINE

250	OPEN TVSYS_ASC.DEV$ + "TVSYS.ASC" FOR INPUT AS FILE TVSYS.CH%, &
		ACCESS READ

550	INPUT LINE #TVSYS.CH%, INP$

	IF INSTR(1%,INP$,"<ENDFILE>") = 0% AND INSTR(1%,INP$,"<STARTFILE>") = 0%
	THEN
		IF INSTR(1%,INP$, "<>") = 0%
		THEN
			STRG$ = STRG$ + "<" + EDIT$(INP$,4%) + ">"
			GOTO 550
		ELSE
			STRG$ = STRG$ + INP$
		END IF
	END IF

	STRG$ = STRG$ + INP$

560	TEMP$ = "<STARTFILE>"

	GOTO 580 IF INSTR(1%, STRG$, TEMP$) = 0%

	ON_LOOP% = 0%
	ON_LOOP% =  1% IF INSTR(1% + LEN(TEMP$), STRG$, "CUSTOM")
	ON_LOOP% =  2% IF INSTR(1% + LEN(TEMP$), STRG$, "COMMER_HEADER")
	ON_LOOP% =  3% IF INSTR(1% + LEN(TEMP$), STRG$, "COMMER_SKED_INSTR")
	ON_LOOP% =  4% IF INSTR(1% + LEN(TEMP$), STRG$, "TV_PROGRAM")
	ON_LOOP% =  5% IF INSTR(1% + LEN(TEMP$), STRG$, "TV_BREAK")
	ON_LOOP% =  6% IF INSTR(1% + LEN(TEMP$), STRG$, "COPY_INSTR")
	ON_LOOP% =  7% IF INSTR(1% + LEN(TEMP$), STRG$, "COPY_SPOTS")
	ON_LOOP% =  8% IF INSTR(1% + LEN(TEMP$), STRG$, "FILL")

	stop if loop% = 3%

	IF ON_LOOP% = 0%
	THEN
		PRINT STRG$
		STOP
		GOTO 550
	END IF

	ON ON_LOOP% GOSUB &
		1000,	2000,	3000,	4000,	5000,	6000,	7000,	8000

	STRG$ = ""
	GOTO 550

580	TEMP$ = "<ENDFILE>"

	IF INSTR(1%,STRG$, TEMP$)
	THEN

		ON ON_LOOP% GOSUB &
			1200,	2200,	3200,	4200,	5200, 6200, 7200, 8200

		STRG$ = ""
		GOTO 550
	END IF

	ON ON_LOOP% GOSUB &
		1100,	2100,	3100,	4100,	5100, 6100, 7100, 8100

	STRG$ = ""

	GOTO 550

600	GOTO ExitProgram

1000	!
	! MASTER file does not exist, so create it
	!
	!======================================================================
	CALL ENTR_MESSAGE("Creating new  CUSTOM file", 1%)

	KILL AR_CUSTOM.DEV$ + "AR_CUSTOM.MAS"

1050	%INCLUDE "SOURCE:[AR.OPEN]AR_CUSTOM.CRE"

1090	! Convert the AR_CUSTOM
	COUNTER% = 0%
	RETURN

1100	!
	! Create new record
	!
	COUNTER% = COUNTER% + 1%

	AR_CUSTOM::CUSNUM = FIND_STRING(STRG$, "CUSNUM")
	AR_CUSTOM::CUSNAM = FIND_STRING(STRG$, "CUSNAM")
	AR_CUSTOM::ADD1 = FIND_STRING(STRG$, "ADD1")
	AR_CUSTOM::ADD2 = FIND_STRING(STRG$, "ADD2")
	AR_CUSTOM::CITY = FIND_STRING(STRG$, "CITY")
	AR_CUSTOM::STATE = FIND_STRING(STRG$, "STATE")
	AR_CUSTOM::ZIP = FIND_STRING(STRG$, "ZIP")
	AR_CUSTOM::COUNTRY = FIND_STRING(STRG$, "COUNTRY")
	AR_CUSTOM::PHONE = FIND_STRING(STRG$, "PHONE")
	AR_CUSTOM::METHOD = FIND_STRING(STRG$, "METHOD")
	AR_CUSTOM::STMTFLG = FIND_STRING(STRG$, "STMTFLG")
	AR_CUSTOM::ALPSRT = FIND_STRING(STRG$, "ALPSRT")
	AR_CUSTOM::SERCHRG = FIND_STRING(STRG$, "SERCHRG")

	PUT	#AR_CUSTOM.CH%

	RETURN

1200	CLOSE #AR_CUSTOM.CH%
	RETURN

2000	!
	! TV_COMMER file does not exist, so create it
	!
	!======================================================================
	CALL ENTR_MESSAGE("Creating new  TV_COMMER file", 1%)

	KILL TV_COMMER.DEV$ + "TV_COMMER.LED"

2050	%INCLUDE "SOURCE:[TV.OPEN]TV_COMMER.CRE"

2090	! Convert the TV_COMMER
	COUNTER% = 0%
	RETURN

2100	!
	! Create new record
	!
	COUNTER% = COUNTER% + 1%

	TV_COMMER::FRMNUM = FIND_STRING(STRG$, "FRMNUM")
	TV_COMMER::CUSNUM = FIND_STRING(STRG$, "CUSNUM")
	TV_COMMER::CLASS = FIND_STRING(STRG$, "COM_TYPE")
	TV_COMMER::SOURCE = FIND_STRING(STRG$, "SOURCE")
	TV_COMMER::PRIORITY = &
		(13% - VAL%(FIND_STRING(STRG$, "PRIORITY"))) * 10%
	TV_COMMER::START_DATE = DATE_STOREDATE(FIND_STRING(STRG$, "START_DATE"))
	TV_COMMER::END_DATE = DATE_STOREDATE(FIND_STRING(STRG$, "END_DATE"))
	TV_COMMER::END_DATE = "" &
		IF TV_COMMER::END_DATE = "19000000"
	TV_COMMER::CANCELLED = FIND_STRING(STRG$, "CANCELLED")
	TV_COMMER::AGENCY_NUM = FIND_STRING(STRG$, "AGENCY_NUM")
	TV_COMMER::AGENCY_PCT = VAL(FIND_STRING(STRG$, "AGENCY_PCT"))
	TV_COMMER::DATE_BILLED = DATE_STOREDATE(FIND_STRING(STRG$, "DATE_BILLED"))
	TV_COMMER::DATE_BILLED = "" &
		IF TV_COMMER::DATE_BILLED = "19000000"
	TV_COMMER::MATCH = FIND_STRING(STRG$, "MATCH")
	TV_COMMER::REP_NUM = FIND_STRING(STRG$, "REP_NUM")
	TV_COMMER::REP_PCT = VAL(FIND_STRING(STRG$, "REP_PCT"))
	TV_COMMER::SALES_NUM = FIND_STRING(STRG$, "SALES_NUM")
	TV_COMMER::SALES_PCT = VAL(FIND_STRING(STRG$, "SALES_PCT"))
	TV_COMMER::CONTACT = FIND_STRING(STRG$, "CONTACT")
	TV_COMMER::BILL_TYPE = FIND_STRING(STRG$, "BILL_TYPE")
	TV_COMMER::SPOT_SEP = TIME_STORETIME(FIND_STRING(STRG$, "SPOT_SEP"), "H")
	TV_COMMER::PROD_SEP = TIME_STORETIME(FIND_STRING(STRG$, "PROD_SEP"), "H")
	TV_COMMER::PO = FIND_STRING(STRG$, "PO")
	TV_COMMER::BILL_FLAG = FIND_STRING(STRG$, "BILL_FLAG")
	TV_COMMER::CONFIRM = FIND_STRING(STRG$, "CONFIRM")
	TV_COMMER::MOD_NUM = VAL%(FIND_STRING(STRG$, "MOD_NUM"))
	TV_COMMER::CONFLICT = TRM$(FIND_STRING(STRG$, "CONFLICT"))

	PUT	#TV_COMMER.CH%

2120	RETURN

2200	CLOSE #TV_COMMER.CH%
	RETURN

3000	!
	! TV_COMMER_SKED_INSTR file does not exist, so create it
	!
	!======================================================================
	CALL ENTR_MESSAGE("Creating new  TV_COMMER_SKED_INSTR file", 1%)

	KILL TV_COMMER_SKED_INSTR.DEV$ + "TV_COMMER_SKED_INSTR.LED"

3050	%INCLUDE "SOURCE:[TV.OPEN]TV_COMMER_SKED_INSTR.CRE"

3090	! Convert the TV_COMMER_SKED_INSTR
	COUNTER% = 0%
	LAST_FRMNUM$ = "-------------------------"
	RETURN

3100	!
	! Create new record
	!
	COUNTER% = COUNTER% + 1%

	FRMNUM$ = FIND_STRING(STRG$, "FRMNUM")
	IF FRMNUM$ <> LAST_FRMNUM$
	THEN
		LAST_FRMNUM$ = FRMNUM$
		LAST_FRMNUM% = 0%
	END IF
	LAST_FRMNUM% = LAST_FRMNUM% + 1%

	TV_COMMER_SKED_INSTR::FRMNUM = FRMNUM$
	TV_COMMER_SKED_INSTR::SKED_NUM = FORMAT$(LAST_FRMNUM%, "<0>#")
	TV_COMMER_SKED_INSTR::START_DATE = DATE_STOREDATE(FIND_STRING(STRG$, "START_DATE"))
	TV_COMMER_SKED_INSTR::START_DATE = "" &
		IF TV_COMMER_SKED_INSTR::START_DATE = "19000000"
	TV_COMMER_SKED_INSTR::END_DATE = DATE_STOREDATE(FIND_STRING(STRG$, "END_DATE"))
	TV_COMMER_SKED_INSTR::END_DATE = "" &
		IF TV_COMMER_SKED_INSTR::END_DATE = "19000000"
	TV_COMMER_SKED_INSTR::START_TIME = TIME_STORETIME(FIND_STRING(STRG$, "START_TIME"), "H")
	TV_COMMER_SKED_INSTR::END_TIME = TIME_STORETIME(FIND_STRING(STRG$, "END_TIME"), "H")
	TV_COMMER_SKED_INSTR::END_TIME = TV_COMMER_SKED_INSTR::START_TIME &
		IF (TV_COMMER_SKED_INSTR::END_TIME = "") OR &
			(TV_COMMER_SKED_INSTR::END_TIME = "000000")
	TV_COMMER_SKED_INSTR::IN_WEEKS = VAL(FIND_STRING(STRG$, "IN_WEEKS"))
	TV_COMMER_SKED_INSTR::OUT_WEEKS = VAL(FIND_STRING(STRG$, "OUT_WEEKS"))
	TV_COMMER_SKED_INSTR::LENGTH = TIME_STORETIME(FIND_STRING(STRG$, "LENGTH"), "H")
	TV_COMMER_SKED_INSTR::RATE_PER_SPOT = VAL(FIND_STRING(STRG$, "RATE_PER_SPOT"))
	TV_COMMER_SKED_INSTR::SPOTS_PER_DAY(I%) = &
		VAL(FIND_STRING(STRG$, "SPD_" + NUM1$(I%))) &
		FOR I% = 0% TO 6%
	TV_COMMER_SKED_INSTR::TOTAL_SPOTS = VAL%(FIND_STRING(STRG$, "TOTAL_SPOTS"))

	PUT	#TV_COMMER_SKED_INSTR.CH%

3120	RETURN

3200	CLOSE #TV_COMMER_SKED_INSTR.CH%
	RETURN

4000	!
	! TV_PROGRAM file does not exist, so create it
	!
	!======================================================================
	CALL ENTR_MESSAGE("Creating new  TV_PROGRAM file", 1%)

	KILL TV_PROGRAM.DEV$ + "TV_PROGRAM.MAS"

4050	%INCLUDE "SOURCE:[TV.OPEN]TV_PROGRAM.CRE"

4090	! Convert the TV_PROGRAM
	COUNTER% = 0%
	LAST_MAIN$ = ""

	RETURN

4100	!
	! Create new record
	!
	COUNTER% = COUNTER% + 1%

	TV_PROGRAM::PRGNUM = FORMAT$(VAL(FIND_STRING(STRG$,"PRGNUM")), "<0>#########")
	FOR I%=0% TO 6%
		TV_PROGRAM::START_TIME(I%) = &
			TIME_STORETIME(FIND_STRING(STRG$,"START_TIME_"+NUM1$(I%)), "H")
		TV_PROGRAM::START_TIME(I%) = "" &
			IF TV_PROGRAM::START_TIME(I%) = "000000"
	NEXT I%
	TV_PROGRAM::FROM_DATE = DATE_STOREDATE(FIND_STRING(STRG$,"FROM_DATE"))
	TV_PROGRAM::FROM_DATE = "" IF TV_PROGRAM::FROM_DATE = "19000000"
	TV_PROGRAM::TO_DATE = DATE_STOREDATE(FIND_STRING(STRG$,"TO_DATE"))
	TV_PROGRAM::TO_DATE = "" IF TV_PROGRAM::TO_DATE = "19000000"
	TV_PROGRAM::TITLE = FIND_STRING(STRG$,"TITLE")
	TV_PROGRAM::SOURCE = FIND_STRING(STRG$,"SOURCE")
	TV_PROGRAM::PTYPE = FIND_STRING(STRG$,"PTYPE")
	TV_PROGRAM::LENGTH = TIME_STORETIME(FIND_STRING(STRG$,"LENGTH"), "H")
	TV_PROGRAM::COMMENT = FIND_STRING(STRG$,"COMMENT")

	IF TV_PROGRAM::LENGTH < "000599"
	THEN
		TV_PROGRAM::CUTAWAY = LAST_MAIN$
	ELSE
		TV_PROGRAM::CUTAWAY = ""
		LAST_MAIN$ = TV_PROGRAM::PRGNUM + ""
	END IF

	PUT	#TV_PROGRAM.CH%

	RETURN

4200	CLOSE TV_PROGRAM.CH%
	RETURN

5000	!
	! TV_BREAK file does not exist, so create it
	!
	!======================================================================
	CALL ENTR_MESSAGE("Creating new  TV_BREAK file", 1%)

	KILL TV_BREAK.DEV$ + "TV_BREAK.MAS"

5050	%INCLUDE "SOURCE:[TV.OPEN]TV_BREAK.CRE"

5090	! Convert the TV_BREAK
	COUNTER% = 0%
	RETURN

5100	!
	! Create new record
	!
	COUNTER% = COUNTER% + 1%

	TV_BREAK::PRGNUM = FORMAT$(VAL(FIND_STRING(STRG$,"PRGNUM")), "<0>#########")
	TV_BREAK::RUN_TIME = TIME_STORETIME(FIND_STRING(STRG$, "RUN_TIME"), "H")
	TV_BREAK::DESCR = FIND_STRING(STRG$, "DESCR")
	TV_BREAK::BRKTYPE = FIND_STRING(STRG$, "BRKTYPE")
	TV_BREAK::LENGTH = TIME_STORETIME(FIND_STRING(STRG$, "LENGTH"), "H")
	TV_BREAK::COMMENT = FIND_STRING(STRG$, "COMMENT")
	TV_BREAK::MAXCOM = VAL%(FIND_STRING(STRG$, "MAXCOM"))
	TV_BREAK::PRIORITY = VAL%(FIND_STRING(STRG$, "PRIORITY"))
	TV_BREAK::MATCH = FIND_STRING(STRG$, "MATCH")

	PUT	#TV_BREAK.CH%

	RETURN

5200	CLOSE #TV_BREAK.CH%
	RETURN

6000	!
	! MASTER file does not exist, so create it
	!
	!======================================================================
	CALL ENTR_MESSAGE("Creating new  TV_COPY_INSTR file", 1%)

	KILL TV_COPY_INSTR.DEV$ + "TV_COPY_INSTR.LED"

6050	%INCLUDE "SOURCE:[TV.OPEN]TV_COPY_INSTR.CRE"

6090	! Convert the AR_CUSTOM
	COUNTER% = 0%
	RETURN

6100	!
	! Create new record
	!
	COUNTER% = COUNTER% + 1%

	TV_COPY_INSTR::FRMNUM = FIND_STRING(STRG$, "FRMNUM")
	TV_COPY_INSTR::SEQNUM = FIND_STRING(STRG$, "SEQNUM")
	TV_COPY_INSTR::FROM_DATE = DATE_STOREDATE(FIND_STRING(STRG$, "FROM_DATE"))
	TV_COPY_INSTR::TO_DATE = DATE_STOREDATE(FIND_STRING(STRG$, "TO_DATE"))
	TV_COPY_INSTR::LENGTH = TIME_STORETIME(FIND_STRING(STRG$, "LENGTH"), "H")
	TV_COPY_INSTR::FROM_TIME = TIME_STORETIME(FIND_STRING(STRG$, "FROM_TIME"), "H")
	TV_COPY_INSTR::TO_TIME = TIME_STORETIME(FIND_STRING(STRG$, "TO_TIME"), "H")
	TV_COPY_INSTR::SPOT_ROTATION = FIND_STRING(STRG$, "SPOT_ROTATION")
	TV_COPY_INSTR::CURRENT_ROTATION = VAL%(FIND_STRING(STRG$, "CURRENT_ROTATION"))

	PUT	#TV_COPY_INSTR.CH%

6110	RETURN

6200	CLOSE #TV_COPY_INSTR.CH%
	RETURN

7000	!
	! MASTER file does not exist, so create it
	!
	!======================================================================
	CALL ENTR_MESSAGE("Creating new  TV_COPY_SPOTS file", 1%)

	KILL TV_COPY_SPOTS.DEV$ + "TV_COPY_SPOTS.LED"

7050	%INCLUDE "SOURCE:[TV.OPEN]TV_COPY_SPOTS.CRE"

7090	! Convert the AR_CUSTOM
	COUNTER% = 0%
	RETURN

7100	!
	! Create new record
	!
	COUNTER% = COUNTER% + 1%

	TV_COPY_SPOTS::FRMNUM = FIND_STRING(STRG$, "FRMNUM")
	TV_COPY_SPOTS::SEQNUM = FIND_STRING(STRG$, "SEQNUM")
	TV_COPY_SPOTS::SPOT_NUM = FIND_STRING(STRG$, "SPOT_NUM")
	TV_COPY_SPOTS::CART_NUM = FIND_STRING(STRG$, "CART_NUM")
	TV_COPY_SPOTS::AGENCY_CART = FIND_STRING(STRG$, "AGENCY_CART")
	TV_COPY_SPOTS::DESCR = FIND_STRING(STRG$, "DESCR")

	PUT	#TV_COPY_SPOTS.CH%

7110	RETURN

7200	CLOSE #TV_COPY_SPOTS.CH%
	RETURN

8000	!
	! MASTER file does not exist, so create it
	!
	!======================================================================
	CALL ENTR_MESSAGE("Creating new  TV_FILL file", 1%)

	KILL TV_FILL.DEV$ + "TV_FILL.MAS"

8050	%INCLUDE "SOURCE:[TV.OPEN]TV_FILL.CRE"

8090	! Convert the AR_CUSTOM
	COUNTER% = 0%
	RETURN

8100	!
	! Create new record
	!
	COUNTER% = COUNTER% + 1%

	TV_FILL::FILNUM = FIND_STRING(STRG$, "FILNUM")
	TV_FILL::DESCR = FIND_STRING(STRG$, "DESCR")
	TV_FILL::FCLASS = FIND_STRING(STRG$, "FTYPE")
	TV_FILL::FROM_DATE = DATE_STOREDATE(FIND_STRING(STRG$, "FROM_DATE"))
	TV_FILL::TO_DATE = DATE_STOREDATE(FIND_STRING(STRG$, "TO_DATE"))
	TV_FILL::LENGTH = TIME_STORETIME(FIND_STRING(STRG$, "LENGTH"), "H")
	TV_FILL::RUNS = VAL%(FIND_STRING(STRG$, "RUNS"))
	TV_FILL::CUTS = VAL%(FIND_STRING(STRG$, "CUTS"))
	TV_FILL::CURRENT_CUT = VAL%(FIND_STRING(STRG$, "CURRENT_CUT"))

8110	PUT	#TV_FILL.CH%

	RETURN

8200	CLOSE #TV_FILL.CH%
	RETURN

 ExitProgram:
15000	!*******************************************************************
	! Exit program
	!*******************************************************************

	CALL SUBR_EXITPROGRAM("", "")

	%PAGE

 HelpError:
	!******************************************************************
	! Help Message for an error
	!******************************************************************
	CALL HELP_MESSAGE(ERN$ + " " + NUM1$(ERL) + " " + ERT$(ERR), &
				"ERR", PROGRAM$, "ERROR" + NUM1$(ERR))
	GOTO ExitProgram

	%Page

19000	!*******************************************************************
	! Error trapping
	!*******************************************************************

	!===================================================================
	! Error NUMBER(ERR) cases

	SELECT ERR
		CASE 11%	! End of file
			SELECT ERL
				CASE 550%	! End of apsys.asc file
					RESUME 560 IF STRG$ <> ""
					RESUME 600
			END SELECT

 !		CASE 134%, 153% | Dup key detected, record already exists
 !			IF ERL > 1000%
 !			THEN
 !				CALL ENTR_MESSAGE("DUPLICATE KEY/RECORD EXISTS ERL" + &
 !					NUM1$(ERL) + " ERR" + NUM1$(ERR), 1%)
 !				RESUME 1090
 !			END IF
	END SELECT

	!===================================================================
	! Error LINE(ERL) cases
	!===================================================================
	SELECT ERL
		CASE 250		! Conversion file is missing
			CALL ENTR_MESSAGE("TVSYS.ASC file is missing" + &
				"ERROR "+NUM1$(ERR),0%)
			RESUME ExitProgram

		CASE 1000%		! Kill MASTER file
			RESUME 1050

		CASE 2000%		! Kill STATUS file
			RESUME 2050

		CASE 2100%
			RESUME 2120

		CASE 3000%		! Kill RATE file
			RESUME 3050

		CASE 3100%
			RESUME 3120

		CASE 4000%		! Kill STD_ERNDED file
			RESUME 4050

		CASE 5000%		! Kill ERNDED_DEF file
			RESUME 5050

		CASE 6000%
			RESUME 6050
		CASE 6100
			RESUME 6110

		CASE 7000%
			RESUME 7050
		CASE 7100%
			RESUME 7110

		CASE 8000%
			RESUME 8050
		CASE 8100%
			RESUME 8110
	END SELECT

	!
	! Untrapped error
	!
	ON ERROR GOTO 0
	PROGRAM$ = SCOPE::PRG_PROGRAM
	RESUME HelpError

32767	END
