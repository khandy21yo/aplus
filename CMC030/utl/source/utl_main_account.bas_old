1	%TITLE "Transaction Type"
	%SBTTL "UTL_MAIN_ACCOUNT"
	%IDENT "V3.6a Calico"

	FUNCTION LONG UTL_MAIN_ACCOUNT(CDD_WINDOW_CDD SMG_WINDOW, LONG MOPTION, &
		LONG MLOOP, LONG MFLAG, STRING MVALUE)

	!
	! COPYRIGHT (C) 1987, 1988 BY
	!
	! Computer Management Center, Inc.
	! Idaho Falls, Idaho.
	!
	! This software is furnished under a license and may be used and
	! copied only in accordance with terms of such license and with
	! the inclusion of the above copyright notice.  This software or
	! any other copies thereof may not be provided or otherwise made
	! available to any other person.  No title to and ownership of
	! the software is hereby transferred.
	!
	! The information in this software is subject to change without
	! notice and should not be construed as a commitment by
	! Computer Management Center, Inc.
	!
	! CMC assumes no responsibility for the use or reliability of
	! its software on equipment which is not supported by CMC.
	!
	!++
	! ID:0110
	!
	! Abstract:HELP
	!	.b
	!	.lm +5
	!	The ^*Transaction Type\* option in the COMMAND menu provides the means to
	!	establish a relationship between the transaction type and the General Ledger
	!	account number for each transaction completed.
	!	.lm -5
	!
	! Index:
	!
	! Option:
	!
	! Compile:
	!
	!	$ BAS UTL_SOURCE:UTL_MAIN_ACCOUNT/LINE
	!	$ LIB FUNC_LIB:CMCFUN/REP UTL_MAIN_ACCOUNT
	!	$ DELETE UTL_MAIN_ACCOUNT.OBJ;*
	!
	! Author:
	!
	!	06/30/88 - Aaron Redd
	!
	! Modification history:
	!
	!	05/13/92 - Dan Perkins
	!		Use FUNC_TESTENTRY to test input.
	!
	!	06/12/92 - Kevin Handy
	!		Clean up (check)
	!
	!	04/16/93 - Kevin Handy
	!		Clean up (Check)
	!
	!	04/15/95 - Kevin Handy
	!		(V3.6)
	!		Update to V3.6 coding standards
	!
	!	10/30/96 - Kevin Handy
	!		Reformat source code
	!
	!	08/22/98 - Kevin Handy
	!		(V3.6a Calico)
	!		Update to V3.6a coding standards
	!--
	%PAGE

	!
	! Set up compiling options
	!
	OPTION SIZE = (REAL GFLOAT, INTEGER LONG)

	%INCLUDE "FUNC_INCLUDE:FUNCTION.HB"

	MAP (SCOPE) SCOPE_STRUCT SCOPE

	%INCLUDE "FUNC_INCLUDE:UTL_WINDOW.INC"
	%INCLUDE "FUNC_INCLUDE:MAIN_WINDOW.COM"

	%INCLUDE "SOURCE:[CDD.OPEN]CDD_WINDOW.HB"

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_ACCOUNT.HB"
	MAP (UTL_ACCOUNT)	UTL_ACCOUNT_CDD		UTL_ACCOUNT
	MAP (UTL_ACCOUNT_OLD)	UTL_ACCOUNT_CDD		UTL_ACCOUNT_OLD, &
							UTL_ACCOUNT2

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_LOCATION.HB"
	MAP (UTL_LOCATION)	UTL_LOCATION_CDD	UTL_LOCATION

	%INCLUDE "SOURCE:[UTL.OPEN]UTL_TRANSTYPE.HB"
	MAP (UTL_TRANSTYPE)	UTL_TRANSTYPE_CDD	UTL_TRANSTYPE

	%INCLUDE "SOURCE:[GL.OPEN]GL_CHART.HB"
	MAP (GL_CHART_SCAN)	GL_CHART_CDD		GL_CHART_SCAN

	!
	! Common Areas
	!
	! These areas store information that is re-used between
	! calls to these functions.
	!
	COM (CH_UTL_ACCOUNT) &
		UTL_ACCOUNT.CH%, &
		UTL_ACCOUNT.READONLY%

	!
	! External functions
	!
	EXTERNAL LONG    FUNCTION MAIN_WINDOW
	EXTERNAL LONG    FUNCTION FUNC_TESTENTRY

	%PAGE

	ON ERROR GOTO 29000

	SELECT MOPTION

	!
	! Initialization
	!
	! This option is used to initialize the window structure,
	! set up the default values for add, and open all files
	! necessary that have not already been opened.
	!
	CASE OPT_INIT

		!******************************************************************
		! Set up information
		!******************************************************************

		!
		! Define window
		!
		SMG_WINDOW::DESCR = "Transaction Account Table"
		SMG_WINDOW::NHELP = "UTL_MAIN_ACCOUNT"
		SMG_WINDOW::CURREC = -2%
		SMG_WINDOW::HSIZE = 76%
		SMG_WINDOW::VSIZE = 8%
		SMG_WINDOW::HPOS  = 3%
		SMG_WINDOW::VPOS  = 11%
		SMG_WINDOW::FLAGS = 0%
		SMG_WINDOW::NITEMS= 2%

		SMG_WINDOW::NKEYS = 1%
		SMG_WINDOW::KNAME(0%) = "Location"
			SMG_WINDOW::KFIELD(0%, 0%) = 2%
			SMG_WINDOW::KFIELD(0%, 1%) = 1%
			SMG_WINDOW::KFIELD(0%, 2%) = 2%

		SMG_WINDOW::HVIEW = 76%
		SMG_WINDOW::VVIEW = 8%
		SMG_WINDOW::VHPOS = 3%
		SMG_WINDOW::VVPOS = 11%

		CALL READ_DEFAULTS(SMG_WINDOW) &
			IF INSTR(1%, " QV", MVALUE) <= 1%

700		!
		! Declare channels
		!
		IF UTL_ACCOUNT.CH% > 0%
		THEN
			!
			! Already open, set flag to read-only if was
			! that way from last time.
			!
			SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%) &
				IF UTL_ACCOUNT.READONLY%
			GOTO 790
		END IF

		!
		! Open main file (existing) for modification
		!
750		%INCLUDE "SOURCE:[UTL.OPEN]UTL_ACCOUNT.CRE"
		UTL_ACCOUNT.READONLY% = 0%
		GOTO 790

760		!
		! If unable to open for modify, try to open with read
		! access only.
		!
		%INCLUDE "SOURCE:[UTL.OPEN]UTL_ACCOUNT.OPN"
		SMG_WINDOW::FLAGS = (SMG_WINDOW::FLAGS OR 2%)
		UTL_ACCOUNT.READONLY% = -1%

		GOTO 790

770		!
		! File not open, so reset channel
		!
		CALL ASSG_FREECHANNEL(UTL_ACCOUNT.CH%)

		EXIT FUNCTION

790		SMG_WINDOW::CHAN  = UTL_ACCOUNT.CH%
		RESET #UTL_ACCOUNT.CH%
		GET #UTL_ACCOUNT.CH%, REGARDLESS

	!
	! Display the background
	!
	! This option is used to display the background information on the
	! screen.  It must first clear any junk on the screen, and then
	! write the background onto it.
	!
20100	CASE OPT_BACKGROUND

		SMG_STATUS% = SMG$BEGIN_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

		SMG_STATUS% = SMG$ERASE_DISPLAY(SMG_WINDOW::WNUMBER)

		DATA	04,  10, "(01) Location #", &
			05,  10, "(02) Trans Type", &
			0,   0, ""

		RESTORE

		READ XPOS%, YPOS%, XSTR$
		I% = 0%

		WHILE (XPOS% <> 0)
			I% = I% + 1%
			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				XSTR$, XPOS%, YPOS%) IF (SMG_WINDOW::HFLAG(I%) AND 2%)=0%

			READ XPOS%, YPOS%, XSTR$
		NEXT

		SMG_STATUS% = SMG$END_DISPLAY_UPDATE(SMG_WINDOW::WNUMBER)

	!
	! Enter/Display/Default
	!
	! This option is used to enter the data from the user, display data,
	! set defaults, and return the data back according to MFLAG.
	!
20200	CASE OPT_ENTRY

		TEMP$, TEMP1$ = TRM$(SCOPE::PRG_ITEM)
		TEMP$ = "View starting at" IF TEMP$ = "View"

		SCOPE::PRG_ITEM = "FLD" + FORMAT$(MLOOP, "<0>##")

 ReEnter:	SCOPE::SCOPE_EXIT = 0%

		SELECT MLOOP

		CASE 1%

	!++
	! Abstract:FLD001
	!	^*(01) Location\*
	!	.b
	!	.lm +5
	!	The ^*Location\* field is provided to enter a code identifying
	!	this location. If the location has been previously defined in
	!	the Company Profile Maintenance record, the name of the location
	!	will automatically appear. If the location code is not valid,
	!	a message will appear on the screen: ^*Input undefined, enter
	!	anyway <Yes/No>: No\*. The default ^*"No"\* may be accepted by
	!	pressing <Do>. The invalid code may be entered by typing "Y"
	!	and pressing <Do>.
	!	.b
	!	Pressing ^*<List Choices>\* at this field will provide a list
	!	of valid location codes.
	!	.lm -5
	!
	! Index:
	!	.x Location>Transaction Type
	!	.x Transaction Type>Location
	!
	!--


			UTL_ACCOUNT::LOCATION = ENTR_3STRING(SCOPE, SMG_WINDOW::WNUMBER, &
				"4;28", TEMP$, &
				UTL_ACCOUNT::LOCATION, MFLAG, "'E", &
				MVALUE)

			IF (SCOPE::SCOPE_EXIT = SMG$K_TRM_F14)
			THEN
				IF MAIN_WINDOW(UTL_MAIN_LOCATION.ID, "V0") = 1%
				THEN
				UTL_ACCOUNT::LOCATION = &
						UTL_LOCATION::LOCATION
				END IF
				GOTO Reenter
			END IF

		CASE 2%

	!++
	! Abstract:FLD002
	!	^*(02) Transaction Type\*
	!	.b
	!	.lm +5
	!	This field is to be entered with the ^*Transaction Type\*.
	!	.b
	!	If the transaction type entered has been previously defined in the
	!	Company Profile Maintenance record, the transaction description
	!	will automatically appear. If the transaction code is not valid, a
	!	message will appear on the screen: ^*Input undefined, enter anyway
	!	<Yes/No>: No.\* The default "No" may be accepted by pressing ^*<Do>\*,
	!	or the undefined type may be entered by pressing ^*"Y"\* and ^*<Do>\*.
	!	.b
	!	Pressing ^*<List Choices>\* at this field will provide a list of
	!	valid transaction codes.
	!	.lm -5
	!
	! Index:
	!	.x Transaction Type
	!
	!--


			UTL_ACCOUNT::TRANSTYPE = ENTR_3STRING(SCOPE, SMG_WINDOW::WNUMBER, &
				"5;28", TEMP$, &
				UTL_ACCOUNT::TRANSTYPE, MFLAG, "'E", &
				MVALUE)

			IF (SCOPE::SCOPE_EXIT = SMG$K_TRM_F14)
			THEN
				IF MAIN_WINDOW(UTL_MAIN_TRANSTYPE.ID,"V0")   = 1%
				THEN
					UTL_ACCOUNT::TRANSTYPE = &
						UTL_TRANSTYPE::CODE
				END IF
				GOTO Reenter
			END IF

		END SELECT

		SCOPE::PRG_ITEM = TEMP1$

	!
	! Test values
	!
20300	CASE OPT_TESTENTRY
		UTL_MAIN_ACCOUNT = 0%

		SELECT MLOOP

		CASE 1%
			!
			! Is the input defined?
			!
			UTL_MAIN_ACCOUNT = FUNC_TESTENTRY( SMG_WINDOW, &
				UTL_ACCOUNT::LOCATION, &
				UTL_LOCATION::LOCNAME, &
				"UTL", MLOOP, "PRG", &
				"Location", UTL_MAIN_LOCATION.ID)

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				UTL_LOCATION::LOCNAME,4%,33%, ,SMG$M_BOLD)

		CASE 2%
			!
			! Is the input defined?
			!
			UTL_MAIN_ACCOUNT = FUNC_TESTENTRY( SMG_WINDOW, &
				UTL_ACCOUNT::TRANSTYPE, &
				UTL_TRANSTYPE::DESCRIPTION, &
				"UTL", MLOOP, "PRG", &
				"Trans type", UTL_MAIN_TRANSTYPE.ID)

			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				UTL_TRANSTYPE::DESCRIPTION,5%,33%, ,SMG$M_BOLD)

			IF (MVALUE = "ADD")
			THEN
				GET #SMG_WINDOW::CHAN, &
					KEY#0% EQ UTL_ACCOUNT::LOCATION + &
					UTL_ACCOUNT::TRANSTYPE, REGARDLESS

					UTL_MAIN_ACCOUNT = 2%
					CALL ENTR_3MESSAGE(SCOPE, "Record Already Exists", 0%)
				END IF

		END SELECT

	CASE OPT_DISPLAY

		IF (SMG_WINDOW::HFLAG(1%) AND 2%)=0%
		THEN
			STORENAME$ = STRING$(40%, 63%)

			STORENAME$ = UTL_LOCATION::LOCNAME &
				IF MAIN_WINDOW(UTL_MAIN_LOCATION.ID,"Q0"+UTL_ACCOUNT::LOCATION) = 1%

			!
			! Display name (ALSO IN TESTENTRY)
			!
			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				STORENAME$,4%,33%, ,SMG$M_BOLD)
		END IF

		IF (SMG_WINDOW::HFLAG(2%) AND 2%)=0%
		THEN
			TYPENAME$ = &
				STRING$(LEN(UTL_TRANSTYPE::DESCRIPTION), &
				ASCII("?"))

			TYPENAME$ = UTL_TRANSTYPE::DESCRIPTION+SPACE$(10%) &
				IF MAIN_WINDOW(UTL_MAIN_TRANSTYPE.ID, &
				"Q0"+UTL_ACCOUNT::TRANSTYPE) = 1%
			!
			! Display name (ALSO IN TESTENTRY)
			!
			SMG_STATUS% = SMG$PUT_CHARS(SMG_WINDOW::WNUMBER, &
				TYPENAME$,5%,33%, ,SMG$M_BOLD)
		END IF


	!
	! Set UTL_ACCOUNT_OLD value
	!
20500	CASE OPT_SETOLD
		UTL_ACCOUNT_OLD = UTL_ACCOUNT

	!
	! Restore UTL_ACCOUNT_OLD value
	!
	CASE OPT_RESETOLD
		UTL_ACCOUNT = UTL_ACCOUNT_OLD

	!
	! Set default value
	!
	CASE OPT_SETDEFAULT
		UTL_ACCOUNT2 = UTL_ACCOUNT

	!
	! Restore default value
	!
	CASE OPT_RESETDEFAULT
		UTL_ACCOUNT = UTL_ACCOUNT2
		UTL_ACCOUNT::ACCOUNT = GL_CHART_SCAN::ACCT

	!
	! View header
	!
	CASE OPT_VIEW

		SELECT MLOOP

		!
		! Title (One line only)
		!
		CASE 1%
			MVALUE = "  Location TransType"

		!
		! Positions of lines
		!
		CASE 2%
			MVALUE = "011"

		!
		! Convert current record into text
		!
		CASE 3%
			MVALUE = UTL_ACCOUNT::LOCATION + "     " + &
				UTL_ACCOUNT::TRANSTYPE

		END SELECT

	!
	! Find
	!
	CASE OPT_FIND

		SELECT MLOOP

		CASE 0%
			FIND #SMG_WINDOW::CHAN, &
				KEY#0% GE UTL_ACCOUNT::ACCOUNT + &
				UTL_ACCOUNT::LOCATION + &
				UTL_ACCOUNT::TRANSTYPE, REGARDLESS

		END SELECT

27000	CASE OPT_SUBWIND

		!
		! Select sub-option of array
		!
		SELECT MLOOP

		!
		! Find first record (if there is any)
		!
		CASE 1%
			!
			! Set init value
			!
			SMG_WINDOW::CURREC = -1%

27110			!
			! Search for first record
			!
			FIND #SMG_WINDOW::CHAN, &
				KEY#0% EQ GL_CHART_SCAN::ACCT + "", &
				REGARDLESS

27120			!
			! Get a record
			!
			GET #SMG_WINDOW::CHAN

			IF GL_CHART_SCAN::ACCT = UTL_ACCOUNT::ACCOUNT
			THEN
				!
				! Record find
				!
				SMG_WINDOW::CURREC = 0%
			END IF

		!
		! Check if still right key
		!
		CASE 3%
			SMG_WINDOW::CURREC = -1%

			IF GL_CHART_SCAN::ACCT = UTL_ACCOUNT::ACCOUNT
			THEN
				SMG_WINDOW::CURREC = 0%
			END IF

		END SELECT

	END SELECT

28000	EXIT FUNCTION

29000	!
	! Trap errors
	!
	SELECT ERL
	!
	! Unable to open Read/Write
	!
	CASE 750%
		RESUME 760 IF ERR = 10%
		UTL_MAIN_ACCOUNT = ERR
		RESUME 770

	!
	! Unable to open Read/Only
	!
	CASE 760%
		UTL_MAIN_ACCOUNT = ERR
		RESUME 770

	!
	! Unable to reset
	!
	CASE 790%
		RESUME 32767

	!
	! Record does not already exist
	!
	CASE 20300%
		RESUME 32767 IF ERR = 155%

	!
	! Error while loading array
	!
	CASE 27110%
		!
		! Nothing to load
		!
		RESUME 28000

	CASE 27120%
		!
		! Read all records
		!
		RESUME 28000 IF ERR = 11%
	END SELECT

	ON ERROR GO BACK

32767	END FUNCTION
	!+-+-+
	! More menu option not hidden in mast
	!++
	! Abstract:RECORD
	!	^*Record\*
	!	.b
	!	.lm +5
	!	The ^*Record\* option in the COMMAND option provides faster access to the
	!	file. It makes it possible to scan or view all products.
	!	.lm -5
	!
	! Index:
	!	.x Record
	!
	!--
